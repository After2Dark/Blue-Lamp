
Blue Lamp.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000103c  080001c8  080001c8  000101c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000d39c8  08001204  08001204  00011204  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080d4bcc  080d4bcc  000e4bd4  2**0
                  CONTENTS
  4 .ARM          00000000  080d4bcc  080d4bcc  000e4bd4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080d4bcc  080d4bd4  000e4bd4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080d4bcc  080d4bcc  000e4bcc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080d4bd0  080d4bd0  000e4bd0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000e4bd4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0003fc24  20000000  080d4bd4  000f0000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2003fc24  080d4bd4  000efc24  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000e4bd4  2**0
                  CONTENTS, READONLY
 12 .debug_info   000012e5  00000000  00000000  000e4c04  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000025a  00000000  00000000  000e5ee9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000070  00000000  00000000  000e6148  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000058  00000000  00000000  000e61b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001b752  00000000  00000000  000e6210  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000c9d  00000000  00000000  00101962  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0009b30b  00000000  00000000  001025ff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0019d90a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000114  00000000  00000000  0019d960  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c8 <__do_global_dtors_aux>:
 80001c8:	b510      	push	{r4, lr}
 80001ca:	4c05      	ldr	r4, [pc, #20]	; (80001e0 <__do_global_dtors_aux+0x18>)
 80001cc:	7823      	ldrb	r3, [r4, #0]
 80001ce:	b933      	cbnz	r3, 80001de <__do_global_dtors_aux+0x16>
 80001d0:	4b04      	ldr	r3, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x1c>)
 80001d2:	b113      	cbz	r3, 80001da <__do_global_dtors_aux+0x12>
 80001d4:	4804      	ldr	r0, [pc, #16]	; (80001e8 <__do_global_dtors_aux+0x20>)
 80001d6:	f3af 8000 	nop.w
 80001da:	2301      	movs	r3, #1
 80001dc:	7023      	strb	r3, [r4, #0]
 80001de:	bd10      	pop	{r4, pc}
 80001e0:	20000000 	.word	0x20000000
 80001e4:	00000000 	.word	0x00000000
 80001e8:	080011ec 	.word	0x080011ec

080001ec <frame_dummy>:
 80001ec:	b508      	push	{r3, lr}
 80001ee:	4b03      	ldr	r3, [pc, #12]	; (80001fc <frame_dummy+0x10>)
 80001f0:	b11b      	cbz	r3, 80001fa <frame_dummy+0xe>
 80001f2:	4903      	ldr	r1, [pc, #12]	; (8000200 <frame_dummy+0x14>)
 80001f4:	4803      	ldr	r0, [pc, #12]	; (8000204 <frame_dummy+0x18>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	bd08      	pop	{r3, pc}
 80001fc:	00000000 	.word	0x00000000
 8000200:	20000004 	.word	0x20000004
 8000204:	080011ec 	.word	0x080011ec

08000208 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000208:	b480      	push	{r7}
 800020a:	b083      	sub	sp, #12
 800020c:	af00      	add	r7, sp, #0
 800020e:	4603      	mov	r3, r0
 8000210:	6039      	str	r1, [r7, #0]
 8000212:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000214:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000218:	2b00      	cmp	r3, #0
 800021a:	db0a      	blt.n	8000232 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800021c:	683b      	ldr	r3, [r7, #0]
 800021e:	b2da      	uxtb	r2, r3
 8000220:	490c      	ldr	r1, [pc, #48]	; (8000254 <__NVIC_SetPriority+0x4c>)
 8000222:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000226:	0112      	lsls	r2, r2, #4
 8000228:	b2d2      	uxtb	r2, r2
 800022a:	440b      	add	r3, r1
 800022c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8000230:	e00a      	b.n	8000248 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000232:	683b      	ldr	r3, [r7, #0]
 8000234:	b2da      	uxtb	r2, r3
 8000236:	4908      	ldr	r1, [pc, #32]	; (8000258 <__NVIC_SetPriority+0x50>)
 8000238:	79fb      	ldrb	r3, [r7, #7]
 800023a:	f003 030f 	and.w	r3, r3, #15
 800023e:	3b04      	subs	r3, #4
 8000240:	0112      	lsls	r2, r2, #4
 8000242:	b2d2      	uxtb	r2, r2
 8000244:	440b      	add	r3, r1
 8000246:	761a      	strb	r2, [r3, #24]
}
 8000248:	bf00      	nop
 800024a:	370c      	adds	r7, #12
 800024c:	46bd      	mov	sp, r7
 800024e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000252:	4770      	bx	lr
 8000254:	e000e100 	.word	0xe000e100
 8000258:	e000ed00 	.word	0xe000ed00

0800025c <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 800025c:	b580      	push	{r7, lr}
 800025e:	b082      	sub	sp, #8
 8000260:	af00      	add	r7, sp, #0
 8000262:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8000264:	687b      	ldr	r3, [r7, #4]
 8000266:	3b01      	subs	r3, #1
 8000268:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800026c:	d301      	bcc.n	8000272 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 800026e:	2301      	movs	r3, #1
 8000270:	e00f      	b.n	8000292 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8000272:	4a0a      	ldr	r2, [pc, #40]	; (800029c <SysTick_Config+0x40>)
 8000274:	687b      	ldr	r3, [r7, #4]
 8000276:	3b01      	subs	r3, #1
 8000278:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800027a:	210f      	movs	r1, #15
 800027c:	f04f 30ff 	mov.w	r0, #4294967295
 8000280:	f7ff ffc2 	bl	8000208 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8000284:	4b05      	ldr	r3, [pc, #20]	; (800029c <SysTick_Config+0x40>)
 8000286:	2200      	movs	r2, #0
 8000288:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800028a:	4b04      	ldr	r3, [pc, #16]	; (800029c <SysTick_Config+0x40>)
 800028c:	2207      	movs	r2, #7
 800028e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8000290:	2300      	movs	r3, #0
}
 8000292:	4618      	mov	r0, r3
 8000294:	3708      	adds	r7, #8
 8000296:	46bd      	mov	sp, r7
 8000298:	bd80      	pop	{r7, pc}
 800029a:	bf00      	nop
 800029c:	e000e010 	.word	0xe000e010

080002a0 <initialization>:
uint8_t minute_2 = 0;
uint8_t hour = 0;
uint8_t hour_2 = 0;

void initialization()
{
 80002a0:	b480      	push	{r7}
 80002a2:	af00      	add	r7, sp, #0
	RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 80002a4:	4b9e      	ldr	r3, [pc, #632]	; (8000520 <initialization+0x280>)
 80002a6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80002a8:	4a9d      	ldr	r2, [pc, #628]	; (8000520 <initialization+0x280>)
 80002aa:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80002ae:	6453      	str	r3, [r2, #68]	; 0x44
	RCC->APB2ENR |= RCC_APB2ENR_LTDCEN;
 80002b0:	4b9b      	ldr	r3, [pc, #620]	; (8000520 <initialization+0x280>)
 80002b2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80002b4:	4a9a      	ldr	r2, [pc, #616]	; (8000520 <initialization+0x280>)
 80002b6:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80002ba:	6453      	str	r3, [r2, #68]	; 0x44
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOCEN;
 80002bc:	4b98      	ldr	r3, [pc, #608]	; (8000520 <initialization+0x280>)
 80002be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c0:	4a97      	ldr	r2, [pc, #604]	; (8000520 <initialization+0x280>)
 80002c2:	f043 0304 	orr.w	r3, r3, #4
 80002c6:	6313      	str	r3, [r2, #48]	; 0x30
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOEEN;
 80002c8:	4b95      	ldr	r3, [pc, #596]	; (8000520 <initialization+0x280>)
 80002ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002cc:	4a94      	ldr	r2, [pc, #592]	; (8000520 <initialization+0x280>)
 80002ce:	f043 0310 	orr.w	r3, r3, #16
 80002d2:	6313      	str	r3, [r2, #48]	; 0x30
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOJEN;
 80002d4:	4b92      	ldr	r3, [pc, #584]	; (8000520 <initialization+0x280>)
 80002d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d8:	4a91      	ldr	r2, [pc, #580]	; (8000520 <initialization+0x280>)
 80002da:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80002de:	6313      	str	r3, [r2, #48]	; 0x30
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOKEN;
 80002e0:	4b8f      	ldr	r3, [pc, #572]	; (8000520 <initialization+0x280>)
 80002e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e4:	4a8e      	ldr	r2, [pc, #568]	; (8000520 <initialization+0x280>)
 80002e6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80002ea:	6313      	str	r3, [r2, #48]	; 0x30
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOIEN;
 80002ec:	4b8c      	ldr	r3, [pc, #560]	; (8000520 <initialization+0x280>)
 80002ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f0:	4a8b      	ldr	r2, [pc, #556]	; (8000520 <initialization+0x280>)
 80002f2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002f6:	6313      	str	r3, [r2, #48]	; 0x30

	RCC->CR |= RCC_CR_HSEON;
 80002f8:	4b89      	ldr	r3, [pc, #548]	; (8000520 <initialization+0x280>)
 80002fa:	681b      	ldr	r3, [r3, #0]
 80002fc:	4a88      	ldr	r2, [pc, #544]	; (8000520 <initialization+0x280>)
 80002fe:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000302:	6013      	str	r3, [r2, #0]
	while (!(RCC->CR & RCC_CR_HSERDY));
 8000304:	bf00      	nop
 8000306:	4b86      	ldr	r3, [pc, #536]	; (8000520 <initialization+0x280>)
 8000308:	681b      	ldr	r3, [r3, #0]
 800030a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800030e:	2b00      	cmp	r3, #0
 8000310:	d0f9      	beq.n	8000306 <initialization+0x66>
	FLASH->ACR |= FLASH_ACR_LATENCY_5WS;
 8000312:	4b84      	ldr	r3, [pc, #528]	; (8000524 <initialization+0x284>)
 8000314:	681b      	ldr	r3, [r3, #0]
 8000316:	4a83      	ldr	r2, [pc, #524]	; (8000524 <initialization+0x284>)
 8000318:	f043 0305 	orr.w	r3, r3, #5
 800031c:	6013      	str	r3, [r2, #0]
	RCC->PLLCFGR |= RCC_PLLCFGR_PLLM_0 | RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_4;
 800031e:	4b80      	ldr	r3, [pc, #512]	; (8000520 <initialization+0x280>)
 8000320:	685b      	ldr	r3, [r3, #4]
 8000322:	4a7f      	ldr	r2, [pc, #508]	; (8000520 <initialization+0x280>)
 8000324:	f043 0319 	orr.w	r3, r3, #25
 8000328:	6053      	str	r3, [r2, #4]
	RCC->PLLCFGR |= RCC_PLLCFGR_PLLN_4 | RCC_PLLCFGR_PLLN_5 | RCC_PLLCFGR_PLLN_7 | RCC_PLLCFGR_PLLN_8;
 800032a:	4b7d      	ldr	r3, [pc, #500]	; (8000520 <initialization+0x280>)
 800032c:	685b      	ldr	r3, [r3, #4]
 800032e:	4a7c      	ldr	r2, [pc, #496]	; (8000520 <initialization+0x280>)
 8000330:	f443 43d8 	orr.w	r3, r3, #27648	; 0x6c00
 8000334:	6053      	str	r3, [r2, #4]
	RCC->PLLCFGR &= ~RCC_PLLCFGR_PLLN_6;
 8000336:	4b7a      	ldr	r3, [pc, #488]	; (8000520 <initialization+0x280>)
 8000338:	685b      	ldr	r3, [r3, #4]
 800033a:	4a79      	ldr	r2, [pc, #484]	; (8000520 <initialization+0x280>)
 800033c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000340:	6053      	str	r3, [r2, #4]
	RCC->PLLCFGR |= RCC_PLLCFGR_PLLP_0;
 8000342:	4b77      	ldr	r3, [pc, #476]	; (8000520 <initialization+0x280>)
 8000344:	685b      	ldr	r3, [r3, #4]
 8000346:	4a76      	ldr	r2, [pc, #472]	; (8000520 <initialization+0x280>)
 8000348:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800034c:	6053      	str	r3, [r2, #4]
	RCC->CFGR |= RCC_CFGR_PPRE1_2 | RCC_CFGR_PPRE2_2;
 800034e:	4b74      	ldr	r3, [pc, #464]	; (8000520 <initialization+0x280>)
 8000350:	689b      	ldr	r3, [r3, #8]
 8000352:	4a73      	ldr	r2, [pc, #460]	; (8000520 <initialization+0x280>)
 8000354:	f443 4310 	orr.w	r3, r3, #36864	; 0x9000
 8000358:	6093      	str	r3, [r2, #8]
	RCC->PLLCFGR |= RCC_PLLCFGR_PLLSRC;
 800035a:	4b71      	ldr	r3, [pc, #452]	; (8000520 <initialization+0x280>)
 800035c:	685b      	ldr	r3, [r3, #4]
 800035e:	4a70      	ldr	r2, [pc, #448]	; (8000520 <initialization+0x280>)
 8000360:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8000364:	6053      	str	r3, [r2, #4]
	RCC->CR |= RCC_CR_PLLON;
 8000366:	4b6e      	ldr	r3, [pc, #440]	; (8000520 <initialization+0x280>)
 8000368:	681b      	ldr	r3, [r3, #0]
 800036a:	4a6d      	ldr	r2, [pc, #436]	; (8000520 <initialization+0x280>)
 800036c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000370:	6013      	str	r3, [r2, #0]
	while((RCC->CR & RCC_CR_PLLRDY) == 0);
 8000372:	bf00      	nop
 8000374:	4b6a      	ldr	r3, [pc, #424]	; (8000520 <initialization+0x280>)
 8000376:	681b      	ldr	r3, [r3, #0]
 8000378:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800037c:	2b00      	cmp	r3, #0
 800037e:	d0f9      	beq.n	8000374 <initialization+0xd4>
	RCC->CFGR |= RCC_CFGR_SW_PLL;
 8000380:	4b67      	ldr	r3, [pc, #412]	; (8000520 <initialization+0x280>)
 8000382:	689b      	ldr	r3, [r3, #8]
 8000384:	4a66      	ldr	r2, [pc, #408]	; (8000520 <initialization+0x280>)
 8000386:	f043 0302 	orr.w	r3, r3, #2
 800038a:	6093      	str	r3, [r2, #8]
	while((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_1);
 800038c:	bf00      	nop
 800038e:	4b64      	ldr	r3, [pc, #400]	; (8000520 <initialization+0x280>)
 8000390:	689b      	ldr	r3, [r3, #8]
 8000392:	f003 030c 	and.w	r3, r3, #12
 8000396:	2b08      	cmp	r3, #8
 8000398:	d1f9      	bne.n	800038e <initialization+0xee>
	RCC->PLLSAICFGR |= RCC_PLLSAICFGR_PLLSAIN_6 | RCC_PLLSAICFGR_PLLSAIN_7;
 800039a:	4b61      	ldr	r3, [pc, #388]	; (8000520 <initialization+0x280>)
 800039c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80003a0:	4a5f      	ldr	r2, [pc, #380]	; (8000520 <initialization+0x280>)
 80003a2:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 80003a6:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
	RCC->PLLSAICFGR |= RCC_PLLSAICFGR_PLLSAIR_0 | RCC_PLLSAICFGR_PLLSAIR_2;
 80003aa:	4b5d      	ldr	r3, [pc, #372]	; (8000520 <initialization+0x280>)
 80003ac:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80003b0:	4a5b      	ldr	r2, [pc, #364]	; (8000520 <initialization+0x280>)
 80003b2:	f043 43a0 	orr.w	r3, r3, #1342177280	; 0x50000000
 80003b6:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
	RCC->DCKCFGR1 	|= RCC_DCKCFGR1_PLLSAIDIVR_0;
 80003ba:	4b59      	ldr	r3, [pc, #356]	; (8000520 <initialization+0x280>)
 80003bc:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80003c0:	4a57      	ldr	r2, [pc, #348]	; (8000520 <initialization+0x280>)
 80003c2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80003c6:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
	RCC->DCKCFGR1 	&= ~RCC_DCKCFGR1_PLLSAIDIVR_1;
 80003ca:	4b55      	ldr	r3, [pc, #340]	; (8000520 <initialization+0x280>)
 80003cc:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80003d0:	4a53      	ldr	r2, [pc, #332]	; (8000520 <initialization+0x280>)
 80003d2:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 80003d6:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
	RCC->CR |= RCC_CR_PLLSAION;
 80003da:	4b51      	ldr	r3, [pc, #324]	; (8000520 <initialization+0x280>)
 80003dc:	681b      	ldr	r3, [r3, #0]
 80003de:	4a50      	ldr	r2, [pc, #320]	; (8000520 <initialization+0x280>)
 80003e0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80003e4:	6013      	str	r3, [r2, #0]
	while ((RCC->CR & RCC_CR_PLLSAIRDY) == 0);
 80003e6:	bf00      	nop
 80003e8:	4b4d      	ldr	r3, [pc, #308]	; (8000520 <initialization+0x280>)
 80003ea:	681b      	ldr	r3, [r3, #0]
 80003ec:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80003f0:	2b00      	cmp	r3, #0
 80003f2:	d0f9      	beq.n	80003e8 <initialization+0x148>

	//B0 PE4
	GPIOE->MODER   &= ~GPIO_MODER_MODER4;
 80003f4:	4b4c      	ldr	r3, [pc, #304]	; (8000528 <initialization+0x288>)
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	4a4b      	ldr	r2, [pc, #300]	; (8000528 <initialization+0x288>)
 80003fa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80003fe:	6013      	str	r3, [r2, #0]
	GPIOE->MODER   |= GPIO_MODER_MODER4_1;
 8000400:	4b49      	ldr	r3, [pc, #292]	; (8000528 <initialization+0x288>)
 8000402:	681b      	ldr	r3, [r3, #0]
 8000404:	4a48      	ldr	r2, [pc, #288]	; (8000528 <initialization+0x288>)
 8000406:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800040a:	6013      	str	r3, [r2, #0]
	GPIOE->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR4_1;
 800040c:	4b46      	ldr	r3, [pc, #280]	; (8000528 <initialization+0x288>)
 800040e:	689b      	ldr	r3, [r3, #8]
 8000410:	4a45      	ldr	r2, [pc, #276]	; (8000528 <initialization+0x288>)
 8000412:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000416:	6093      	str	r3, [r2, #8]
	GPIOE->AFR[0] &= ~GPIO_AFRL_AFRL4_0;
 8000418:	4b43      	ldr	r3, [pc, #268]	; (8000528 <initialization+0x288>)
 800041a:	6a1b      	ldr	r3, [r3, #32]
 800041c:	4a42      	ldr	r2, [pc, #264]	; (8000528 <initialization+0x288>)
 800041e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000422:	6213      	str	r3, [r2, #32]
	GPIOE->AFR[0] |= GPIO_AFRL_AFRL4_1 | GPIO_AFRL_AFRL4_2 | GPIO_AFRL_AFRL4_3;
 8000424:	4b40      	ldr	r3, [pc, #256]	; (8000528 <initialization+0x288>)
 8000426:	6a1b      	ldr	r3, [r3, #32]
 8000428:	4a3f      	ldr	r2, [pc, #252]	; (8000528 <initialization+0x288>)
 800042a:	f443 2360 	orr.w	r3, r3, #917504	; 0xe0000
 800042e:	6213      	str	r3, [r2, #32]

	//B1 PJ13
	GPIOJ->MODER   &= ~GPIO_MODER_MODER13;
 8000430:	4b3e      	ldr	r3, [pc, #248]	; (800052c <initialization+0x28c>)
 8000432:	681b      	ldr	r3, [r3, #0]
 8000434:	4a3d      	ldr	r2, [pc, #244]	; (800052c <initialization+0x28c>)
 8000436:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 800043a:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER13_1;
 800043c:	4b3b      	ldr	r3, [pc, #236]	; (800052c <initialization+0x28c>)
 800043e:	681b      	ldr	r3, [r3, #0]
 8000440:	4a3a      	ldr	r2, [pc, #232]	; (800052c <initialization+0x28c>)
 8000442:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8000446:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR13_1;
 8000448:	4b38      	ldr	r3, [pc, #224]	; (800052c <initialization+0x28c>)
 800044a:	689b      	ldr	r3, [r3, #8]
 800044c:	4a37      	ldr	r2, [pc, #220]	; (800052c <initialization+0x28c>)
 800044e:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8000452:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[1] &= ~GPIO_AFRL_AFRL5_0;
 8000454:	4b35      	ldr	r3, [pc, #212]	; (800052c <initialization+0x28c>)
 8000456:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000458:	4a34      	ldr	r2, [pc, #208]	; (800052c <initialization+0x28c>)
 800045a:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800045e:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOJ->AFR[1] |= GPIO_AFRL_AFRL5_1 | GPIO_AFRL_AFRL5_2 | GPIO_AFRL_AFRL5_3;
 8000460:	4b32      	ldr	r3, [pc, #200]	; (800052c <initialization+0x28c>)
 8000462:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000464:	4a31      	ldr	r2, [pc, #196]	; (800052c <initialization+0x28c>)
 8000466:	f443 0360 	orr.w	r3, r3, #14680064	; 0xe00000
 800046a:	6253      	str	r3, [r2, #36]	; 0x24

	//B2 PJ14
	GPIOJ->MODER   &= ~GPIO_MODER_MODER14;
 800046c:	4b2f      	ldr	r3, [pc, #188]	; (800052c <initialization+0x28c>)
 800046e:	681b      	ldr	r3, [r3, #0]
 8000470:	4a2e      	ldr	r2, [pc, #184]	; (800052c <initialization+0x28c>)
 8000472:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 8000476:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER14_1;
 8000478:	4b2c      	ldr	r3, [pc, #176]	; (800052c <initialization+0x28c>)
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	4a2b      	ldr	r2, [pc, #172]	; (800052c <initialization+0x28c>)
 800047e:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8000482:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR14_1;
 8000484:	4b29      	ldr	r3, [pc, #164]	; (800052c <initialization+0x28c>)
 8000486:	689b      	ldr	r3, [r3, #8]
 8000488:	4a28      	ldr	r2, [pc, #160]	; (800052c <initialization+0x28c>)
 800048a:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 800048e:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[1] &= ~GPIO_AFRL_AFRL6_0;
 8000490:	4b26      	ldr	r3, [pc, #152]	; (800052c <initialization+0x28c>)
 8000492:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000494:	4a25      	ldr	r2, [pc, #148]	; (800052c <initialization+0x28c>)
 8000496:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800049a:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOJ->AFR[1] |= GPIO_AFRL_AFRL6_1 | GPIO_AFRL_AFRL6_2 | GPIO_AFRL_AFRL6_3;
 800049c:	4b23      	ldr	r3, [pc, #140]	; (800052c <initialization+0x28c>)
 800049e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80004a0:	4a22      	ldr	r2, [pc, #136]	; (800052c <initialization+0x28c>)
 80004a2:	f043 6360 	orr.w	r3, r3, #234881024	; 0xe000000
 80004a6:	6253      	str	r3, [r2, #36]	; 0x24

	//B3 PJ15
	GPIOJ->MODER   &= ~GPIO_MODER_MODER15;
 80004a8:	4b20      	ldr	r3, [pc, #128]	; (800052c <initialization+0x28c>)
 80004aa:	681b      	ldr	r3, [r3, #0]
 80004ac:	4a1f      	ldr	r2, [pc, #124]	; (800052c <initialization+0x28c>)
 80004ae:	f023 4340 	bic.w	r3, r3, #3221225472	; 0xc0000000
 80004b2:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER15_1;
 80004b4:	4b1d      	ldr	r3, [pc, #116]	; (800052c <initialization+0x28c>)
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	4a1c      	ldr	r2, [pc, #112]	; (800052c <initialization+0x28c>)
 80004ba:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80004be:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR15_1;
 80004c0:	4b1a      	ldr	r3, [pc, #104]	; (800052c <initialization+0x28c>)
 80004c2:	689b      	ldr	r3, [r3, #8]
 80004c4:	4a19      	ldr	r2, [pc, #100]	; (800052c <initialization+0x28c>)
 80004c6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80004ca:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[1] &= ~GPIO_AFRL_AFRL7_0;
 80004cc:	4b17      	ldr	r3, [pc, #92]	; (800052c <initialization+0x28c>)
 80004ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80004d0:	4a16      	ldr	r2, [pc, #88]	; (800052c <initialization+0x28c>)
 80004d2:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80004d6:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOJ->AFR[1] |= GPIO_AFRL_AFRL7_1 | GPIO_AFRL_AFRL7_2 | GPIO_AFRL_AFRL7_3;
 80004d8:	4b14      	ldr	r3, [pc, #80]	; (800052c <initialization+0x28c>)
 80004da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80004dc:	4a13      	ldr	r2, [pc, #76]	; (800052c <initialization+0x28c>)
 80004de:	f043 4360 	orr.w	r3, r3, #3758096384	; 0xe0000000
 80004e2:	6253      	str	r3, [r2, #36]	; 0x24

	//B4 PJ12
	GPIOJ->MODER   &= ~GPIO_MODER_MODER12;
 80004e4:	4b11      	ldr	r3, [pc, #68]	; (800052c <initialization+0x28c>)
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	4a10      	ldr	r2, [pc, #64]	; (800052c <initialization+0x28c>)
 80004ea:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 80004ee:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER12_1;
 80004f0:	4b0e      	ldr	r3, [pc, #56]	; (800052c <initialization+0x28c>)
 80004f2:	681b      	ldr	r3, [r3, #0]
 80004f4:	4a0d      	ldr	r2, [pc, #52]	; (800052c <initialization+0x28c>)
 80004f6:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80004fa:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR12_1;
 80004fc:	4b0b      	ldr	r3, [pc, #44]	; (800052c <initialization+0x28c>)
 80004fe:	689b      	ldr	r3, [r3, #8]
 8000500:	4a0a      	ldr	r2, [pc, #40]	; (800052c <initialization+0x28c>)
 8000502:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8000506:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[1] &= ~GPIO_AFRL_AFRL4_0;
 8000508:	4b08      	ldr	r3, [pc, #32]	; (800052c <initialization+0x28c>)
 800050a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800050c:	4a07      	ldr	r2, [pc, #28]	; (800052c <initialization+0x28c>)
 800050e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000512:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOJ->AFR[1] |= GPIO_AFRL_AFRL4_1 | GPIO_AFRL_AFRL4_2 | GPIO_AFRL_AFRL4_3;
 8000514:	4b05      	ldr	r3, [pc, #20]	; (800052c <initialization+0x28c>)
 8000516:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000518:	4a04      	ldr	r2, [pc, #16]	; (800052c <initialization+0x28c>)
 800051a:	f443 2360 	orr.w	r3, r3, #917504	; 0xe0000
 800051e:	e007      	b.n	8000530 <initialization+0x290>
 8000520:	40023800 	.word	0x40023800
 8000524:	40023c00 	.word	0x40023c00
 8000528:	40021000 	.word	0x40021000
 800052c:	40022400 	.word	0x40022400
 8000530:	6253      	str	r3, [r2, #36]	; 0x24

	//B5 PK4
	GPIOK->MODER   &= ~GPIO_MODER_MODER4;
 8000532:	4b99      	ldr	r3, [pc, #612]	; (8000798 <initialization+0x4f8>)
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	4a98      	ldr	r2, [pc, #608]	; (8000798 <initialization+0x4f8>)
 8000538:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800053c:	6013      	str	r3, [r2, #0]
	GPIOK->MODER   |= GPIO_MODER_MODER4_1;
 800053e:	4b96      	ldr	r3, [pc, #600]	; (8000798 <initialization+0x4f8>)
 8000540:	681b      	ldr	r3, [r3, #0]
 8000542:	4a95      	ldr	r2, [pc, #596]	; (8000798 <initialization+0x4f8>)
 8000544:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000548:	6013      	str	r3, [r2, #0]
	GPIOK->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR4_1;
 800054a:	4b93      	ldr	r3, [pc, #588]	; (8000798 <initialization+0x4f8>)
 800054c:	689b      	ldr	r3, [r3, #8]
 800054e:	4a92      	ldr	r2, [pc, #584]	; (8000798 <initialization+0x4f8>)
 8000550:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000554:	6093      	str	r3, [r2, #8]
	GPIOK->AFR[0] &= ~GPIO_AFRL_AFRL4_0;
 8000556:	4b90      	ldr	r3, [pc, #576]	; (8000798 <initialization+0x4f8>)
 8000558:	6a1b      	ldr	r3, [r3, #32]
 800055a:	4a8f      	ldr	r2, [pc, #572]	; (8000798 <initialization+0x4f8>)
 800055c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000560:	6213      	str	r3, [r2, #32]
	GPIOK->AFR[0] |= GPIO_AFRL_AFRL4_1 | GPIO_AFRL_AFRL4_2 | GPIO_AFRL_AFRL4_3;
 8000562:	4b8d      	ldr	r3, [pc, #564]	; (8000798 <initialization+0x4f8>)
 8000564:	6a1b      	ldr	r3, [r3, #32]
 8000566:	4a8c      	ldr	r2, [pc, #560]	; (8000798 <initialization+0x4f8>)
 8000568:	f443 2360 	orr.w	r3, r3, #917504	; 0xe0000
 800056c:	6213      	str	r3, [r2, #32]

	//B6 PK5
	GPIOK->MODER   &= ~GPIO_MODER_MODER5;
 800056e:	4b8a      	ldr	r3, [pc, #552]	; (8000798 <initialization+0x4f8>)
 8000570:	681b      	ldr	r3, [r3, #0]
 8000572:	4a89      	ldr	r2, [pc, #548]	; (8000798 <initialization+0x4f8>)
 8000574:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8000578:	6013      	str	r3, [r2, #0]
	GPIOK->MODER   |= GPIO_MODER_MODER5_1;
 800057a:	4b87      	ldr	r3, [pc, #540]	; (8000798 <initialization+0x4f8>)
 800057c:	681b      	ldr	r3, [r3, #0]
 800057e:	4a86      	ldr	r2, [pc, #536]	; (8000798 <initialization+0x4f8>)
 8000580:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8000584:	6013      	str	r3, [r2, #0]
	GPIOK->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR5_1;
 8000586:	4b84      	ldr	r3, [pc, #528]	; (8000798 <initialization+0x4f8>)
 8000588:	689b      	ldr	r3, [r3, #8]
 800058a:	4a83      	ldr	r2, [pc, #524]	; (8000798 <initialization+0x4f8>)
 800058c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8000590:	6093      	str	r3, [r2, #8]
	GPIOK->AFR[0] &= ~GPIO_AFRL_AFRL5_0;
 8000592:	4b81      	ldr	r3, [pc, #516]	; (8000798 <initialization+0x4f8>)
 8000594:	6a1b      	ldr	r3, [r3, #32]
 8000596:	4a80      	ldr	r2, [pc, #512]	; (8000798 <initialization+0x4f8>)
 8000598:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800059c:	6213      	str	r3, [r2, #32]
	GPIOK->AFR[0] |= GPIO_AFRL_AFRL5_1 | GPIO_AFRL_AFRL5_2 | GPIO_AFRL_AFRL5_3;
 800059e:	4b7e      	ldr	r3, [pc, #504]	; (8000798 <initialization+0x4f8>)
 80005a0:	6a1b      	ldr	r3, [r3, #32]
 80005a2:	4a7d      	ldr	r2, [pc, #500]	; (8000798 <initialization+0x4f8>)
 80005a4:	f443 0360 	orr.w	r3, r3, #14680064	; 0xe00000
 80005a8:	6213      	str	r3, [r2, #32]

	//B7 PK6
	GPIOK->MODER   &= ~GPIO_MODER_MODER6;
 80005aa:	4b7b      	ldr	r3, [pc, #492]	; (8000798 <initialization+0x4f8>)
 80005ac:	681b      	ldr	r3, [r3, #0]
 80005ae:	4a7a      	ldr	r2, [pc, #488]	; (8000798 <initialization+0x4f8>)
 80005b0:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80005b4:	6013      	str	r3, [r2, #0]
	GPIOK->MODER   |= GPIO_MODER_MODER6_1;
 80005b6:	4b78      	ldr	r3, [pc, #480]	; (8000798 <initialization+0x4f8>)
 80005b8:	681b      	ldr	r3, [r3, #0]
 80005ba:	4a77      	ldr	r2, [pc, #476]	; (8000798 <initialization+0x4f8>)
 80005bc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80005c0:	6013      	str	r3, [r2, #0]
	GPIOK->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR6_1;
 80005c2:	4b75      	ldr	r3, [pc, #468]	; (8000798 <initialization+0x4f8>)
 80005c4:	689b      	ldr	r3, [r3, #8]
 80005c6:	4a74      	ldr	r2, [pc, #464]	; (8000798 <initialization+0x4f8>)
 80005c8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80005cc:	6093      	str	r3, [r2, #8]
	GPIOK->AFR[0] &= ~GPIO_AFRL_AFRL6_0;
 80005ce:	4b72      	ldr	r3, [pc, #456]	; (8000798 <initialization+0x4f8>)
 80005d0:	6a1b      	ldr	r3, [r3, #32]
 80005d2:	4a71      	ldr	r2, [pc, #452]	; (8000798 <initialization+0x4f8>)
 80005d4:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80005d8:	6213      	str	r3, [r2, #32]
	GPIOK->AFR[0] |= GPIO_AFRL_AFRL6_1 | GPIO_AFRL_AFRL6_2 | GPIO_AFRL_AFRL6_3;
 80005da:	4b6f      	ldr	r3, [pc, #444]	; (8000798 <initialization+0x4f8>)
 80005dc:	6a1b      	ldr	r3, [r3, #32]
 80005de:	4a6e      	ldr	r2, [pc, #440]	; (8000798 <initialization+0x4f8>)
 80005e0:	f043 6360 	orr.w	r3, r3, #234881024	; 0xe000000
 80005e4:	6213      	str	r3, [r2, #32]

	//R0 PI 15
	GPIOI->MODER   &= ~GPIO_MODER_MODER15;
 80005e6:	4b6d      	ldr	r3, [pc, #436]	; (800079c <initialization+0x4fc>)
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	4a6c      	ldr	r2, [pc, #432]	; (800079c <initialization+0x4fc>)
 80005ec:	f023 4340 	bic.w	r3, r3, #3221225472	; 0xc0000000
 80005f0:	6013      	str	r3, [r2, #0]
	GPIOI->MODER   |= GPIO_MODER_MODER15_1;
 80005f2:	4b6a      	ldr	r3, [pc, #424]	; (800079c <initialization+0x4fc>)
 80005f4:	681b      	ldr	r3, [r3, #0]
 80005f6:	4a69      	ldr	r2, [pc, #420]	; (800079c <initialization+0x4fc>)
 80005f8:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80005fc:	6013      	str	r3, [r2, #0]
	GPIOI->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR15_1;
 80005fe:	4b67      	ldr	r3, [pc, #412]	; (800079c <initialization+0x4fc>)
 8000600:	689b      	ldr	r3, [r3, #8]
 8000602:	4a66      	ldr	r2, [pc, #408]	; (800079c <initialization+0x4fc>)
 8000604:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000608:	6093      	str	r3, [r2, #8]
	GPIOI->AFR[1] &= ~GPIO_AFRL_AFRL7_0;
 800060a:	4b64      	ldr	r3, [pc, #400]	; (800079c <initialization+0x4fc>)
 800060c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800060e:	4a63      	ldr	r2, [pc, #396]	; (800079c <initialization+0x4fc>)
 8000610:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8000614:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOI->AFR[1] |= GPIO_AFRL_AFRL7_1 | GPIO_AFRL_AFRL7_2 | GPIO_AFRL_AFRL7_3;
 8000616:	4b61      	ldr	r3, [pc, #388]	; (800079c <initialization+0x4fc>)
 8000618:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800061a:	4a60      	ldr	r2, [pc, #384]	; (800079c <initialization+0x4fc>)
 800061c:	f043 4360 	orr.w	r3, r3, #3758096384	; 0xe0000000
 8000620:	6253      	str	r3, [r2, #36]	; 0x24

	//R1 PJ0
	GPIOJ->MODER   &= ~GPIO_MODER_MODER0;
 8000622:	4b5f      	ldr	r3, [pc, #380]	; (80007a0 <initialization+0x500>)
 8000624:	681b      	ldr	r3, [r3, #0]
 8000626:	4a5e      	ldr	r2, [pc, #376]	; (80007a0 <initialization+0x500>)
 8000628:	f023 0303 	bic.w	r3, r3, #3
 800062c:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER0_1;
 800062e:	4b5c      	ldr	r3, [pc, #368]	; (80007a0 <initialization+0x500>)
 8000630:	681b      	ldr	r3, [r3, #0]
 8000632:	4a5b      	ldr	r2, [pc, #364]	; (80007a0 <initialization+0x500>)
 8000634:	f043 0302 	orr.w	r3, r3, #2
 8000638:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR0_1;
 800063a:	4b59      	ldr	r3, [pc, #356]	; (80007a0 <initialization+0x500>)
 800063c:	689b      	ldr	r3, [r3, #8]
 800063e:	4a58      	ldr	r2, [pc, #352]	; (80007a0 <initialization+0x500>)
 8000640:	f043 0302 	orr.w	r3, r3, #2
 8000644:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[0] &= ~GPIO_AFRL_AFRL0_0;
 8000646:	4b56      	ldr	r3, [pc, #344]	; (80007a0 <initialization+0x500>)
 8000648:	6a1b      	ldr	r3, [r3, #32]
 800064a:	4a55      	ldr	r2, [pc, #340]	; (80007a0 <initialization+0x500>)
 800064c:	f023 0301 	bic.w	r3, r3, #1
 8000650:	6213      	str	r3, [r2, #32]
	GPIOJ->AFR[0] |= GPIO_AFRL_AFRL0_1 | GPIO_AFRL_AFRL0_2 | GPIO_AFRL_AFRL0_3;
 8000652:	4b53      	ldr	r3, [pc, #332]	; (80007a0 <initialization+0x500>)
 8000654:	6a1b      	ldr	r3, [r3, #32]
 8000656:	4a52      	ldr	r2, [pc, #328]	; (80007a0 <initialization+0x500>)
 8000658:	f043 030e 	orr.w	r3, r3, #14
 800065c:	6213      	str	r3, [r2, #32]

	//R2 PJ1
	GPIOJ->MODER   &= ~GPIO_MODER_MODER1;
 800065e:	4b50      	ldr	r3, [pc, #320]	; (80007a0 <initialization+0x500>)
 8000660:	681b      	ldr	r3, [r3, #0]
 8000662:	4a4f      	ldr	r2, [pc, #316]	; (80007a0 <initialization+0x500>)
 8000664:	f023 030c 	bic.w	r3, r3, #12
 8000668:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER1_1;
 800066a:	4b4d      	ldr	r3, [pc, #308]	; (80007a0 <initialization+0x500>)
 800066c:	681b      	ldr	r3, [r3, #0]
 800066e:	4a4c      	ldr	r2, [pc, #304]	; (80007a0 <initialization+0x500>)
 8000670:	f043 0308 	orr.w	r3, r3, #8
 8000674:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR1_1;
 8000676:	4b4a      	ldr	r3, [pc, #296]	; (80007a0 <initialization+0x500>)
 8000678:	689b      	ldr	r3, [r3, #8]
 800067a:	4a49      	ldr	r2, [pc, #292]	; (80007a0 <initialization+0x500>)
 800067c:	f043 0308 	orr.w	r3, r3, #8
 8000680:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[0] &= ~GPIO_AFRL_AFRL1_0;
 8000682:	4b47      	ldr	r3, [pc, #284]	; (80007a0 <initialization+0x500>)
 8000684:	6a1b      	ldr	r3, [r3, #32]
 8000686:	4a46      	ldr	r2, [pc, #280]	; (80007a0 <initialization+0x500>)
 8000688:	f023 0310 	bic.w	r3, r3, #16
 800068c:	6213      	str	r3, [r2, #32]
	GPIOJ->AFR[0] |= GPIO_AFRL_AFRL1_1 | GPIO_AFRL_AFRL1_2 | GPIO_AFRL_AFRL1_3;
 800068e:	4b44      	ldr	r3, [pc, #272]	; (80007a0 <initialization+0x500>)
 8000690:	6a1b      	ldr	r3, [r3, #32]
 8000692:	4a43      	ldr	r2, [pc, #268]	; (80007a0 <initialization+0x500>)
 8000694:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 8000698:	6213      	str	r3, [r2, #32]

	//R3 PJ2
	GPIOJ->MODER   &= ~GPIO_MODER_MODER2;
 800069a:	4b41      	ldr	r3, [pc, #260]	; (80007a0 <initialization+0x500>)
 800069c:	681b      	ldr	r3, [r3, #0]
 800069e:	4a40      	ldr	r2, [pc, #256]	; (80007a0 <initialization+0x500>)
 80006a0:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 80006a4:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER2_1;
 80006a6:	4b3e      	ldr	r3, [pc, #248]	; (80007a0 <initialization+0x500>)
 80006a8:	681b      	ldr	r3, [r3, #0]
 80006aa:	4a3d      	ldr	r2, [pc, #244]	; (80007a0 <initialization+0x500>)
 80006ac:	f043 0320 	orr.w	r3, r3, #32
 80006b0:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR2_1;
 80006b2:	4b3b      	ldr	r3, [pc, #236]	; (80007a0 <initialization+0x500>)
 80006b4:	689b      	ldr	r3, [r3, #8]
 80006b6:	4a3a      	ldr	r2, [pc, #232]	; (80007a0 <initialization+0x500>)
 80006b8:	f043 0320 	orr.w	r3, r3, #32
 80006bc:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[0] &= ~GPIO_AFRL_AFRL2_0;
 80006be:	4b38      	ldr	r3, [pc, #224]	; (80007a0 <initialization+0x500>)
 80006c0:	6a1b      	ldr	r3, [r3, #32]
 80006c2:	4a37      	ldr	r2, [pc, #220]	; (80007a0 <initialization+0x500>)
 80006c4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80006c8:	6213      	str	r3, [r2, #32]
	GPIOJ->AFR[0] |= GPIO_AFRL_AFRL2_1 | GPIO_AFRL_AFRL2_2 | GPIO_AFRL_AFRL2_3;
 80006ca:	4b35      	ldr	r3, [pc, #212]	; (80007a0 <initialization+0x500>)
 80006cc:	6a1b      	ldr	r3, [r3, #32]
 80006ce:	4a34      	ldr	r2, [pc, #208]	; (80007a0 <initialization+0x500>)
 80006d0:	f443 6360 	orr.w	r3, r3, #3584	; 0xe00
 80006d4:	6213      	str	r3, [r2, #32]

	//R4 PJ3

	GPIOJ->MODER   &= ~GPIO_MODER_MODER3;
 80006d6:	4b32      	ldr	r3, [pc, #200]	; (80007a0 <initialization+0x500>)
 80006d8:	681b      	ldr	r3, [r3, #0]
 80006da:	4a31      	ldr	r2, [pc, #196]	; (80007a0 <initialization+0x500>)
 80006dc:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 80006e0:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER3_1;
 80006e2:	4b2f      	ldr	r3, [pc, #188]	; (80007a0 <initialization+0x500>)
 80006e4:	681b      	ldr	r3, [r3, #0]
 80006e6:	4a2e      	ldr	r2, [pc, #184]	; (80007a0 <initialization+0x500>)
 80006e8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80006ec:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR3_1;
 80006ee:	4b2c      	ldr	r3, [pc, #176]	; (80007a0 <initialization+0x500>)
 80006f0:	689b      	ldr	r3, [r3, #8]
 80006f2:	4a2b      	ldr	r2, [pc, #172]	; (80007a0 <initialization+0x500>)
 80006f4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80006f8:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[0] &= ~GPIO_AFRL_AFRL3_0;
 80006fa:	4b29      	ldr	r3, [pc, #164]	; (80007a0 <initialization+0x500>)
 80006fc:	6a1b      	ldr	r3, [r3, #32]
 80006fe:	4a28      	ldr	r2, [pc, #160]	; (80007a0 <initialization+0x500>)
 8000700:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000704:	6213      	str	r3, [r2, #32]
	GPIOJ->AFR[0] |= GPIO_AFRL_AFRL3_1 | GPIO_AFRL_AFRL3_2 | GPIO_AFRL_AFRL3_3;
 8000706:	4b26      	ldr	r3, [pc, #152]	; (80007a0 <initialization+0x500>)
 8000708:	6a1b      	ldr	r3, [r3, #32]
 800070a:	4a25      	ldr	r2, [pc, #148]	; (80007a0 <initialization+0x500>)
 800070c:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8000710:	6213      	str	r3, [r2, #32]

	//R5 PJ4
	GPIOJ->MODER   &= ~GPIO_MODER_MODER4;
 8000712:	4b23      	ldr	r3, [pc, #140]	; (80007a0 <initialization+0x500>)
 8000714:	681b      	ldr	r3, [r3, #0]
 8000716:	4a22      	ldr	r2, [pc, #136]	; (80007a0 <initialization+0x500>)
 8000718:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800071c:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER4_1;
 800071e:	4b20      	ldr	r3, [pc, #128]	; (80007a0 <initialization+0x500>)
 8000720:	681b      	ldr	r3, [r3, #0]
 8000722:	4a1f      	ldr	r2, [pc, #124]	; (80007a0 <initialization+0x500>)
 8000724:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000728:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR4_1;
 800072a:	4b1d      	ldr	r3, [pc, #116]	; (80007a0 <initialization+0x500>)
 800072c:	689b      	ldr	r3, [r3, #8]
 800072e:	4a1c      	ldr	r2, [pc, #112]	; (80007a0 <initialization+0x500>)
 8000730:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000734:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[0] &= ~GPIO_AFRL_AFRL4_0;
 8000736:	4b1a      	ldr	r3, [pc, #104]	; (80007a0 <initialization+0x500>)
 8000738:	6a1b      	ldr	r3, [r3, #32]
 800073a:	4a19      	ldr	r2, [pc, #100]	; (80007a0 <initialization+0x500>)
 800073c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000740:	6213      	str	r3, [r2, #32]
	GPIOJ->AFR[0] |= GPIO_AFRL_AFRL4_1 | GPIO_AFRL_AFRL4_2 | GPIO_AFRL_AFRL4_3;
 8000742:	4b17      	ldr	r3, [pc, #92]	; (80007a0 <initialization+0x500>)
 8000744:	6a1b      	ldr	r3, [r3, #32]
 8000746:	4a16      	ldr	r2, [pc, #88]	; (80007a0 <initialization+0x500>)
 8000748:	f443 2360 	orr.w	r3, r3, #917504	; 0xe0000
 800074c:	6213      	str	r3, [r2, #32]

	//R6 PJ5
	GPIOJ->MODER   &= ~GPIO_MODER_MODER5;
 800074e:	4b14      	ldr	r3, [pc, #80]	; (80007a0 <initialization+0x500>)
 8000750:	681b      	ldr	r3, [r3, #0]
 8000752:	4a13      	ldr	r2, [pc, #76]	; (80007a0 <initialization+0x500>)
 8000754:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8000758:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER5_1;
 800075a:	4b11      	ldr	r3, [pc, #68]	; (80007a0 <initialization+0x500>)
 800075c:	681b      	ldr	r3, [r3, #0]
 800075e:	4a10      	ldr	r2, [pc, #64]	; (80007a0 <initialization+0x500>)
 8000760:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8000764:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR5_1;
 8000766:	4b0e      	ldr	r3, [pc, #56]	; (80007a0 <initialization+0x500>)
 8000768:	689b      	ldr	r3, [r3, #8]
 800076a:	4a0d      	ldr	r2, [pc, #52]	; (80007a0 <initialization+0x500>)
 800076c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8000770:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[0] &= ~GPIO_AFRL_AFRL5_0;
 8000772:	4b0b      	ldr	r3, [pc, #44]	; (80007a0 <initialization+0x500>)
 8000774:	6a1b      	ldr	r3, [r3, #32]
 8000776:	4a0a      	ldr	r2, [pc, #40]	; (80007a0 <initialization+0x500>)
 8000778:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800077c:	6213      	str	r3, [r2, #32]
	GPIOJ->AFR[0] |= GPIO_AFRL_AFRL5_1 | GPIO_AFRL_AFRL5_2 | GPIO_AFRL_AFRL5_3;
 800077e:	4b08      	ldr	r3, [pc, #32]	; (80007a0 <initialization+0x500>)
 8000780:	6a1b      	ldr	r3, [r3, #32]
 8000782:	4a07      	ldr	r2, [pc, #28]	; (80007a0 <initialization+0x500>)
 8000784:	f443 0360 	orr.w	r3, r3, #14680064	; 0xe00000
 8000788:	6213      	str	r3, [r2, #32]

	//R7 PJ6
	GPIOJ->MODER   &= ~GPIO_MODER_MODER6;
 800078a:	4b05      	ldr	r3, [pc, #20]	; (80007a0 <initialization+0x500>)
 800078c:	681b      	ldr	r3, [r3, #0]
 800078e:	4a04      	ldr	r2, [pc, #16]	; (80007a0 <initialization+0x500>)
 8000790:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8000794:	e006      	b.n	80007a4 <initialization+0x504>
 8000796:	bf00      	nop
 8000798:	40022800 	.word	0x40022800
 800079c:	40022000 	.word	0x40022000
 80007a0:	40022400 	.word	0x40022400
 80007a4:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER6_1;
 80007a6:	4b99      	ldr	r3, [pc, #612]	; (8000a0c <initialization+0x76c>)
 80007a8:	681b      	ldr	r3, [r3, #0]
 80007aa:	4a98      	ldr	r2, [pc, #608]	; (8000a0c <initialization+0x76c>)
 80007ac:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80007b0:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR6_1;
 80007b2:	4b96      	ldr	r3, [pc, #600]	; (8000a0c <initialization+0x76c>)
 80007b4:	689b      	ldr	r3, [r3, #8]
 80007b6:	4a95      	ldr	r2, [pc, #596]	; (8000a0c <initialization+0x76c>)
 80007b8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80007bc:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[0] &= ~GPIO_AFRL_AFRL6_0;
 80007be:	4b93      	ldr	r3, [pc, #588]	; (8000a0c <initialization+0x76c>)
 80007c0:	6a1b      	ldr	r3, [r3, #32]
 80007c2:	4a92      	ldr	r2, [pc, #584]	; (8000a0c <initialization+0x76c>)
 80007c4:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80007c8:	6213      	str	r3, [r2, #32]
	GPIOJ->AFR[0] |= GPIO_AFRL_AFRL6_1 | GPIO_AFRL_AFRL6_2 | GPIO_AFRL_AFRL6_3;
 80007ca:	4b90      	ldr	r3, [pc, #576]	; (8000a0c <initialization+0x76c>)
 80007cc:	6a1b      	ldr	r3, [r3, #32]
 80007ce:	4a8f      	ldr	r2, [pc, #572]	; (8000a0c <initialization+0x76c>)
 80007d0:	f043 6360 	orr.w	r3, r3, #234881024	; 0xe000000
 80007d4:	6213      	str	r3, [r2, #32]

	//G0 PJ7
	GPIOJ->MODER   &= ~GPIO_MODER_MODER7;
 80007d6:	4b8d      	ldr	r3, [pc, #564]	; (8000a0c <initialization+0x76c>)
 80007d8:	681b      	ldr	r3, [r3, #0]
 80007da:	4a8c      	ldr	r2, [pc, #560]	; (8000a0c <initialization+0x76c>)
 80007dc:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80007e0:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER7_1;
 80007e2:	4b8a      	ldr	r3, [pc, #552]	; (8000a0c <initialization+0x76c>)
 80007e4:	681b      	ldr	r3, [r3, #0]
 80007e6:	4a89      	ldr	r2, [pc, #548]	; (8000a0c <initialization+0x76c>)
 80007e8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80007ec:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR7_1;
 80007ee:	4b87      	ldr	r3, [pc, #540]	; (8000a0c <initialization+0x76c>)
 80007f0:	689b      	ldr	r3, [r3, #8]
 80007f2:	4a86      	ldr	r2, [pc, #536]	; (8000a0c <initialization+0x76c>)
 80007f4:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80007f8:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[0] &= ~GPIO_AFRL_AFRL7_0;
 80007fa:	4b84      	ldr	r3, [pc, #528]	; (8000a0c <initialization+0x76c>)
 80007fc:	6a1b      	ldr	r3, [r3, #32]
 80007fe:	4a83      	ldr	r2, [pc, #524]	; (8000a0c <initialization+0x76c>)
 8000800:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8000804:	6213      	str	r3, [r2, #32]
	GPIOJ->AFR[0] |= GPIO_AFRL_AFRL7_1 | GPIO_AFRL_AFRL7_2 | GPIO_AFRL_AFRL7_3;
 8000806:	4b81      	ldr	r3, [pc, #516]	; (8000a0c <initialization+0x76c>)
 8000808:	6a1b      	ldr	r3, [r3, #32]
 800080a:	4a80      	ldr	r2, [pc, #512]	; (8000a0c <initialization+0x76c>)
 800080c:	f043 4360 	orr.w	r3, r3, #3758096384	; 0xe0000000
 8000810:	6213      	str	r3, [r2, #32]

	//G1 PJ8
	GPIOJ->MODER   &= ~GPIO_MODER_MODER8;
 8000812:	4b7e      	ldr	r3, [pc, #504]	; (8000a0c <initialization+0x76c>)
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	4a7d      	ldr	r2, [pc, #500]	; (8000a0c <initialization+0x76c>)
 8000818:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800081c:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER8_1;
 800081e:	4b7b      	ldr	r3, [pc, #492]	; (8000a0c <initialization+0x76c>)
 8000820:	681b      	ldr	r3, [r3, #0]
 8000822:	4a7a      	ldr	r2, [pc, #488]	; (8000a0c <initialization+0x76c>)
 8000824:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000828:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR8_1;
 800082a:	4b78      	ldr	r3, [pc, #480]	; (8000a0c <initialization+0x76c>)
 800082c:	689b      	ldr	r3, [r3, #8]
 800082e:	4a77      	ldr	r2, [pc, #476]	; (8000a0c <initialization+0x76c>)
 8000830:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000834:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[1] &= ~GPIO_AFRL_AFRL0_0;
 8000836:	4b75      	ldr	r3, [pc, #468]	; (8000a0c <initialization+0x76c>)
 8000838:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800083a:	4a74      	ldr	r2, [pc, #464]	; (8000a0c <initialization+0x76c>)
 800083c:	f023 0301 	bic.w	r3, r3, #1
 8000840:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOJ->AFR[1] |= GPIO_AFRL_AFRL0_1 | GPIO_AFRL_AFRL0_2 | GPIO_AFRL_AFRL0_3;
 8000842:	4b72      	ldr	r3, [pc, #456]	; (8000a0c <initialization+0x76c>)
 8000844:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000846:	4a71      	ldr	r2, [pc, #452]	; (8000a0c <initialization+0x76c>)
 8000848:	f043 030e 	orr.w	r3, r3, #14
 800084c:	6253      	str	r3, [r2, #36]	; 0x24

	//G2 PJ9
	GPIOJ->MODER   &= ~GPIO_MODER_MODER9;
 800084e:	4b6f      	ldr	r3, [pc, #444]	; (8000a0c <initialization+0x76c>)
 8000850:	681b      	ldr	r3, [r3, #0]
 8000852:	4a6e      	ldr	r2, [pc, #440]	; (8000a0c <initialization+0x76c>)
 8000854:	f423 2340 	bic.w	r3, r3, #786432	; 0xc0000
 8000858:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER9_1;
 800085a:	4b6c      	ldr	r3, [pc, #432]	; (8000a0c <initialization+0x76c>)
 800085c:	681b      	ldr	r3, [r3, #0]
 800085e:	4a6b      	ldr	r2, [pc, #428]	; (8000a0c <initialization+0x76c>)
 8000860:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8000864:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR9_1;
 8000866:	4b69      	ldr	r3, [pc, #420]	; (8000a0c <initialization+0x76c>)
 8000868:	689b      	ldr	r3, [r3, #8]
 800086a:	4a68      	ldr	r2, [pc, #416]	; (8000a0c <initialization+0x76c>)
 800086c:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8000870:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[1] &= ~GPIO_AFRL_AFRL1_0;
 8000872:	4b66      	ldr	r3, [pc, #408]	; (8000a0c <initialization+0x76c>)
 8000874:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000876:	4a65      	ldr	r2, [pc, #404]	; (8000a0c <initialization+0x76c>)
 8000878:	f023 0310 	bic.w	r3, r3, #16
 800087c:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOJ->AFR[1] |= GPIO_AFRL_AFRL1_1 | GPIO_AFRL_AFRL1_2 | GPIO_AFRL_AFRL1_3;
 800087e:	4b63      	ldr	r3, [pc, #396]	; (8000a0c <initialization+0x76c>)
 8000880:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000882:	4a62      	ldr	r2, [pc, #392]	; (8000a0c <initialization+0x76c>)
 8000884:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 8000888:	6253      	str	r3, [r2, #36]	; 0x24

	//G3 PJ10
	GPIOJ->MODER   &= ~GPIO_MODER_MODER10;
 800088a:	4b60      	ldr	r3, [pc, #384]	; (8000a0c <initialization+0x76c>)
 800088c:	681b      	ldr	r3, [r3, #0]
 800088e:	4a5f      	ldr	r2, [pc, #380]	; (8000a0c <initialization+0x76c>)
 8000890:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8000894:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER10_1;
 8000896:	4b5d      	ldr	r3, [pc, #372]	; (8000a0c <initialization+0x76c>)
 8000898:	681b      	ldr	r3, [r3, #0]
 800089a:	4a5c      	ldr	r2, [pc, #368]	; (8000a0c <initialization+0x76c>)
 800089c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80008a0:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR10_1;
 80008a2:	4b5a      	ldr	r3, [pc, #360]	; (8000a0c <initialization+0x76c>)
 80008a4:	689b      	ldr	r3, [r3, #8]
 80008a6:	4a59      	ldr	r2, [pc, #356]	; (8000a0c <initialization+0x76c>)
 80008a8:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80008ac:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[1] &= ~GPIO_AFRL_AFRL2_0;
 80008ae:	4b57      	ldr	r3, [pc, #348]	; (8000a0c <initialization+0x76c>)
 80008b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80008b2:	4a56      	ldr	r2, [pc, #344]	; (8000a0c <initialization+0x76c>)
 80008b4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80008b8:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOJ->AFR[1] |= GPIO_AFRL_AFRL2_1 | GPIO_AFRL_AFRL2_2 | GPIO_AFRL_AFRL2_3;
 80008ba:	4b54      	ldr	r3, [pc, #336]	; (8000a0c <initialization+0x76c>)
 80008bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80008be:	4a53      	ldr	r2, [pc, #332]	; (8000a0c <initialization+0x76c>)
 80008c0:	f443 6360 	orr.w	r3, r3, #3584	; 0xe00
 80008c4:	6253      	str	r3, [r2, #36]	; 0x24

	//G4 PJ11
	GPIOJ->MODER   &= ~GPIO_MODER_MODER11;
 80008c6:	4b51      	ldr	r3, [pc, #324]	; (8000a0c <initialization+0x76c>)
 80008c8:	681b      	ldr	r3, [r3, #0]
 80008ca:	4a50      	ldr	r2, [pc, #320]	; (8000a0c <initialization+0x76c>)
 80008cc:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 80008d0:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER11_1;
 80008d2:	4b4e      	ldr	r3, [pc, #312]	; (8000a0c <initialization+0x76c>)
 80008d4:	681b      	ldr	r3, [r3, #0]
 80008d6:	4a4d      	ldr	r2, [pc, #308]	; (8000a0c <initialization+0x76c>)
 80008d8:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80008dc:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR11_1;
 80008de:	4b4b      	ldr	r3, [pc, #300]	; (8000a0c <initialization+0x76c>)
 80008e0:	689b      	ldr	r3, [r3, #8]
 80008e2:	4a4a      	ldr	r2, [pc, #296]	; (8000a0c <initialization+0x76c>)
 80008e4:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80008e8:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[1] &= ~GPIO_AFRL_AFRL3_0;
 80008ea:	4b48      	ldr	r3, [pc, #288]	; (8000a0c <initialization+0x76c>)
 80008ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80008ee:	4a47      	ldr	r2, [pc, #284]	; (8000a0c <initialization+0x76c>)
 80008f0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80008f4:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOJ->AFR[1] |= GPIO_AFRL_AFRL3_1 | GPIO_AFRL_AFRL3_2 | GPIO_AFRL_AFRL3_3;
 80008f6:	4b45      	ldr	r3, [pc, #276]	; (8000a0c <initialization+0x76c>)
 80008f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80008fa:	4a44      	ldr	r2, [pc, #272]	; (8000a0c <initialization+0x76c>)
 80008fc:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8000900:	6253      	str	r3, [r2, #36]	; 0x24

	//G5 PK0
	GPIOK->MODER   &= ~GPIO_MODER_MODER0;
 8000902:	4b43      	ldr	r3, [pc, #268]	; (8000a10 <initialization+0x770>)
 8000904:	681b      	ldr	r3, [r3, #0]
 8000906:	4a42      	ldr	r2, [pc, #264]	; (8000a10 <initialization+0x770>)
 8000908:	f023 0303 	bic.w	r3, r3, #3
 800090c:	6013      	str	r3, [r2, #0]
	GPIOK->MODER   |= GPIO_MODER_MODER0_1;
 800090e:	4b40      	ldr	r3, [pc, #256]	; (8000a10 <initialization+0x770>)
 8000910:	681b      	ldr	r3, [r3, #0]
 8000912:	4a3f      	ldr	r2, [pc, #252]	; (8000a10 <initialization+0x770>)
 8000914:	f043 0302 	orr.w	r3, r3, #2
 8000918:	6013      	str	r3, [r2, #0]
	GPIOK->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR0_1;
 800091a:	4b3d      	ldr	r3, [pc, #244]	; (8000a10 <initialization+0x770>)
 800091c:	689b      	ldr	r3, [r3, #8]
 800091e:	4a3c      	ldr	r2, [pc, #240]	; (8000a10 <initialization+0x770>)
 8000920:	f043 0302 	orr.w	r3, r3, #2
 8000924:	6093      	str	r3, [r2, #8]
	GPIOK->AFR[0] &= ~GPIO_AFRL_AFRL0_0;
 8000926:	4b3a      	ldr	r3, [pc, #232]	; (8000a10 <initialization+0x770>)
 8000928:	6a1b      	ldr	r3, [r3, #32]
 800092a:	4a39      	ldr	r2, [pc, #228]	; (8000a10 <initialization+0x770>)
 800092c:	f023 0301 	bic.w	r3, r3, #1
 8000930:	6213      	str	r3, [r2, #32]
	GPIOK->AFR[0] |= GPIO_AFRL_AFRL0_1 | GPIO_AFRL_AFRL0_2 | GPIO_AFRL_AFRL0_3;
 8000932:	4b37      	ldr	r3, [pc, #220]	; (8000a10 <initialization+0x770>)
 8000934:	6a1b      	ldr	r3, [r3, #32]
 8000936:	4a36      	ldr	r2, [pc, #216]	; (8000a10 <initialization+0x770>)
 8000938:	f043 030e 	orr.w	r3, r3, #14
 800093c:	6213      	str	r3, [r2, #32]

	//G6 PK1
	GPIOK->MODER   &= ~GPIO_MODER_MODER1;
 800093e:	4b34      	ldr	r3, [pc, #208]	; (8000a10 <initialization+0x770>)
 8000940:	681b      	ldr	r3, [r3, #0]
 8000942:	4a33      	ldr	r2, [pc, #204]	; (8000a10 <initialization+0x770>)
 8000944:	f023 030c 	bic.w	r3, r3, #12
 8000948:	6013      	str	r3, [r2, #0]
	GPIOK->MODER   |= GPIO_MODER_MODER1_1;
 800094a:	4b31      	ldr	r3, [pc, #196]	; (8000a10 <initialization+0x770>)
 800094c:	681b      	ldr	r3, [r3, #0]
 800094e:	4a30      	ldr	r2, [pc, #192]	; (8000a10 <initialization+0x770>)
 8000950:	f043 0308 	orr.w	r3, r3, #8
 8000954:	6013      	str	r3, [r2, #0]
	GPIOK->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR1_1;
 8000956:	4b2e      	ldr	r3, [pc, #184]	; (8000a10 <initialization+0x770>)
 8000958:	689b      	ldr	r3, [r3, #8]
 800095a:	4a2d      	ldr	r2, [pc, #180]	; (8000a10 <initialization+0x770>)
 800095c:	f043 0308 	orr.w	r3, r3, #8
 8000960:	6093      	str	r3, [r2, #8]
	GPIOK->AFR[0] &= ~GPIO_AFRL_AFRL1_0;
 8000962:	4b2b      	ldr	r3, [pc, #172]	; (8000a10 <initialization+0x770>)
 8000964:	6a1b      	ldr	r3, [r3, #32]
 8000966:	4a2a      	ldr	r2, [pc, #168]	; (8000a10 <initialization+0x770>)
 8000968:	f023 0310 	bic.w	r3, r3, #16
 800096c:	6213      	str	r3, [r2, #32]
	GPIOK->AFR[0] |= GPIO_AFRL_AFRL1_1 | GPIO_AFRL_AFRL1_2 | GPIO_AFRL_AFRL1_3;
 800096e:	4b28      	ldr	r3, [pc, #160]	; (8000a10 <initialization+0x770>)
 8000970:	6a1b      	ldr	r3, [r3, #32]
 8000972:	4a27      	ldr	r2, [pc, #156]	; (8000a10 <initialization+0x770>)
 8000974:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 8000978:	6213      	str	r3, [r2, #32]

	//G7 PK2
	GPIOK->MODER   &= ~GPIO_MODER_MODER2;
 800097a:	4b25      	ldr	r3, [pc, #148]	; (8000a10 <initialization+0x770>)
 800097c:	681b      	ldr	r3, [r3, #0]
 800097e:	4a24      	ldr	r2, [pc, #144]	; (8000a10 <initialization+0x770>)
 8000980:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 8000984:	6013      	str	r3, [r2, #0]
	GPIOK->MODER   |= GPIO_MODER_MODER2_1;
 8000986:	4b22      	ldr	r3, [pc, #136]	; (8000a10 <initialization+0x770>)
 8000988:	681b      	ldr	r3, [r3, #0]
 800098a:	4a21      	ldr	r2, [pc, #132]	; (8000a10 <initialization+0x770>)
 800098c:	f043 0320 	orr.w	r3, r3, #32
 8000990:	6013      	str	r3, [r2, #0]
	GPIOK->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR2_1;
 8000992:	4b1f      	ldr	r3, [pc, #124]	; (8000a10 <initialization+0x770>)
 8000994:	689b      	ldr	r3, [r3, #8]
 8000996:	4a1e      	ldr	r2, [pc, #120]	; (8000a10 <initialization+0x770>)
 8000998:	f043 0320 	orr.w	r3, r3, #32
 800099c:	6093      	str	r3, [r2, #8]
	GPIOK->AFR[0] &= ~GPIO_AFRL_AFRL2_0;
 800099e:	4b1c      	ldr	r3, [pc, #112]	; (8000a10 <initialization+0x770>)
 80009a0:	6a1b      	ldr	r3, [r3, #32]
 80009a2:	4a1b      	ldr	r2, [pc, #108]	; (8000a10 <initialization+0x770>)
 80009a4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80009a8:	6213      	str	r3, [r2, #32]
	GPIOK->AFR[0] |= GPIO_AFRL_AFRL2_1 | GPIO_AFRL_AFRL2_2 | GPIO_AFRL_AFRL2_3;
 80009aa:	4b19      	ldr	r3, [pc, #100]	; (8000a10 <initialization+0x770>)
 80009ac:	6a1b      	ldr	r3, [r3, #32]
 80009ae:	4a18      	ldr	r2, [pc, #96]	; (8000a10 <initialization+0x770>)
 80009b0:	f443 6360 	orr.w	r3, r3, #3584	; 0xe00
 80009b4:	6213      	str	r3, [r2, #32]

	//VSYNC
	GPIOI->MODER   &= ~GPIO_MODER_MODER9;
 80009b6:	4b17      	ldr	r3, [pc, #92]	; (8000a14 <initialization+0x774>)
 80009b8:	681b      	ldr	r3, [r3, #0]
 80009ba:	4a16      	ldr	r2, [pc, #88]	; (8000a14 <initialization+0x774>)
 80009bc:	f423 2340 	bic.w	r3, r3, #786432	; 0xc0000
 80009c0:	6013      	str	r3, [r2, #0]
	GPIOI->MODER   |= GPIO_MODER_MODER9_1;
 80009c2:	4b14      	ldr	r3, [pc, #80]	; (8000a14 <initialization+0x774>)
 80009c4:	681b      	ldr	r3, [r3, #0]
 80009c6:	4a13      	ldr	r2, [pc, #76]	; (8000a14 <initialization+0x774>)
 80009c8:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80009cc:	6013      	str	r3, [r2, #0]
	GPIOI->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR9_1;
 80009ce:	4b11      	ldr	r3, [pc, #68]	; (8000a14 <initialization+0x774>)
 80009d0:	689b      	ldr	r3, [r3, #8]
 80009d2:	4a10      	ldr	r2, [pc, #64]	; (8000a14 <initialization+0x774>)
 80009d4:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80009d8:	6093      	str	r3, [r2, #8]
	GPIOI->AFR[1] &= ~GPIO_AFRL_AFRL1_0;
 80009da:	4b0e      	ldr	r3, [pc, #56]	; (8000a14 <initialization+0x774>)
 80009dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80009de:	4a0d      	ldr	r2, [pc, #52]	; (8000a14 <initialization+0x774>)
 80009e0:	f023 0310 	bic.w	r3, r3, #16
 80009e4:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOI->AFR[1] |= GPIO_AFRL_AFRL1_1 | GPIO_AFRL_AFRL1_2 | GPIO_AFRL_AFRL1_3;
 80009e6:	4b0b      	ldr	r3, [pc, #44]	; (8000a14 <initialization+0x774>)
 80009e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80009ea:	4a0a      	ldr	r2, [pc, #40]	; (8000a14 <initialization+0x774>)
 80009ec:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 80009f0:	6253      	str	r3, [r2, #36]	; 0x24

	//HSYNC
	GPIOI->MODER   &= ~GPIO_MODER_MODER10;
 80009f2:	4b08      	ldr	r3, [pc, #32]	; (8000a14 <initialization+0x774>)
 80009f4:	681b      	ldr	r3, [r3, #0]
 80009f6:	4a07      	ldr	r2, [pc, #28]	; (8000a14 <initialization+0x774>)
 80009f8:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 80009fc:	6013      	str	r3, [r2, #0]
	GPIOI->MODER   |= GPIO_MODER_MODER10_1;
 80009fe:	4b05      	ldr	r3, [pc, #20]	; (8000a14 <initialization+0x774>)
 8000a00:	681b      	ldr	r3, [r3, #0]
 8000a02:	4a04      	ldr	r2, [pc, #16]	; (8000a14 <initialization+0x774>)
 8000a04:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000a08:	e006      	b.n	8000a18 <initialization+0x778>
 8000a0a:	bf00      	nop
 8000a0c:	40022400 	.word	0x40022400
 8000a10:	40022800 	.word	0x40022800
 8000a14:	40022000 	.word	0x40022000
 8000a18:	6013      	str	r3, [r2, #0]
	GPIOI->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR10_1;
 8000a1a:	4b6c      	ldr	r3, [pc, #432]	; (8000bcc <initialization+0x92c>)
 8000a1c:	689b      	ldr	r3, [r3, #8]
 8000a1e:	4a6b      	ldr	r2, [pc, #428]	; (8000bcc <initialization+0x92c>)
 8000a20:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000a24:	6093      	str	r3, [r2, #8]
	GPIOI->AFR[1] &= ~GPIO_AFRL_AFRL2_0;
 8000a26:	4b69      	ldr	r3, [pc, #420]	; (8000bcc <initialization+0x92c>)
 8000a28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000a2a:	4a68      	ldr	r2, [pc, #416]	; (8000bcc <initialization+0x92c>)
 8000a2c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000a30:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOI->AFR[1] |= GPIO_AFRL_AFRL2_1 | GPIO_AFRL_AFRL2_2 | GPIO_AFRL_AFRL2_3;
 8000a32:	4b66      	ldr	r3, [pc, #408]	; (8000bcc <initialization+0x92c>)
 8000a34:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000a36:	4a65      	ldr	r2, [pc, #404]	; (8000bcc <initialization+0x92c>)
 8000a38:	f443 6360 	orr.w	r3, r3, #3584	; 0xe00
 8000a3c:	6253      	str	r3, [r2, #36]	; 0x24

	//CLK
	GPIOI->MODER   &= ~GPIO_MODER_MODER14;
 8000a3e:	4b63      	ldr	r3, [pc, #396]	; (8000bcc <initialization+0x92c>)
 8000a40:	681b      	ldr	r3, [r3, #0]
 8000a42:	4a62      	ldr	r2, [pc, #392]	; (8000bcc <initialization+0x92c>)
 8000a44:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 8000a48:	6013      	str	r3, [r2, #0]
	GPIOI->MODER   |= GPIO_MODER_MODER14_1;
 8000a4a:	4b60      	ldr	r3, [pc, #384]	; (8000bcc <initialization+0x92c>)
 8000a4c:	681b      	ldr	r3, [r3, #0]
 8000a4e:	4a5f      	ldr	r2, [pc, #380]	; (8000bcc <initialization+0x92c>)
 8000a50:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8000a54:	6013      	str	r3, [r2, #0]
	GPIOI->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR14_1;
 8000a56:	4b5d      	ldr	r3, [pc, #372]	; (8000bcc <initialization+0x92c>)
 8000a58:	689b      	ldr	r3, [r3, #8]
 8000a5a:	4a5c      	ldr	r2, [pc, #368]	; (8000bcc <initialization+0x92c>)
 8000a5c:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8000a60:	6093      	str	r3, [r2, #8]
	GPIOI->AFR[1] &= ~GPIO_AFRL_AFRL6_0;
 8000a62:	4b5a      	ldr	r3, [pc, #360]	; (8000bcc <initialization+0x92c>)
 8000a64:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000a66:	4a59      	ldr	r2, [pc, #356]	; (8000bcc <initialization+0x92c>)
 8000a68:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8000a6c:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOI->AFR[1] |= GPIO_AFRL_AFRL6_1 | GPIO_AFRL_AFRL6_2 | GPIO_AFRL_AFRL6_3;
 8000a6e:	4b57      	ldr	r3, [pc, #348]	; (8000bcc <initialization+0x92c>)
 8000a70:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000a72:	4a56      	ldr	r2, [pc, #344]	; (8000bcc <initialization+0x92c>)
 8000a74:	f043 6360 	orr.w	r3, r3, #234881024	; 0xe000000
 8000a78:	6253      	str	r3, [r2, #36]	; 0x24

	//DE
	GPIOK->MODER   &= ~GPIO_MODER_MODER7;
 8000a7a:	4b55      	ldr	r3, [pc, #340]	; (8000bd0 <initialization+0x930>)
 8000a7c:	681b      	ldr	r3, [r3, #0]
 8000a7e:	4a54      	ldr	r2, [pc, #336]	; (8000bd0 <initialization+0x930>)
 8000a80:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8000a84:	6013      	str	r3, [r2, #0]
	GPIOK->MODER   |= GPIO_MODER_MODER7_1;
 8000a86:	4b52      	ldr	r3, [pc, #328]	; (8000bd0 <initialization+0x930>)
 8000a88:	681b      	ldr	r3, [r3, #0]
 8000a8a:	4a51      	ldr	r2, [pc, #324]	; (8000bd0 <initialization+0x930>)
 8000a8c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000a90:	6013      	str	r3, [r2, #0]
	GPIOK->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR7_1;
 8000a92:	4b4f      	ldr	r3, [pc, #316]	; (8000bd0 <initialization+0x930>)
 8000a94:	689b      	ldr	r3, [r3, #8]
 8000a96:	4a4e      	ldr	r2, [pc, #312]	; (8000bd0 <initialization+0x930>)
 8000a98:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000a9c:	6093      	str	r3, [r2, #8]
	GPIOK->AFR[0] &= ~GPIO_AFRL_AFRL7_0;
 8000a9e:	4b4c      	ldr	r3, [pc, #304]	; (8000bd0 <initialization+0x930>)
 8000aa0:	6a1b      	ldr	r3, [r3, #32]
 8000aa2:	4a4b      	ldr	r2, [pc, #300]	; (8000bd0 <initialization+0x930>)
 8000aa4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8000aa8:	6213      	str	r3, [r2, #32]
	GPIOK->AFR[0] |= GPIO_AFRL_AFRL7_1 | GPIO_AFRL_AFRL7_2 | GPIO_AFRL_AFRL7_3;
 8000aaa:	4b49      	ldr	r3, [pc, #292]	; (8000bd0 <initialization+0x930>)
 8000aac:	6a1b      	ldr	r3, [r3, #32]
 8000aae:	4a48      	ldr	r2, [pc, #288]	; (8000bd0 <initialization+0x930>)
 8000ab0:	f043 4360 	orr.w	r3, r3, #3758096384	; 0xe0000000
 8000ab4:	6213      	str	r3, [r2, #32]

	//LED
	GPIOK->MODER &= ~GPIO_MODER_MODER3;
 8000ab6:	4b46      	ldr	r3, [pc, #280]	; (8000bd0 <initialization+0x930>)
 8000ab8:	681b      	ldr	r3, [r3, #0]
 8000aba:	4a45      	ldr	r2, [pc, #276]	; (8000bd0 <initialization+0x930>)
 8000abc:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8000ac0:	6013      	str	r3, [r2, #0]
	GPIOK->MODER |= GPIO_MODER_MODER3_0;
 8000ac2:	4b43      	ldr	r3, [pc, #268]	; (8000bd0 <initialization+0x930>)
 8000ac4:	681b      	ldr	r3, [r3, #0]
 8000ac6:	4a42      	ldr	r2, [pc, #264]	; (8000bd0 <initialization+0x930>)
 8000ac8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000acc:	6013      	str	r3, [r2, #0]
	GPIOK->BSRR |= GPIO_BSRR_BS_3;
 8000ace:	4b40      	ldr	r3, [pc, #256]	; (8000bd0 <initialization+0x930>)
 8000ad0:	699b      	ldr	r3, [r3, #24]
 8000ad2:	4a3f      	ldr	r2, [pc, #252]	; (8000bd0 <initialization+0x930>)
 8000ad4:	f043 0308 	orr.w	r3, r3, #8
 8000ad8:	6193      	str	r3, [r2, #24]

	//ON
	GPIOI->MODER &= ~GPIO_MODER_MODER12;
 8000ada:	4b3c      	ldr	r3, [pc, #240]	; (8000bcc <initialization+0x92c>)
 8000adc:	681b      	ldr	r3, [r3, #0]
 8000ade:	4a3b      	ldr	r2, [pc, #236]	; (8000bcc <initialization+0x92c>)
 8000ae0:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 8000ae4:	6013      	str	r3, [r2, #0]
	GPIOI->MODER |= GPIO_MODER_MODER12_0;
 8000ae6:	4b39      	ldr	r3, [pc, #228]	; (8000bcc <initialization+0x92c>)
 8000ae8:	681b      	ldr	r3, [r3, #0]
 8000aea:	4a38      	ldr	r2, [pc, #224]	; (8000bcc <initialization+0x92c>)
 8000aec:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000af0:	6013      	str	r3, [r2, #0]
	GPIOI->BSRR |= GPIO_BSRR_BS_12;
 8000af2:	4b36      	ldr	r3, [pc, #216]	; (8000bcc <initialization+0x92c>)
 8000af4:	699b      	ldr	r3, [r3, #24]
 8000af6:	4a35      	ldr	r2, [pc, #212]	; (8000bcc <initialization+0x92c>)
 8000af8:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000afc:	6193      	str	r3, [r2, #24]

	GPIOC->MODER &= ~GPIO_MODER_MODER7;
 8000afe:	4b35      	ldr	r3, [pc, #212]	; (8000bd4 <initialization+0x934>)
 8000b00:	681b      	ldr	r3, [r3, #0]
 8000b02:	4a34      	ldr	r2, [pc, #208]	; (8000bd4 <initialization+0x934>)
 8000b04:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8000b08:	6013      	str	r3, [r2, #0]
	GPIOC->MODER |= GPIO_MODER_MODER7_0;
 8000b0a:	4b32      	ldr	r3, [pc, #200]	; (8000bd4 <initialization+0x934>)
 8000b0c:	681b      	ldr	r3, [r3, #0]
 8000b0e:	4a31      	ldr	r2, [pc, #196]	; (8000bd4 <initialization+0x934>)
 8000b10:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000b14:	6013      	str	r3, [r2, #0]
	GPIOC->BSRR |= GPIO_BSRR_BS_7;
 8000b16:	4b2f      	ldr	r3, [pc, #188]	; (8000bd4 <initialization+0x934>)
 8000b18:	699b      	ldr	r3, [r3, #24]
 8000b1a:	4a2e      	ldr	r2, [pc, #184]	; (8000bd4 <initialization+0x934>)
 8000b1c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000b20:	6193      	str	r3, [r2, #24]

	LTDC->SSCR |= ((DISPLAY_HSYNC - 1) << 16 | (DISPLAY_VSYNC - 1));
 8000b22:	4b2d      	ldr	r3, [pc, #180]	; (8000bd8 <initialization+0x938>)
 8000b24:	689a      	ldr	r2, [r3, #8]
 8000b26:	492c      	ldr	r1, [pc, #176]	; (8000bd8 <initialization+0x938>)
 8000b28:	4b2c      	ldr	r3, [pc, #176]	; (8000bdc <initialization+0x93c>)
 8000b2a:	4313      	orrs	r3, r2
 8000b2c:	608b      	str	r3, [r1, #8]
	LTDC->BPCR |= ((DISPLAY_HSYNC+DISPLAY_HBP-1) << 16 | (DISPLAY_VSYNC+DISPLAY_VBP-1));
 8000b2e:	4b2a      	ldr	r3, [pc, #168]	; (8000bd8 <initialization+0x938>)
 8000b30:	68da      	ldr	r2, [r3, #12]
 8000b32:	4929      	ldr	r1, [pc, #164]	; (8000bd8 <initialization+0x938>)
 8000b34:	4b2a      	ldr	r3, [pc, #168]	; (8000be0 <initialization+0x940>)
 8000b36:	4313      	orrs	r3, r2
 8000b38:	60cb      	str	r3, [r1, #12]
	LTDC->AWCR |= ((DISPLAY_WIDTH + DISPLAY_HSYNC + DISPLAY_HBP - 1) << 16 | (DISPLAY_HEIGHT + DISPLAY_VSYNC + DISPLAY_VBP - 1));
 8000b3a:	4b27      	ldr	r3, [pc, #156]	; (8000bd8 <initialization+0x938>)
 8000b3c:	691a      	ldr	r2, [r3, #16]
 8000b3e:	4926      	ldr	r1, [pc, #152]	; (8000bd8 <initialization+0x938>)
 8000b40:	4b28      	ldr	r3, [pc, #160]	; (8000be4 <initialization+0x944>)
 8000b42:	4313      	orrs	r3, r2
 8000b44:	610b      	str	r3, [r1, #16]
	LTDC->TWCR |= ((DISPLAY_WIDTH + DISPLAY_HSYNC + DISPLAY_HBP + DISPLAY_HFP -1)<< 16 |(DISPLAY_HEIGHT + DISPLAY_VSYNC + DISPLAY_VBP + DISPLAY_VFP - 1));
 8000b46:	4b24      	ldr	r3, [pc, #144]	; (8000bd8 <initialization+0x938>)
 8000b48:	695a      	ldr	r2, [r3, #20]
 8000b4a:	4923      	ldr	r1, [pc, #140]	; (8000bd8 <initialization+0x938>)
 8000b4c:	4b26      	ldr	r3, [pc, #152]	; (8000be8 <initialization+0x948>)
 8000b4e:	4313      	orrs	r3, r2
 8000b50:	614b      	str	r3, [r1, #20]
	LTDC_Layer2->WHPCR |= (((DISPLAY_WIDTH + DISPLAY_HBP + DISPLAY_HSYNC - 1) << 16) | (DISPLAY_HBP + DISPLAY_HSYNC));
 8000b52:	4b26      	ldr	r3, [pc, #152]	; (8000bec <initialization+0x94c>)
 8000b54:	685a      	ldr	r2, [r3, #4]
 8000b56:	4925      	ldr	r1, [pc, #148]	; (8000bec <initialization+0x94c>)
 8000b58:	4b25      	ldr	r3, [pc, #148]	; (8000bf0 <initialization+0x950>)
 8000b5a:	4313      	orrs	r3, r2
 8000b5c:	604b      	str	r3, [r1, #4]
	LTDC_Layer2->WVPCR |= (((DISPLAY_HEIGHT + DISPLAY_VSYNC + DISPLAY_VBP - 1) << 16) |(DISPLAY_VSYNC + DISPLAY_VBP));
 8000b5e:	4b23      	ldr	r3, [pc, #140]	; (8000bec <initialization+0x94c>)
 8000b60:	689a      	ldr	r2, [r3, #8]
 8000b62:	4922      	ldr	r1, [pc, #136]	; (8000bec <initialization+0x94c>)
 8000b64:	4b23      	ldr	r3, [pc, #140]	; (8000bf4 <initialization+0x954>)
 8000b66:	4313      	orrs	r3, r2
 8000b68:	608b      	str	r3, [r1, #8]
	LTDC_Layer2->PFCR = 2;
 8000b6a:	4b20      	ldr	r3, [pc, #128]	; (8000bec <initialization+0x94c>)
 8000b6c:	2202      	movs	r2, #2
 8000b6e:	611a      	str	r2, [r3, #16]
	LTDC_Layer2->BFCR |= ((4 << 8) | 5);
 8000b70:	4b1e      	ldr	r3, [pc, #120]	; (8000bec <initialization+0x94c>)
 8000b72:	69da      	ldr	r2, [r3, #28]
 8000b74:	491d      	ldr	r1, [pc, #116]	; (8000bec <initialization+0x94c>)
 8000b76:	f240 4305 	movw	r3, #1029	; 0x405
 8000b7a:	4313      	orrs	r3, r2
 8000b7c:	61cb      	str	r3, [r1, #28]
	LTDC_Layer2->CACR = 0xff;
 8000b7e:	4b1b      	ldr	r3, [pc, #108]	; (8000bec <initialization+0x94c>)
 8000b80:	22ff      	movs	r2, #255	; 0xff
 8000b82:	615a      	str	r2, [r3, #20]
	LTDC_Layer2->CFBLR |= (((PIXEL_SIZE * DISPLAY_WIDTH) << 16) | (PIXEL_SIZE * DISPLAY_WIDTH + 3));
 8000b84:	4b19      	ldr	r3, [pc, #100]	; (8000bec <initialization+0x94c>)
 8000b86:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000b88:	4918      	ldr	r1, [pc, #96]	; (8000bec <initialization+0x94c>)
 8000b8a:	4b1b      	ldr	r3, [pc, #108]	; (8000bf8 <initialization+0x958>)
 8000b8c:	4313      	orrs	r3, r2
 8000b8e:	62cb      	str	r3, [r1, #44]	; 0x2c
	LTDC_Layer2->CFBLNR |= DISPLAY_HEIGHT;
 8000b90:	4b16      	ldr	r3, [pc, #88]	; (8000bec <initialization+0x94c>)
 8000b92:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000b94:	4a15      	ldr	r2, [pc, #84]	; (8000bec <initialization+0x94c>)
 8000b96:	f443 7388 	orr.w	r3, r3, #272	; 0x110
 8000b9a:	6313      	str	r3, [r2, #48]	; 0x30
	LTDC_Layer2->CR |= LTDC_LxCR_LEN;
 8000b9c:	4b13      	ldr	r3, [pc, #76]	; (8000bec <initialization+0x94c>)
 8000b9e:	681b      	ldr	r3, [r3, #0]
 8000ba0:	4a12      	ldr	r2, [pc, #72]	; (8000bec <initialization+0x94c>)
 8000ba2:	f043 0301 	orr.w	r3, r3, #1
 8000ba6:	6013      	str	r3, [r2, #0]
	LTDC->SRCR |= LTDC_SRCR_VBR;
 8000ba8:	4b0b      	ldr	r3, [pc, #44]	; (8000bd8 <initialization+0x938>)
 8000baa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000bac:	4a0a      	ldr	r2, [pc, #40]	; (8000bd8 <initialization+0x938>)
 8000bae:	f043 0302 	orr.w	r3, r3, #2
 8000bb2:	6253      	str	r3, [r2, #36]	; 0x24
	LTDC->GCR |= LTDC_GCR_LTDCEN;
 8000bb4:	4b08      	ldr	r3, [pc, #32]	; (8000bd8 <initialization+0x938>)
 8000bb6:	699b      	ldr	r3, [r3, #24]
 8000bb8:	4a07      	ldr	r2, [pc, #28]	; (8000bd8 <initialization+0x938>)
 8000bba:	f043 0301 	orr.w	r3, r3, #1
 8000bbe:	6193      	str	r3, [r2, #24]
}
 8000bc0:	bf00      	nop
 8000bc2:	46bd      	mov	sp, r7
 8000bc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bc8:	4770      	bx	lr
 8000bca:	bf00      	nop
 8000bcc:	40022000 	.word	0x40022000
 8000bd0:	40022800 	.word	0x40022800
 8000bd4:	40020800 	.word	0x40020800
 8000bd8:	40016800 	.word	0x40016800
 8000bdc:	001d0009 	.word	0x001d0009
 8000be0:	002a000b 	.word	0x002a000b
 8000be4:	020a011b 	.word	0x020a011b
 8000be8:	022a011d 	.word	0x022a011d
 8000bec:	40016904 	.word	0x40016904
 8000bf0:	020a002b 	.word	0x020a002b
 8000bf4:	011b000c 	.word	0x011b000c
 8000bf8:	07800783 	.word	0x07800783

08000bfc <change_digit_2>:

void change_digit_2(int poz, int number)
{
 8000bfc:	b480      	push	{r7}
 8000bfe:	b099      	sub	sp, #100	; 0x64
 8000c00:	af00      	add	r7, sp, #0
 8000c02:	6078      	str	r0, [r7, #4]
 8000c04:	6039      	str	r1, [r7, #0]
	int x=0;
 8000c06:	2300      	movs	r3, #0
 8000c08:	65fb      	str	r3, [r7, #92]	; 0x5c
	int k=0;
 8000c0a:	2300      	movs	r3, #0
 8000c0c:	65bb      	str	r3, [r7, #88]	; 0x58

	if(poz==1)
 8000c0e:	687b      	ldr	r3, [r7, #4]
 8000c10:	2b01      	cmp	r3, #1
 8000c12:	d101      	bne.n	8000c18 <change_digit_2+0x1c>
		x = 0;
 8000c14:	2300      	movs	r3, #0
 8000c16:	65fb      	str	r3, [r7, #92]	; 0x5c
	if(poz==2)
 8000c18:	687b      	ldr	r3, [r7, #4]
 8000c1a:	2b02      	cmp	r3, #2
 8000c1c:	d101      	bne.n	8000c22 <change_digit_2+0x26>
		x = 110;
 8000c1e:	236e      	movs	r3, #110	; 0x6e
 8000c20:	65fb      	str	r3, [r7, #92]	; 0x5c
	if(poz==3)
 8000c22:	687b      	ldr	r3, [r7, #4]
 8000c24:	2b03      	cmp	r3, #3
 8000c26:	d101      	bne.n	8000c2c <change_digit_2+0x30>
		x = 246;
 8000c28:	23f6      	movs	r3, #246	; 0xf6
 8000c2a:	65fb      	str	r3, [r7, #92]	; 0x5c
	if(poz==4)
 8000c2c:	687b      	ldr	r3, [r7, #4]
 8000c2e:	2b04      	cmp	r3, #4
 8000c30:	d102      	bne.n	8000c38 <change_digit_2+0x3c>
		x = 356;
 8000c32:	f44f 73b2 	mov.w	r3, #356	; 0x164
 8000c36:	65fb      	str	r3, [r7, #92]	; 0x5c

	if(number==0)
 8000c38:	683b      	ldr	r3, [r7, #0]
 8000c3a:	2b00      	cmp	r3, #0
 8000c3c:	d126      	bne.n	8000c8c <change_digit_2+0x90>
		for(int i = 0; i <= 173; ++i)
 8000c3e:	2300      	movs	r3, #0
 8000c40:	657b      	str	r3, [r7, #84]	; 0x54
 8000c42:	e020      	b.n	8000c86 <change_digit_2+0x8a>
			for(int j = 0; j <= 98; ++j)
 8000c44:	2300      	movs	r3, #0
 8000c46:	653b      	str	r3, [r7, #80]	; 0x50
 8000c48:	e017      	b.n	8000c7a <change_digit_2+0x7e>
				screen[x+42253+i*480+j] = zero_picture_2[k++];
 8000c4a:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8000c4c:	1c4b      	adds	r3, r1, #1
 8000c4e:	65bb      	str	r3, [r7, #88]	; 0x58
 8000c50:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000c52:	f24a 520d 	movw	r2, #42253	; 0xa50d
 8000c56:	441a      	add	r2, r3
 8000c58:	6d78      	ldr	r0, [r7, #84]	; 0x54
 8000c5a:	4603      	mov	r3, r0
 8000c5c:	011b      	lsls	r3, r3, #4
 8000c5e:	1a1b      	subs	r3, r3, r0
 8000c60:	015b      	lsls	r3, r3, #5
 8000c62:	441a      	add	r2, r3
 8000c64:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000c66:	4413      	add	r3, r2
 8000c68:	4aa0      	ldr	r2, [pc, #640]	; (8000eec <change_digit_2+0x2f0>)
 8000c6a:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8000c6e:	4aa0      	ldr	r2, [pc, #640]	; (8000ef0 <change_digit_2+0x2f4>)
 8000c70:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int j = 0; j <= 98; ++j)
 8000c74:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000c76:	3301      	adds	r3, #1
 8000c78:	653b      	str	r3, [r7, #80]	; 0x50
 8000c7a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000c7c:	2b62      	cmp	r3, #98	; 0x62
 8000c7e:	dde4      	ble.n	8000c4a <change_digit_2+0x4e>
		for(int i = 0; i <= 173; ++i)
 8000c80:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8000c82:	3301      	adds	r3, #1
 8000c84:	657b      	str	r3, [r7, #84]	; 0x54
 8000c86:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8000c88:	2bad      	cmp	r3, #173	; 0xad
 8000c8a:	dddb      	ble.n	8000c44 <change_digit_2+0x48>
	if(number==1)
 8000c8c:	683b      	ldr	r3, [r7, #0]
 8000c8e:	2b01      	cmp	r3, #1
 8000c90:	d126      	bne.n	8000ce0 <change_digit_2+0xe4>
		for(int i = 0; i <= 173; ++i)
 8000c92:	2300      	movs	r3, #0
 8000c94:	64fb      	str	r3, [r7, #76]	; 0x4c
 8000c96:	e020      	b.n	8000cda <change_digit_2+0xde>
			for(int j = 0; j <= 98; ++j)
 8000c98:	2300      	movs	r3, #0
 8000c9a:	64bb      	str	r3, [r7, #72]	; 0x48
 8000c9c:	e017      	b.n	8000cce <change_digit_2+0xd2>
				screen[x+42253+i*480+j] = one_picture_2[k++];
 8000c9e:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8000ca0:	1c4b      	adds	r3, r1, #1
 8000ca2:	65bb      	str	r3, [r7, #88]	; 0x58
 8000ca4:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000ca6:	f24a 520d 	movw	r2, #42253	; 0xa50d
 8000caa:	441a      	add	r2, r3
 8000cac:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8000cae:	4603      	mov	r3, r0
 8000cb0:	011b      	lsls	r3, r3, #4
 8000cb2:	1a1b      	subs	r3, r3, r0
 8000cb4:	015b      	lsls	r3, r3, #5
 8000cb6:	441a      	add	r2, r3
 8000cb8:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8000cba:	4413      	add	r3, r2
 8000cbc:	4a8d      	ldr	r2, [pc, #564]	; (8000ef4 <change_digit_2+0x2f8>)
 8000cbe:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8000cc2:	4a8b      	ldr	r2, [pc, #556]	; (8000ef0 <change_digit_2+0x2f4>)
 8000cc4:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int j = 0; j <= 98; ++j)
 8000cc8:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8000cca:	3301      	adds	r3, #1
 8000ccc:	64bb      	str	r3, [r7, #72]	; 0x48
 8000cce:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8000cd0:	2b62      	cmp	r3, #98	; 0x62
 8000cd2:	dde4      	ble.n	8000c9e <change_digit_2+0xa2>
		for(int i = 0; i <= 173; ++i)
 8000cd4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8000cd6:	3301      	adds	r3, #1
 8000cd8:	64fb      	str	r3, [r7, #76]	; 0x4c
 8000cda:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8000cdc:	2bad      	cmp	r3, #173	; 0xad
 8000cde:	dddb      	ble.n	8000c98 <change_digit_2+0x9c>
	if(number==2)
 8000ce0:	683b      	ldr	r3, [r7, #0]
 8000ce2:	2b02      	cmp	r3, #2
 8000ce4:	d126      	bne.n	8000d34 <change_digit_2+0x138>
		for(int i = 0; i <= 173; ++i)
 8000ce6:	2300      	movs	r3, #0
 8000ce8:	647b      	str	r3, [r7, #68]	; 0x44
 8000cea:	e020      	b.n	8000d2e <change_digit_2+0x132>
			for(int j = 0; j <= 98; ++j)
 8000cec:	2300      	movs	r3, #0
 8000cee:	643b      	str	r3, [r7, #64]	; 0x40
 8000cf0:	e017      	b.n	8000d22 <change_digit_2+0x126>
				screen[x+42253+i*480+j] = two_picture_2[k++];
 8000cf2:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8000cf4:	1c4b      	adds	r3, r1, #1
 8000cf6:	65bb      	str	r3, [r7, #88]	; 0x58
 8000cf8:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000cfa:	f24a 520d 	movw	r2, #42253	; 0xa50d
 8000cfe:	441a      	add	r2, r3
 8000d00:	6c78      	ldr	r0, [r7, #68]	; 0x44
 8000d02:	4603      	mov	r3, r0
 8000d04:	011b      	lsls	r3, r3, #4
 8000d06:	1a1b      	subs	r3, r3, r0
 8000d08:	015b      	lsls	r3, r3, #5
 8000d0a:	441a      	add	r2, r3
 8000d0c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8000d0e:	4413      	add	r3, r2
 8000d10:	4a79      	ldr	r2, [pc, #484]	; (8000ef8 <change_digit_2+0x2fc>)
 8000d12:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8000d16:	4a76      	ldr	r2, [pc, #472]	; (8000ef0 <change_digit_2+0x2f4>)
 8000d18:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int j = 0; j <= 98; ++j)
 8000d1c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8000d1e:	3301      	adds	r3, #1
 8000d20:	643b      	str	r3, [r7, #64]	; 0x40
 8000d22:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8000d24:	2b62      	cmp	r3, #98	; 0x62
 8000d26:	dde4      	ble.n	8000cf2 <change_digit_2+0xf6>
		for(int i = 0; i <= 173; ++i)
 8000d28:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8000d2a:	3301      	adds	r3, #1
 8000d2c:	647b      	str	r3, [r7, #68]	; 0x44
 8000d2e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8000d30:	2bad      	cmp	r3, #173	; 0xad
 8000d32:	dddb      	ble.n	8000cec <change_digit_2+0xf0>
	if(number==3)
 8000d34:	683b      	ldr	r3, [r7, #0]
 8000d36:	2b03      	cmp	r3, #3
 8000d38:	d126      	bne.n	8000d88 <change_digit_2+0x18c>
		for(int i = 0; i <= 173; ++i)
 8000d3a:	2300      	movs	r3, #0
 8000d3c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8000d3e:	e020      	b.n	8000d82 <change_digit_2+0x186>
			for(int j = 0; j <= 98; ++j)
 8000d40:	2300      	movs	r3, #0
 8000d42:	63bb      	str	r3, [r7, #56]	; 0x38
 8000d44:	e017      	b.n	8000d76 <change_digit_2+0x17a>
				screen[x+42253+i*480+j] = three_picture_2[k++];
 8000d46:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8000d48:	1c4b      	adds	r3, r1, #1
 8000d4a:	65bb      	str	r3, [r7, #88]	; 0x58
 8000d4c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000d4e:	f24a 520d 	movw	r2, #42253	; 0xa50d
 8000d52:	441a      	add	r2, r3
 8000d54:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 8000d56:	4603      	mov	r3, r0
 8000d58:	011b      	lsls	r3, r3, #4
 8000d5a:	1a1b      	subs	r3, r3, r0
 8000d5c:	015b      	lsls	r3, r3, #5
 8000d5e:	441a      	add	r2, r3
 8000d60:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000d62:	4413      	add	r3, r2
 8000d64:	4a65      	ldr	r2, [pc, #404]	; (8000efc <change_digit_2+0x300>)
 8000d66:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8000d6a:	4a61      	ldr	r2, [pc, #388]	; (8000ef0 <change_digit_2+0x2f4>)
 8000d6c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int j = 0; j <= 98; ++j)
 8000d70:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000d72:	3301      	adds	r3, #1
 8000d74:	63bb      	str	r3, [r7, #56]	; 0x38
 8000d76:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000d78:	2b62      	cmp	r3, #98	; 0x62
 8000d7a:	dde4      	ble.n	8000d46 <change_digit_2+0x14a>
		for(int i = 0; i <= 173; ++i)
 8000d7c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8000d7e:	3301      	adds	r3, #1
 8000d80:	63fb      	str	r3, [r7, #60]	; 0x3c
 8000d82:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8000d84:	2bad      	cmp	r3, #173	; 0xad
 8000d86:	dddb      	ble.n	8000d40 <change_digit_2+0x144>
	if(number==4)
 8000d88:	683b      	ldr	r3, [r7, #0]
 8000d8a:	2b04      	cmp	r3, #4
 8000d8c:	d126      	bne.n	8000ddc <change_digit_2+0x1e0>
		for(int i = 0; i <= 173; ++i)
 8000d8e:	2300      	movs	r3, #0
 8000d90:	637b      	str	r3, [r7, #52]	; 0x34
 8000d92:	e020      	b.n	8000dd6 <change_digit_2+0x1da>
			for(int j = 0; j <= 98; ++j)
 8000d94:	2300      	movs	r3, #0
 8000d96:	633b      	str	r3, [r7, #48]	; 0x30
 8000d98:	e017      	b.n	8000dca <change_digit_2+0x1ce>
				screen[x+42253+i*480+j] = four_picture_2[k++];
 8000d9a:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8000d9c:	1c4b      	adds	r3, r1, #1
 8000d9e:	65bb      	str	r3, [r7, #88]	; 0x58
 8000da0:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000da2:	f24a 520d 	movw	r2, #42253	; 0xa50d
 8000da6:	441a      	add	r2, r3
 8000da8:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8000daa:	4603      	mov	r3, r0
 8000dac:	011b      	lsls	r3, r3, #4
 8000dae:	1a1b      	subs	r3, r3, r0
 8000db0:	015b      	lsls	r3, r3, #5
 8000db2:	441a      	add	r2, r3
 8000db4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8000db6:	4413      	add	r3, r2
 8000db8:	4a51      	ldr	r2, [pc, #324]	; (8000f00 <change_digit_2+0x304>)
 8000dba:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8000dbe:	4a4c      	ldr	r2, [pc, #304]	; (8000ef0 <change_digit_2+0x2f4>)
 8000dc0:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int j = 0; j <= 98; ++j)
 8000dc4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8000dc6:	3301      	adds	r3, #1
 8000dc8:	633b      	str	r3, [r7, #48]	; 0x30
 8000dca:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8000dcc:	2b62      	cmp	r3, #98	; 0x62
 8000dce:	dde4      	ble.n	8000d9a <change_digit_2+0x19e>
		for(int i = 0; i <= 173; ++i)
 8000dd0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000dd2:	3301      	adds	r3, #1
 8000dd4:	637b      	str	r3, [r7, #52]	; 0x34
 8000dd6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000dd8:	2bad      	cmp	r3, #173	; 0xad
 8000dda:	dddb      	ble.n	8000d94 <change_digit_2+0x198>
	if(number==5)
 8000ddc:	683b      	ldr	r3, [r7, #0]
 8000dde:	2b05      	cmp	r3, #5
 8000de0:	d126      	bne.n	8000e30 <change_digit_2+0x234>
		for(int i = 0; i <= 173; ++i)
 8000de2:	2300      	movs	r3, #0
 8000de4:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000de6:	e020      	b.n	8000e2a <change_digit_2+0x22e>
			for(int j = 0; j <= 98; ++j)
 8000de8:	2300      	movs	r3, #0
 8000dea:	62bb      	str	r3, [r7, #40]	; 0x28
 8000dec:	e017      	b.n	8000e1e <change_digit_2+0x222>
				screen[x+42253+i*480+j] = five_picture_2[k++];
 8000dee:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8000df0:	1c4b      	adds	r3, r1, #1
 8000df2:	65bb      	str	r3, [r7, #88]	; 0x58
 8000df4:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000df6:	f24a 520d 	movw	r2, #42253	; 0xa50d
 8000dfa:	441a      	add	r2, r3
 8000dfc:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8000dfe:	4603      	mov	r3, r0
 8000e00:	011b      	lsls	r3, r3, #4
 8000e02:	1a1b      	subs	r3, r3, r0
 8000e04:	015b      	lsls	r3, r3, #5
 8000e06:	441a      	add	r2, r3
 8000e08:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000e0a:	4413      	add	r3, r2
 8000e0c:	4a3d      	ldr	r2, [pc, #244]	; (8000f04 <change_digit_2+0x308>)
 8000e0e:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8000e12:	4a37      	ldr	r2, [pc, #220]	; (8000ef0 <change_digit_2+0x2f4>)
 8000e14:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int j = 0; j <= 98; ++j)
 8000e18:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000e1a:	3301      	adds	r3, #1
 8000e1c:	62bb      	str	r3, [r7, #40]	; 0x28
 8000e1e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000e20:	2b62      	cmp	r3, #98	; 0x62
 8000e22:	dde4      	ble.n	8000dee <change_digit_2+0x1f2>
		for(int i = 0; i <= 173; ++i)
 8000e24:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000e26:	3301      	adds	r3, #1
 8000e28:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000e2a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000e2c:	2bad      	cmp	r3, #173	; 0xad
 8000e2e:	dddb      	ble.n	8000de8 <change_digit_2+0x1ec>
	if(number==6)
 8000e30:	683b      	ldr	r3, [r7, #0]
 8000e32:	2b06      	cmp	r3, #6
 8000e34:	d126      	bne.n	8000e84 <change_digit_2+0x288>
		for(int i = 0; i <= 173; ++i)
 8000e36:	2300      	movs	r3, #0
 8000e38:	627b      	str	r3, [r7, #36]	; 0x24
 8000e3a:	e020      	b.n	8000e7e <change_digit_2+0x282>
			for(int j = 0; j <= 98; ++j)
 8000e3c:	2300      	movs	r3, #0
 8000e3e:	623b      	str	r3, [r7, #32]
 8000e40:	e017      	b.n	8000e72 <change_digit_2+0x276>
				screen[x+42253+i*480+j] = six_picture_2[k++];
 8000e42:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8000e44:	1c4b      	adds	r3, r1, #1
 8000e46:	65bb      	str	r3, [r7, #88]	; 0x58
 8000e48:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000e4a:	f24a 520d 	movw	r2, #42253	; 0xa50d
 8000e4e:	441a      	add	r2, r3
 8000e50:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8000e52:	4603      	mov	r3, r0
 8000e54:	011b      	lsls	r3, r3, #4
 8000e56:	1a1b      	subs	r3, r3, r0
 8000e58:	015b      	lsls	r3, r3, #5
 8000e5a:	441a      	add	r2, r3
 8000e5c:	6a3b      	ldr	r3, [r7, #32]
 8000e5e:	4413      	add	r3, r2
 8000e60:	4a29      	ldr	r2, [pc, #164]	; (8000f08 <change_digit_2+0x30c>)
 8000e62:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8000e66:	4a22      	ldr	r2, [pc, #136]	; (8000ef0 <change_digit_2+0x2f4>)
 8000e68:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int j = 0; j <= 98; ++j)
 8000e6c:	6a3b      	ldr	r3, [r7, #32]
 8000e6e:	3301      	adds	r3, #1
 8000e70:	623b      	str	r3, [r7, #32]
 8000e72:	6a3b      	ldr	r3, [r7, #32]
 8000e74:	2b62      	cmp	r3, #98	; 0x62
 8000e76:	dde4      	ble.n	8000e42 <change_digit_2+0x246>
		for(int i = 0; i <= 173; ++i)
 8000e78:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000e7a:	3301      	adds	r3, #1
 8000e7c:	627b      	str	r3, [r7, #36]	; 0x24
 8000e7e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000e80:	2bad      	cmp	r3, #173	; 0xad
 8000e82:	dddb      	ble.n	8000e3c <change_digit_2+0x240>
	if(number==7)
 8000e84:	683b      	ldr	r3, [r7, #0]
 8000e86:	2b07      	cmp	r3, #7
 8000e88:	d126      	bne.n	8000ed8 <change_digit_2+0x2dc>
		for(int i = 0; i <= 173; ++i)
 8000e8a:	2300      	movs	r3, #0
 8000e8c:	61fb      	str	r3, [r7, #28]
 8000e8e:	e020      	b.n	8000ed2 <change_digit_2+0x2d6>
			for(int j = 0; j <= 98; ++j)
 8000e90:	2300      	movs	r3, #0
 8000e92:	61bb      	str	r3, [r7, #24]
 8000e94:	e017      	b.n	8000ec6 <change_digit_2+0x2ca>
				screen[x+42253+i*480+j] = seven_picture_2[k++];
 8000e96:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8000e98:	1c4b      	adds	r3, r1, #1
 8000e9a:	65bb      	str	r3, [r7, #88]	; 0x58
 8000e9c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000e9e:	f24a 520d 	movw	r2, #42253	; 0xa50d
 8000ea2:	441a      	add	r2, r3
 8000ea4:	69f8      	ldr	r0, [r7, #28]
 8000ea6:	4603      	mov	r3, r0
 8000ea8:	011b      	lsls	r3, r3, #4
 8000eaa:	1a1b      	subs	r3, r3, r0
 8000eac:	015b      	lsls	r3, r3, #5
 8000eae:	441a      	add	r2, r3
 8000eb0:	69bb      	ldr	r3, [r7, #24]
 8000eb2:	4413      	add	r3, r2
 8000eb4:	4a15      	ldr	r2, [pc, #84]	; (8000f0c <change_digit_2+0x310>)
 8000eb6:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8000eba:	4a0d      	ldr	r2, [pc, #52]	; (8000ef0 <change_digit_2+0x2f4>)
 8000ebc:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int j = 0; j <= 98; ++j)
 8000ec0:	69bb      	ldr	r3, [r7, #24]
 8000ec2:	3301      	adds	r3, #1
 8000ec4:	61bb      	str	r3, [r7, #24]
 8000ec6:	69bb      	ldr	r3, [r7, #24]
 8000ec8:	2b62      	cmp	r3, #98	; 0x62
 8000eca:	dde4      	ble.n	8000e96 <change_digit_2+0x29a>
		for(int i = 0; i <= 173; ++i)
 8000ecc:	69fb      	ldr	r3, [r7, #28]
 8000ece:	3301      	adds	r3, #1
 8000ed0:	61fb      	str	r3, [r7, #28]
 8000ed2:	69fb      	ldr	r3, [r7, #28]
 8000ed4:	2bad      	cmp	r3, #173	; 0xad
 8000ed6:	dddb      	ble.n	8000e90 <change_digit_2+0x294>
	if(number==8)
 8000ed8:	683b      	ldr	r3, [r7, #0]
 8000eda:	2b08      	cmp	r3, #8
 8000edc:	d139      	bne.n	8000f52 <change_digit_2+0x356>
		for(int i = 0; i <= 173; ++i)
 8000ede:	2300      	movs	r3, #0
 8000ee0:	617b      	str	r3, [r7, #20]
 8000ee2:	e033      	b.n	8000f4c <change_digit_2+0x350>
			for(int j = 0; j <= 98; ++j)
 8000ee4:	2300      	movs	r3, #0
 8000ee6:	613b      	str	r3, [r7, #16]
 8000ee8:	e02a      	b.n	8000f40 <change_digit_2+0x344>
 8000eea:	bf00      	nop
 8000eec:	080446a4 	.word	0x080446a4
 8000ef0:	2000001c 	.word	0x2000001c
 8000ef4:	0801a5c0 	.word	0x0801a5c0
 8000ef8:	0803c010 	.word	0x0803c010
 8000efc:	0803397c 	.word	0x0803397c
 8000f00:	08009898 	.word	0x08009898
 8000f04:	08001204 	.word	0x08001204
 8000f08:	0802b2e8 	.word	0x0802b2e8
 8000f0c:	08022c54 	.word	0x08022c54
				screen[x+42253+i*480+j] = eigth_picture_2[k++];
 8000f10:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8000f12:	1c4b      	adds	r3, r1, #1
 8000f14:	65bb      	str	r3, [r7, #88]	; 0x58
 8000f16:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000f18:	f24a 520d 	movw	r2, #42253	; 0xa50d
 8000f1c:	441a      	add	r2, r3
 8000f1e:	6978      	ldr	r0, [r7, #20]
 8000f20:	4603      	mov	r3, r0
 8000f22:	011b      	lsls	r3, r3, #4
 8000f24:	1a1b      	subs	r3, r3, r0
 8000f26:	015b      	lsls	r3, r3, #5
 8000f28:	441a      	add	r2, r3
 8000f2a:	693b      	ldr	r3, [r7, #16]
 8000f2c:	4413      	add	r3, r2
 8000f2e:	4a25      	ldr	r2, [pc, #148]	; (8000fc4 <change_digit_2+0x3c8>)
 8000f30:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8000f34:	4a24      	ldr	r2, [pc, #144]	; (8000fc8 <change_digit_2+0x3cc>)
 8000f36:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int j = 0; j <= 98; ++j)
 8000f3a:	693b      	ldr	r3, [r7, #16]
 8000f3c:	3301      	adds	r3, #1
 8000f3e:	613b      	str	r3, [r7, #16]
 8000f40:	693b      	ldr	r3, [r7, #16]
 8000f42:	2b62      	cmp	r3, #98	; 0x62
 8000f44:	dde4      	ble.n	8000f10 <change_digit_2+0x314>
		for(int i = 0; i <= 173; ++i)
 8000f46:	697b      	ldr	r3, [r7, #20]
 8000f48:	3301      	adds	r3, #1
 8000f4a:	617b      	str	r3, [r7, #20]
 8000f4c:	697b      	ldr	r3, [r7, #20]
 8000f4e:	2bad      	cmp	r3, #173	; 0xad
 8000f50:	ddc8      	ble.n	8000ee4 <change_digit_2+0x2e8>
	if(number==9)
 8000f52:	683b      	ldr	r3, [r7, #0]
 8000f54:	2b09      	cmp	r3, #9
 8000f56:	d126      	bne.n	8000fa6 <change_digit_2+0x3aa>
		for(int i = 0; i <= 173; ++i)
 8000f58:	2300      	movs	r3, #0
 8000f5a:	60fb      	str	r3, [r7, #12]
 8000f5c:	e020      	b.n	8000fa0 <change_digit_2+0x3a4>
			for(int j = 0; j <= 98; ++j)
 8000f5e:	2300      	movs	r3, #0
 8000f60:	60bb      	str	r3, [r7, #8]
 8000f62:	e017      	b.n	8000f94 <change_digit_2+0x398>
				screen[x+42253+i*480+j] = nine_picture_2[k++];
 8000f64:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8000f66:	1c4b      	adds	r3, r1, #1
 8000f68:	65bb      	str	r3, [r7, #88]	; 0x58
 8000f6a:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000f6c:	f24a 520d 	movw	r2, #42253	; 0xa50d
 8000f70:	441a      	add	r2, r3
 8000f72:	68f8      	ldr	r0, [r7, #12]
 8000f74:	4603      	mov	r3, r0
 8000f76:	011b      	lsls	r3, r3, #4
 8000f78:	1a1b      	subs	r3, r3, r0
 8000f7a:	015b      	lsls	r3, r3, #5
 8000f7c:	441a      	add	r2, r3
 8000f7e:	68bb      	ldr	r3, [r7, #8]
 8000f80:	4413      	add	r3, r2
 8000f82:	4a12      	ldr	r2, [pc, #72]	; (8000fcc <change_digit_2+0x3d0>)
 8000f84:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8000f88:	4a0f      	ldr	r2, [pc, #60]	; (8000fc8 <change_digit_2+0x3cc>)
 8000f8a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int j = 0; j <= 98; ++j)
 8000f8e:	68bb      	ldr	r3, [r7, #8]
 8000f90:	3301      	adds	r3, #1
 8000f92:	60bb      	str	r3, [r7, #8]
 8000f94:	68bb      	ldr	r3, [r7, #8]
 8000f96:	2b62      	cmp	r3, #98	; 0x62
 8000f98:	dde4      	ble.n	8000f64 <change_digit_2+0x368>
		for(int i = 0; i <= 173; ++i)
 8000f9a:	68fb      	ldr	r3, [r7, #12]
 8000f9c:	3301      	adds	r3, #1
 8000f9e:	60fb      	str	r3, [r7, #12]
 8000fa0:	68fb      	ldr	r3, [r7, #12]
 8000fa2:	2bad      	cmp	r3, #173	; 0xad
 8000fa4:	dddb      	ble.n	8000f5e <change_digit_2+0x362>
	LTDC_Layer2->CFBAR = (uint32_t)screen;
 8000fa6:	4b0a      	ldr	r3, [pc, #40]	; (8000fd0 <change_digit_2+0x3d4>)
 8000fa8:	4a07      	ldr	r2, [pc, #28]	; (8000fc8 <change_digit_2+0x3cc>)
 8000faa:	629a      	str	r2, [r3, #40]	; 0x28
	LTDC->SRCR |= LTDC_SRCR_VBR;
 8000fac:	4b09      	ldr	r3, [pc, #36]	; (8000fd4 <change_digit_2+0x3d8>)
 8000fae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000fb0:	4a08      	ldr	r2, [pc, #32]	; (8000fd4 <change_digit_2+0x3d8>)
 8000fb2:	f043 0302 	orr.w	r3, r3, #2
 8000fb6:	6253      	str	r3, [r2, #36]	; 0x24
}
 8000fb8:	bf00      	nop
 8000fba:	3764      	adds	r7, #100	; 0x64
 8000fbc:	46bd      	mov	sp, r7
 8000fbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fc2:	4770      	bx	lr
 8000fc4:	0804cd38 	.word	0x0804cd38
 8000fc8:	2000001c 	.word	0x2000001c
 8000fcc:	08011f2c 	.word	0x08011f2c
 8000fd0:	40016904 	.word	0x40016904
 8000fd4:	40016800 	.word	0x40016800

08000fd8 <SysTick_Handler>:

void SysTick_Handler(void)
{
 8000fd8:	b580      	push	{r7, lr}
 8000fda:	af00      	add	r7, sp, #0
	++cnt;
 8000fdc:	4b2f      	ldr	r3, [pc, #188]	; (800109c <SysTick_Handler+0xc4>)
 8000fde:	881b      	ldrh	r3, [r3, #0]
 8000fe0:	3301      	adds	r3, #1
 8000fe2:	b29a      	uxth	r2, r3
 8000fe4:	4b2d      	ldr	r3, [pc, #180]	; (800109c <SysTick_Handler+0xc4>)
 8000fe6:	801a      	strh	r2, [r3, #0]
	if(cnt == 60000)
 8000fe8:	4b2c      	ldr	r3, [pc, #176]	; (800109c <SysTick_Handler+0xc4>)
 8000fea:	881b      	ldrh	r3, [r3, #0]
 8000fec:	f64e 2260 	movw	r2, #60000	; 0xea60
 8000ff0:	4293      	cmp	r3, r2
 8000ff2:	d150      	bne.n	8001096 <SysTick_Handler+0xbe>
	{
		++minute;
 8000ff4:	4b2a      	ldr	r3, [pc, #168]	; (80010a0 <SysTick_Handler+0xc8>)
 8000ff6:	781b      	ldrb	r3, [r3, #0]
 8000ff8:	3301      	adds	r3, #1
 8000ffa:	b2da      	uxtb	r2, r3
 8000ffc:	4b28      	ldr	r3, [pc, #160]	; (80010a0 <SysTick_Handler+0xc8>)
 8000ffe:	701a      	strb	r2, [r3, #0]
		if(minute == 10)
 8001000:	4b27      	ldr	r3, [pc, #156]	; (80010a0 <SysTick_Handler+0xc8>)
 8001002:	781b      	ldrb	r3, [r3, #0]
 8001004:	2b0a      	cmp	r3, #10
 8001006:	d140      	bne.n	800108a <SysTick_Handler+0xb2>
		{
			minute = 0;
 8001008:	4b25      	ldr	r3, [pc, #148]	; (80010a0 <SysTick_Handler+0xc8>)
 800100a:	2200      	movs	r2, #0
 800100c:	701a      	strb	r2, [r3, #0]
			++minute_2;
 800100e:	4b25      	ldr	r3, [pc, #148]	; (80010a4 <SysTick_Handler+0xcc>)
 8001010:	781b      	ldrb	r3, [r3, #0]
 8001012:	3301      	adds	r3, #1
 8001014:	b2da      	uxtb	r2, r3
 8001016:	4b23      	ldr	r3, [pc, #140]	; (80010a4 <SysTick_Handler+0xcc>)
 8001018:	701a      	strb	r2, [r3, #0]
			change_digit_2(3,minute_2);
 800101a:	4b22      	ldr	r3, [pc, #136]	; (80010a4 <SysTick_Handler+0xcc>)
 800101c:	781b      	ldrb	r3, [r3, #0]
 800101e:	4619      	mov	r1, r3
 8001020:	2003      	movs	r0, #3
 8001022:	f7ff fdeb 	bl	8000bfc <change_digit_2>
			if(minute_2 == 6)
 8001026:	4b1f      	ldr	r3, [pc, #124]	; (80010a4 <SysTick_Handler+0xcc>)
 8001028:	781b      	ldrb	r3, [r3, #0]
 800102a:	2b06      	cmp	r3, #6
 800102c:	d129      	bne.n	8001082 <SysTick_Handler+0xaa>
			{
				minute_2 = 0;
 800102e:	4b1d      	ldr	r3, [pc, #116]	; (80010a4 <SysTick_Handler+0xcc>)
 8001030:	2200      	movs	r2, #0
 8001032:	701a      	strb	r2, [r3, #0]
				++hour;
 8001034:	4b1c      	ldr	r3, [pc, #112]	; (80010a8 <SysTick_Handler+0xd0>)
 8001036:	781b      	ldrb	r3, [r3, #0]
 8001038:	3301      	adds	r3, #1
 800103a:	b2da      	uxtb	r2, r3
 800103c:	4b1a      	ldr	r3, [pc, #104]	; (80010a8 <SysTick_Handler+0xd0>)
 800103e:	701a      	strb	r2, [r3, #0]
				change_digit_2(2,hour);
 8001040:	4b19      	ldr	r3, [pc, #100]	; (80010a8 <SysTick_Handler+0xd0>)
 8001042:	781b      	ldrb	r3, [r3, #0]
 8001044:	4619      	mov	r1, r3
 8001046:	2002      	movs	r0, #2
 8001048:	f7ff fdd8 	bl	8000bfc <change_digit_2>
				if(hour == 10)
 800104c:	4b16      	ldr	r3, [pc, #88]	; (80010a8 <SysTick_Handler+0xd0>)
 800104e:	781b      	ldrb	r3, [r3, #0]
 8001050:	2b0a      	cmp	r3, #10
 8001052:	d112      	bne.n	800107a <SysTick_Handler+0xa2>
				{
					hour = 0;
 8001054:	4b14      	ldr	r3, [pc, #80]	; (80010a8 <SysTick_Handler+0xd0>)
 8001056:	2200      	movs	r2, #0
 8001058:	701a      	strb	r2, [r3, #0]
					++hour_2;
 800105a:	4b14      	ldr	r3, [pc, #80]	; (80010ac <SysTick_Handler+0xd4>)
 800105c:	781b      	ldrb	r3, [r3, #0]
 800105e:	3301      	adds	r3, #1
 8001060:	b2da      	uxtb	r2, r3
 8001062:	4b12      	ldr	r3, [pc, #72]	; (80010ac <SysTick_Handler+0xd4>)
 8001064:	701a      	strb	r2, [r3, #0]
					change_digit_2(2,hour_2);
 8001066:	4b11      	ldr	r3, [pc, #68]	; (80010ac <SysTick_Handler+0xd4>)
 8001068:	781b      	ldrb	r3, [r3, #0]
 800106a:	4619      	mov	r1, r3
 800106c:	2002      	movs	r0, #2
 800106e:	f7ff fdc5 	bl	8000bfc <change_digit_2>
					change_digit_2(2,0);
 8001072:	2100      	movs	r1, #0
 8001074:	2002      	movs	r0, #2
 8001076:	f7ff fdc1 	bl	8000bfc <change_digit_2>
				}
				change_digit_2(3,0);
 800107a:	2100      	movs	r1, #0
 800107c:	2003      	movs	r0, #3
 800107e:	f7ff fdbd 	bl	8000bfc <change_digit_2>
			}
			change_digit_2(4,0);
 8001082:	2100      	movs	r1, #0
 8001084:	2004      	movs	r0, #4
 8001086:	f7ff fdb9 	bl	8000bfc <change_digit_2>
		}
		change_digit_2(4,minute);
 800108a:	4b05      	ldr	r3, [pc, #20]	; (80010a0 <SysTick_Handler+0xc8>)
 800108c:	781b      	ldrb	r3, [r3, #0]
 800108e:	4619      	mov	r1, r3
 8001090:	2004      	movs	r0, #4
 8001092:	f7ff fdb3 	bl	8000bfc <change_digit_2>
	}
}
 8001096:	bf00      	nop
 8001098:	bd80      	pop	{r7, pc}
 800109a:	bf00      	nop
 800109c:	2003fc1c 	.word	0x2003fc1c
 80010a0:	2003fc1e 	.word	0x2003fc1e
 80010a4:	2003fc1f 	.word	0x2003fc1f
 80010a8:	2003fc20 	.word	0x2003fc20
 80010ac:	2003fc21 	.word	0x2003fc21

080010b0 <main>:

int main(void)
{
 80010b0:	b580      	push	{r7, lr}
 80010b2:	b082      	sub	sp, #8
 80010b4:	af00      	add	r7, sp, #0
	initialization();
 80010b6:	f7ff f8f3 	bl	80002a0 <initialization>

	for(int i = 0; i <= 130559; ++i)
 80010ba:	2300      	movs	r3, #0
 80010bc:	607b      	str	r3, [r7, #4]
 80010be:	e00a      	b.n	80010d6 <main+0x26>
		screen[i] = main_picture[i];
 80010c0:	4a1c      	ldr	r2, [pc, #112]	; (8001134 <main+0x84>)
 80010c2:	687b      	ldr	r3, [r7, #4]
 80010c4:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
 80010c8:	4a1b      	ldr	r2, [pc, #108]	; (8001138 <main+0x88>)
 80010ca:	687b      	ldr	r3, [r7, #4]
 80010cc:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int i = 0; i <= 130559; ++i)
 80010d0:	687b      	ldr	r3, [r7, #4]
 80010d2:	3301      	adds	r3, #1
 80010d4:	607b      	str	r3, [r7, #4]
 80010d6:	687b      	ldr	r3, [r7, #4]
 80010d8:	f5b3 3fff 	cmp.w	r3, #130560	; 0x1fe00
 80010dc:	dbf0      	blt.n	80010c0 <main+0x10>
	GPIOK->BSRR |= GPIO_BSRR_BS_3; // LED
 80010de:	4b17      	ldr	r3, [pc, #92]	; (800113c <main+0x8c>)
 80010e0:	699b      	ldr	r3, [r3, #24]
 80010e2:	4a16      	ldr	r2, [pc, #88]	; (800113c <main+0x8c>)
 80010e4:	f043 0308 	orr.w	r3, r3, #8
 80010e8:	6193      	str	r3, [r2, #24]

	// Initialization picture
	LTDC_Layer2->CFBAR = (uint32_t)init_picture;
 80010ea:	4b15      	ldr	r3, [pc, #84]	; (8001140 <main+0x90>)
 80010ec:	4a15      	ldr	r2, [pc, #84]	; (8001144 <main+0x94>)
 80010ee:	629a      	str	r2, [r3, #40]	; 0x28
	LTDC->SRCR |= LTDC_SRCR_VBR;
 80010f0:	4b15      	ldr	r3, [pc, #84]	; (8001148 <main+0x98>)
 80010f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80010f4:	4a14      	ldr	r2, [pc, #80]	; (8001148 <main+0x98>)
 80010f6:	f043 0302 	orr.w	r3, r3, #2
 80010fa:	6253      	str	r3, [r2, #36]	; 0x24
	for(int i = 0; i <= 5000000; ++i);
 80010fc:	2300      	movs	r3, #0
 80010fe:	603b      	str	r3, [r7, #0]
 8001100:	e002      	b.n	8001108 <main+0x58>
 8001102:	683b      	ldr	r3, [r7, #0]
 8001104:	3301      	adds	r3, #1
 8001106:	603b      	str	r3, [r7, #0]
 8001108:	683b      	ldr	r3, [r7, #0]
 800110a:	4a10      	ldr	r2, [pc, #64]	; (800114c <main+0x9c>)
 800110c:	4293      	cmp	r3, r2
 800110e:	ddf8      	ble.n	8001102 <main+0x52>

	// Main picture
	LTDC_Layer2->CFBAR = (uint32_t)main_picture;
 8001110:	4b0b      	ldr	r3, [pc, #44]	; (8001140 <main+0x90>)
 8001112:	4a08      	ldr	r2, [pc, #32]	; (8001134 <main+0x84>)
 8001114:	629a      	str	r2, [r3, #40]	; 0x28
	LTDC->SRCR |= LTDC_SRCR_VBR;
 8001116:	4b0c      	ldr	r3, [pc, #48]	; (8001148 <main+0x98>)
 8001118:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800111a:	4a0b      	ldr	r2, [pc, #44]	; (8001148 <main+0x98>)
 800111c:	f043 0302 	orr.w	r3, r3, #2
 8001120:	6253      	str	r3, [r2, #36]	; 0x24

	SysTick_Config((108000-1) / 60);
 8001122:	f240 7007 	movw	r0, #1799	; 0x707
 8001126:	f7ff f899 	bl	800025c <SysTick_Config>
 800112a:	2300      	movs	r3, #0
}
 800112c:	4618      	mov	r0, r3
 800112e:	3708      	adds	r7, #8
 8001130:	46bd      	mov	sp, r7
 8001132:	bd80      	pop	{r7, pc}
 8001134:	08094fcc 	.word	0x08094fcc
 8001138:	2000001c 	.word	0x2000001c
 800113c:	40022800 	.word	0x40022800
 8001140:	40016904 	.word	0x40016904
 8001144:	080553cc 	.word	0x080553cc
 8001148:	40016800 	.word	0x40016800
 800114c:	004c4b40 	.word	0x004c4b40

08001150 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001150:	480d      	ldr	r0, [pc, #52]	; (8001188 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001152:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8001154:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001158:	480c      	ldr	r0, [pc, #48]	; (800118c <LoopForever+0x6>)
  ldr r1, =_edata
 800115a:	490d      	ldr	r1, [pc, #52]	; (8001190 <LoopForever+0xa>)
  ldr r2, =_sidata
 800115c:	4a0d      	ldr	r2, [pc, #52]	; (8001194 <LoopForever+0xe>)
  movs r3, #0
 800115e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001160:	e002      	b.n	8001168 <LoopCopyDataInit>

08001162 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001162:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001164:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001166:	3304      	adds	r3, #4

08001168 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001168:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800116a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800116c:	d3f9      	bcc.n	8001162 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800116e:	4a0a      	ldr	r2, [pc, #40]	; (8001198 <LoopForever+0x12>)
  ldr r4, =_ebss
 8001170:	4c0a      	ldr	r4, [pc, #40]	; (800119c <LoopForever+0x16>)
  movs r3, #0
 8001172:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001174:	e001      	b.n	800117a <LoopFillZerobss>

08001176 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001176:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001178:	3204      	adds	r2, #4

0800117a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800117a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800117c:	d3fb      	bcc.n	8001176 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800117e:	f000 f811 	bl	80011a4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001182:	f7ff ff95 	bl	80010b0 <main>

08001186 <LoopForever>:

LoopForever:
    b LoopForever
 8001186:	e7fe      	b.n	8001186 <LoopForever>
  ldr   r0, =_estack
 8001188:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 800118c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001190:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8001194:	080d4bd4 	.word	0x080d4bd4
  ldr r2, =_sbss
 8001198:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800119c:	2003fc24 	.word	0x2003fc24

080011a0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80011a0:	e7fe      	b.n	80011a0 <ADC_IRQHandler>
	...

080011a4 <__libc_init_array>:
 80011a4:	b570      	push	{r4, r5, r6, lr}
 80011a6:	4d0d      	ldr	r5, [pc, #52]	; (80011dc <__libc_init_array+0x38>)
 80011a8:	4c0d      	ldr	r4, [pc, #52]	; (80011e0 <__libc_init_array+0x3c>)
 80011aa:	1b64      	subs	r4, r4, r5
 80011ac:	10a4      	asrs	r4, r4, #2
 80011ae:	2600      	movs	r6, #0
 80011b0:	42a6      	cmp	r6, r4
 80011b2:	d109      	bne.n	80011c8 <__libc_init_array+0x24>
 80011b4:	4d0b      	ldr	r5, [pc, #44]	; (80011e4 <__libc_init_array+0x40>)
 80011b6:	4c0c      	ldr	r4, [pc, #48]	; (80011e8 <__libc_init_array+0x44>)
 80011b8:	f000 f818 	bl	80011ec <_init>
 80011bc:	1b64      	subs	r4, r4, r5
 80011be:	10a4      	asrs	r4, r4, #2
 80011c0:	2600      	movs	r6, #0
 80011c2:	42a6      	cmp	r6, r4
 80011c4:	d105      	bne.n	80011d2 <__libc_init_array+0x2e>
 80011c6:	bd70      	pop	{r4, r5, r6, pc}
 80011c8:	f855 3b04 	ldr.w	r3, [r5], #4
 80011cc:	4798      	blx	r3
 80011ce:	3601      	adds	r6, #1
 80011d0:	e7ee      	b.n	80011b0 <__libc_init_array+0xc>
 80011d2:	f855 3b04 	ldr.w	r3, [r5], #4
 80011d6:	4798      	blx	r3
 80011d8:	3601      	adds	r6, #1
 80011da:	e7f2      	b.n	80011c2 <__libc_init_array+0x1e>
 80011dc:	080d4bcc 	.word	0x080d4bcc
 80011e0:	080d4bcc 	.word	0x080d4bcc
 80011e4:	080d4bcc 	.word	0x080d4bcc
 80011e8:	080d4bd0 	.word	0x080d4bd0

080011ec <_init>:
 80011ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80011ee:	bf00      	nop
 80011f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80011f2:	bc08      	pop	{r3}
 80011f4:	469e      	mov	lr, r3
 80011f6:	4770      	bx	lr

080011f8 <_fini>:
 80011f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80011fa:	bf00      	nop
 80011fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80011fe:	bc08      	pop	{r3}
 8001200:	469e      	mov	lr, r3
 8001202:	4770      	bx	lr
