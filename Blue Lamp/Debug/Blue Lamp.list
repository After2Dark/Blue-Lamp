
Blue Lamp.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000010a8  080001c8  080001c8  000101c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000d39c8  08001270  08001270  00011270  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080d4c38  080d4c38  000e4c40  2**0
                  CONTENTS
  4 .ARM          00000000  080d4c38  080d4c38  000e4c40  2**0
                  CONTENTS
  5 .preinit_array 00000000  080d4c38  080d4c40  000e4c40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080d4c38  080d4c38  000e4c38  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080d4c3c  080d4c3c  000e4c3c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000e4c40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0003fc24  20000000  080d4c40  000f0000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2003fc24  080d4c40  000efc24  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000e4c40  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000b04  00000000  00000000  000e4c70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000001d0  00000000  00000000  000e5774  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000060  00000000  00000000  000e5948  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000048  00000000  00000000  000e59a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001b752  00000000  00000000  000e59f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000c7f  00000000  00000000  00101142  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0009abed  00000000  00000000  00101dc1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0019c9ae  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000c4  00000000  00000000  0019ca04  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c8 <__do_global_dtors_aux>:
 80001c8:	b510      	push	{r4, lr}
 80001ca:	4c05      	ldr	r4, [pc, #20]	; (80001e0 <__do_global_dtors_aux+0x18>)
 80001cc:	7823      	ldrb	r3, [r4, #0]
 80001ce:	b933      	cbnz	r3, 80001de <__do_global_dtors_aux+0x16>
 80001d0:	4b04      	ldr	r3, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x1c>)
 80001d2:	b113      	cbz	r3, 80001da <__do_global_dtors_aux+0x12>
 80001d4:	4804      	ldr	r0, [pc, #16]	; (80001e8 <__do_global_dtors_aux+0x20>)
 80001d6:	f3af 8000 	nop.w
 80001da:	2301      	movs	r3, #1
 80001dc:	7023      	strb	r3, [r4, #0]
 80001de:	bd10      	pop	{r4, pc}
 80001e0:	20000000 	.word	0x20000000
 80001e4:	00000000 	.word	0x00000000
 80001e8:	08001258 	.word	0x08001258

080001ec <frame_dummy>:
 80001ec:	b508      	push	{r3, lr}
 80001ee:	4b03      	ldr	r3, [pc, #12]	; (80001fc <frame_dummy+0x10>)
 80001f0:	b11b      	cbz	r3, 80001fa <frame_dummy+0xe>
 80001f2:	4903      	ldr	r1, [pc, #12]	; (8000200 <frame_dummy+0x14>)
 80001f4:	4803      	ldr	r0, [pc, #12]	; (8000204 <frame_dummy+0x18>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	bd08      	pop	{r3, pc}
 80001fc:	00000000 	.word	0x00000000
 8000200:	20000004 	.word	0x20000004
 8000204:	08001258 	.word	0x08001258

08000208 <initialization>:
uint8_t minute_2 = 0;
uint8_t hour = 0;
uint8_t hour_2 = 0;

void initialization()
{
 8000208:	b480      	push	{r7}
 800020a:	af00      	add	r7, sp, #0
	RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 800020c:	4b9e      	ldr	r3, [pc, #632]	; (8000488 <initialization+0x280>)
 800020e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000210:	4a9d      	ldr	r2, [pc, #628]	; (8000488 <initialization+0x280>)
 8000212:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000216:	6453      	str	r3, [r2, #68]	; 0x44
	RCC->APB2ENR |= RCC_APB2ENR_LTDCEN;
 8000218:	4b9b      	ldr	r3, [pc, #620]	; (8000488 <initialization+0x280>)
 800021a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800021c:	4a9a      	ldr	r2, [pc, #616]	; (8000488 <initialization+0x280>)
 800021e:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8000222:	6453      	str	r3, [r2, #68]	; 0x44
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOCEN;
 8000224:	4b98      	ldr	r3, [pc, #608]	; (8000488 <initialization+0x280>)
 8000226:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000228:	4a97      	ldr	r2, [pc, #604]	; (8000488 <initialization+0x280>)
 800022a:	f043 0304 	orr.w	r3, r3, #4
 800022e:	6313      	str	r3, [r2, #48]	; 0x30
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOEEN;
 8000230:	4b95      	ldr	r3, [pc, #596]	; (8000488 <initialization+0x280>)
 8000232:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000234:	4a94      	ldr	r2, [pc, #592]	; (8000488 <initialization+0x280>)
 8000236:	f043 0310 	orr.w	r3, r3, #16
 800023a:	6313      	str	r3, [r2, #48]	; 0x30
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOJEN;
 800023c:	4b92      	ldr	r3, [pc, #584]	; (8000488 <initialization+0x280>)
 800023e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000240:	4a91      	ldr	r2, [pc, #580]	; (8000488 <initialization+0x280>)
 8000242:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000246:	6313      	str	r3, [r2, #48]	; 0x30
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOKEN;
 8000248:	4b8f      	ldr	r3, [pc, #572]	; (8000488 <initialization+0x280>)
 800024a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800024c:	4a8e      	ldr	r2, [pc, #568]	; (8000488 <initialization+0x280>)
 800024e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000252:	6313      	str	r3, [r2, #48]	; 0x30
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOIEN;
 8000254:	4b8c      	ldr	r3, [pc, #560]	; (8000488 <initialization+0x280>)
 8000256:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000258:	4a8b      	ldr	r2, [pc, #556]	; (8000488 <initialization+0x280>)
 800025a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800025e:	6313      	str	r3, [r2, #48]	; 0x30

	RCC->CR |= RCC_CR_HSEON;
 8000260:	4b89      	ldr	r3, [pc, #548]	; (8000488 <initialization+0x280>)
 8000262:	681b      	ldr	r3, [r3, #0]
 8000264:	4a88      	ldr	r2, [pc, #544]	; (8000488 <initialization+0x280>)
 8000266:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800026a:	6013      	str	r3, [r2, #0]
	while (!(RCC->CR & RCC_CR_HSERDY));
 800026c:	bf00      	nop
 800026e:	4b86      	ldr	r3, [pc, #536]	; (8000488 <initialization+0x280>)
 8000270:	681b      	ldr	r3, [r3, #0]
 8000272:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000276:	2b00      	cmp	r3, #0
 8000278:	d0f9      	beq.n	800026e <initialization+0x66>
	FLASH->ACR |= FLASH_ACR_LATENCY_5WS;
 800027a:	4b84      	ldr	r3, [pc, #528]	; (800048c <initialization+0x284>)
 800027c:	681b      	ldr	r3, [r3, #0]
 800027e:	4a83      	ldr	r2, [pc, #524]	; (800048c <initialization+0x284>)
 8000280:	f043 0305 	orr.w	r3, r3, #5
 8000284:	6013      	str	r3, [r2, #0]
	RCC->PLLCFGR |= RCC_PLLCFGR_PLLM_0 | RCC_PLLCFGR_PLLM_3 | RCC_PLLCFGR_PLLM_4;
 8000286:	4b80      	ldr	r3, [pc, #512]	; (8000488 <initialization+0x280>)
 8000288:	685b      	ldr	r3, [r3, #4]
 800028a:	4a7f      	ldr	r2, [pc, #508]	; (8000488 <initialization+0x280>)
 800028c:	f043 0319 	orr.w	r3, r3, #25
 8000290:	6053      	str	r3, [r2, #4]
	RCC->PLLCFGR |= RCC_PLLCFGR_PLLN_4 | RCC_PLLCFGR_PLLN_5 | RCC_PLLCFGR_PLLN_7 | RCC_PLLCFGR_PLLN_8;
 8000292:	4b7d      	ldr	r3, [pc, #500]	; (8000488 <initialization+0x280>)
 8000294:	685b      	ldr	r3, [r3, #4]
 8000296:	4a7c      	ldr	r2, [pc, #496]	; (8000488 <initialization+0x280>)
 8000298:	f443 43d8 	orr.w	r3, r3, #27648	; 0x6c00
 800029c:	6053      	str	r3, [r2, #4]
	RCC->PLLCFGR &= ~RCC_PLLCFGR_PLLN_6;
 800029e:	4b7a      	ldr	r3, [pc, #488]	; (8000488 <initialization+0x280>)
 80002a0:	685b      	ldr	r3, [r3, #4]
 80002a2:	4a79      	ldr	r2, [pc, #484]	; (8000488 <initialization+0x280>)
 80002a4:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80002a8:	6053      	str	r3, [r2, #4]
	RCC->PLLCFGR |= RCC_PLLCFGR_PLLP_0;
 80002aa:	4b77      	ldr	r3, [pc, #476]	; (8000488 <initialization+0x280>)
 80002ac:	685b      	ldr	r3, [r3, #4]
 80002ae:	4a76      	ldr	r2, [pc, #472]	; (8000488 <initialization+0x280>)
 80002b0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80002b4:	6053      	str	r3, [r2, #4]
	RCC->CFGR |= RCC_CFGR_PPRE1_2 | RCC_CFGR_PPRE2_2;
 80002b6:	4b74      	ldr	r3, [pc, #464]	; (8000488 <initialization+0x280>)
 80002b8:	689b      	ldr	r3, [r3, #8]
 80002ba:	4a73      	ldr	r2, [pc, #460]	; (8000488 <initialization+0x280>)
 80002bc:	f443 4310 	orr.w	r3, r3, #36864	; 0x9000
 80002c0:	6093      	str	r3, [r2, #8]
	RCC->PLLCFGR |= RCC_PLLCFGR_PLLSRC;
 80002c2:	4b71      	ldr	r3, [pc, #452]	; (8000488 <initialization+0x280>)
 80002c4:	685b      	ldr	r3, [r3, #4]
 80002c6:	4a70      	ldr	r2, [pc, #448]	; (8000488 <initialization+0x280>)
 80002c8:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80002cc:	6053      	str	r3, [r2, #4]
	RCC->CR |= RCC_CR_PLLON;
 80002ce:	4b6e      	ldr	r3, [pc, #440]	; (8000488 <initialization+0x280>)
 80002d0:	681b      	ldr	r3, [r3, #0]
 80002d2:	4a6d      	ldr	r2, [pc, #436]	; (8000488 <initialization+0x280>)
 80002d4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80002d8:	6013      	str	r3, [r2, #0]
	while((RCC->CR & RCC_CR_PLLRDY) == 0);
 80002da:	bf00      	nop
 80002dc:	4b6a      	ldr	r3, [pc, #424]	; (8000488 <initialization+0x280>)
 80002de:	681b      	ldr	r3, [r3, #0]
 80002e0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80002e4:	2b00      	cmp	r3, #0
 80002e6:	d0f9      	beq.n	80002dc <initialization+0xd4>
	RCC->CFGR |= RCC_CFGR_SW_PLL;
 80002e8:	4b67      	ldr	r3, [pc, #412]	; (8000488 <initialization+0x280>)
 80002ea:	689b      	ldr	r3, [r3, #8]
 80002ec:	4a66      	ldr	r2, [pc, #408]	; (8000488 <initialization+0x280>)
 80002ee:	f043 0302 	orr.w	r3, r3, #2
 80002f2:	6093      	str	r3, [r2, #8]
	while((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_1);
 80002f4:	bf00      	nop
 80002f6:	4b64      	ldr	r3, [pc, #400]	; (8000488 <initialization+0x280>)
 80002f8:	689b      	ldr	r3, [r3, #8]
 80002fa:	f003 030c 	and.w	r3, r3, #12
 80002fe:	2b08      	cmp	r3, #8
 8000300:	d1f9      	bne.n	80002f6 <initialization+0xee>
	RCC->PLLSAICFGR |= RCC_PLLSAICFGR_PLLSAIN_6 | RCC_PLLSAICFGR_PLLSAIN_7;
 8000302:	4b61      	ldr	r3, [pc, #388]	; (8000488 <initialization+0x280>)
 8000304:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000308:	4a5f      	ldr	r2, [pc, #380]	; (8000488 <initialization+0x280>)
 800030a:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 800030e:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
	RCC->PLLSAICFGR |= RCC_PLLSAICFGR_PLLSAIR_0 | RCC_PLLSAICFGR_PLLSAIR_2;
 8000312:	4b5d      	ldr	r3, [pc, #372]	; (8000488 <initialization+0x280>)
 8000314:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000318:	4a5b      	ldr	r2, [pc, #364]	; (8000488 <initialization+0x280>)
 800031a:	f043 43a0 	orr.w	r3, r3, #1342177280	; 0x50000000
 800031e:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
	RCC->DCKCFGR1 	|= RCC_DCKCFGR1_PLLSAIDIVR_0;
 8000322:	4b59      	ldr	r3, [pc, #356]	; (8000488 <initialization+0x280>)
 8000324:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000328:	4a57      	ldr	r2, [pc, #348]	; (8000488 <initialization+0x280>)
 800032a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800032e:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
	RCC->DCKCFGR1 	&= ~RCC_DCKCFGR1_PLLSAIDIVR_1;
 8000332:	4b55      	ldr	r3, [pc, #340]	; (8000488 <initialization+0x280>)
 8000334:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000338:	4a53      	ldr	r2, [pc, #332]	; (8000488 <initialization+0x280>)
 800033a:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800033e:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
	RCC->CR |= RCC_CR_PLLSAION;
 8000342:	4b51      	ldr	r3, [pc, #324]	; (8000488 <initialization+0x280>)
 8000344:	681b      	ldr	r3, [r3, #0]
 8000346:	4a50      	ldr	r2, [pc, #320]	; (8000488 <initialization+0x280>)
 8000348:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800034c:	6013      	str	r3, [r2, #0]
	while ((RCC->CR & RCC_CR_PLLSAIRDY) == 0);
 800034e:	bf00      	nop
 8000350:	4b4d      	ldr	r3, [pc, #308]	; (8000488 <initialization+0x280>)
 8000352:	681b      	ldr	r3, [r3, #0]
 8000354:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8000358:	2b00      	cmp	r3, #0
 800035a:	d0f9      	beq.n	8000350 <initialization+0x148>

	//B0 PE4
	GPIOE->MODER   &= ~GPIO_MODER_MODER4;
 800035c:	4b4c      	ldr	r3, [pc, #304]	; (8000490 <initialization+0x288>)
 800035e:	681b      	ldr	r3, [r3, #0]
 8000360:	4a4b      	ldr	r2, [pc, #300]	; (8000490 <initialization+0x288>)
 8000362:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8000366:	6013      	str	r3, [r2, #0]
	GPIOE->MODER   |= GPIO_MODER_MODER4_1;
 8000368:	4b49      	ldr	r3, [pc, #292]	; (8000490 <initialization+0x288>)
 800036a:	681b      	ldr	r3, [r3, #0]
 800036c:	4a48      	ldr	r2, [pc, #288]	; (8000490 <initialization+0x288>)
 800036e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000372:	6013      	str	r3, [r2, #0]
	GPIOE->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR4_1;
 8000374:	4b46      	ldr	r3, [pc, #280]	; (8000490 <initialization+0x288>)
 8000376:	689b      	ldr	r3, [r3, #8]
 8000378:	4a45      	ldr	r2, [pc, #276]	; (8000490 <initialization+0x288>)
 800037a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800037e:	6093      	str	r3, [r2, #8]
	GPIOE->AFR[0] &= ~GPIO_AFRL_AFRL4_0;
 8000380:	4b43      	ldr	r3, [pc, #268]	; (8000490 <initialization+0x288>)
 8000382:	6a1b      	ldr	r3, [r3, #32]
 8000384:	4a42      	ldr	r2, [pc, #264]	; (8000490 <initialization+0x288>)
 8000386:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800038a:	6213      	str	r3, [r2, #32]
	GPIOE->AFR[0] |= GPIO_AFRL_AFRL4_1 | GPIO_AFRL_AFRL4_2 | GPIO_AFRL_AFRL4_3;
 800038c:	4b40      	ldr	r3, [pc, #256]	; (8000490 <initialization+0x288>)
 800038e:	6a1b      	ldr	r3, [r3, #32]
 8000390:	4a3f      	ldr	r2, [pc, #252]	; (8000490 <initialization+0x288>)
 8000392:	f443 2360 	orr.w	r3, r3, #917504	; 0xe0000
 8000396:	6213      	str	r3, [r2, #32]

	//B1 PJ13
	GPIOJ->MODER   &= ~GPIO_MODER_MODER13;
 8000398:	4b3e      	ldr	r3, [pc, #248]	; (8000494 <initialization+0x28c>)
 800039a:	681b      	ldr	r3, [r3, #0]
 800039c:	4a3d      	ldr	r2, [pc, #244]	; (8000494 <initialization+0x28c>)
 800039e:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 80003a2:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER13_1;
 80003a4:	4b3b      	ldr	r3, [pc, #236]	; (8000494 <initialization+0x28c>)
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	4a3a      	ldr	r2, [pc, #232]	; (8000494 <initialization+0x28c>)
 80003aa:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 80003ae:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR13_1;
 80003b0:	4b38      	ldr	r3, [pc, #224]	; (8000494 <initialization+0x28c>)
 80003b2:	689b      	ldr	r3, [r3, #8]
 80003b4:	4a37      	ldr	r2, [pc, #220]	; (8000494 <initialization+0x28c>)
 80003b6:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 80003ba:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[1] &= ~GPIO_AFRL_AFRL5_0;
 80003bc:	4b35      	ldr	r3, [pc, #212]	; (8000494 <initialization+0x28c>)
 80003be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80003c0:	4a34      	ldr	r2, [pc, #208]	; (8000494 <initialization+0x28c>)
 80003c2:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80003c6:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOJ->AFR[1] |= GPIO_AFRL_AFRL5_1 | GPIO_AFRL_AFRL5_2 | GPIO_AFRL_AFRL5_3;
 80003c8:	4b32      	ldr	r3, [pc, #200]	; (8000494 <initialization+0x28c>)
 80003ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80003cc:	4a31      	ldr	r2, [pc, #196]	; (8000494 <initialization+0x28c>)
 80003ce:	f443 0360 	orr.w	r3, r3, #14680064	; 0xe00000
 80003d2:	6253      	str	r3, [r2, #36]	; 0x24

	//B2 PJ14
	GPIOJ->MODER   &= ~GPIO_MODER_MODER14;
 80003d4:	4b2f      	ldr	r3, [pc, #188]	; (8000494 <initialization+0x28c>)
 80003d6:	681b      	ldr	r3, [r3, #0]
 80003d8:	4a2e      	ldr	r2, [pc, #184]	; (8000494 <initialization+0x28c>)
 80003da:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 80003de:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER14_1;
 80003e0:	4b2c      	ldr	r3, [pc, #176]	; (8000494 <initialization+0x28c>)
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	4a2b      	ldr	r2, [pc, #172]	; (8000494 <initialization+0x28c>)
 80003e6:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80003ea:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR14_1;
 80003ec:	4b29      	ldr	r3, [pc, #164]	; (8000494 <initialization+0x28c>)
 80003ee:	689b      	ldr	r3, [r3, #8]
 80003f0:	4a28      	ldr	r2, [pc, #160]	; (8000494 <initialization+0x28c>)
 80003f2:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80003f6:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[1] &= ~GPIO_AFRL_AFRL6_0;
 80003f8:	4b26      	ldr	r3, [pc, #152]	; (8000494 <initialization+0x28c>)
 80003fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80003fc:	4a25      	ldr	r2, [pc, #148]	; (8000494 <initialization+0x28c>)
 80003fe:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8000402:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOJ->AFR[1] |= GPIO_AFRL_AFRL6_1 | GPIO_AFRL_AFRL6_2 | GPIO_AFRL_AFRL6_3;
 8000404:	4b23      	ldr	r3, [pc, #140]	; (8000494 <initialization+0x28c>)
 8000406:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000408:	4a22      	ldr	r2, [pc, #136]	; (8000494 <initialization+0x28c>)
 800040a:	f043 6360 	orr.w	r3, r3, #234881024	; 0xe000000
 800040e:	6253      	str	r3, [r2, #36]	; 0x24

	//B3 PJ15
	GPIOJ->MODER   &= ~GPIO_MODER_MODER15;
 8000410:	4b20      	ldr	r3, [pc, #128]	; (8000494 <initialization+0x28c>)
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	4a1f      	ldr	r2, [pc, #124]	; (8000494 <initialization+0x28c>)
 8000416:	f023 4340 	bic.w	r3, r3, #3221225472	; 0xc0000000
 800041a:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER15_1;
 800041c:	4b1d      	ldr	r3, [pc, #116]	; (8000494 <initialization+0x28c>)
 800041e:	681b      	ldr	r3, [r3, #0]
 8000420:	4a1c      	ldr	r2, [pc, #112]	; (8000494 <initialization+0x28c>)
 8000422:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000426:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR15_1;
 8000428:	4b1a      	ldr	r3, [pc, #104]	; (8000494 <initialization+0x28c>)
 800042a:	689b      	ldr	r3, [r3, #8]
 800042c:	4a19      	ldr	r2, [pc, #100]	; (8000494 <initialization+0x28c>)
 800042e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000432:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[1] &= ~GPIO_AFRL_AFRL7_0;
 8000434:	4b17      	ldr	r3, [pc, #92]	; (8000494 <initialization+0x28c>)
 8000436:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000438:	4a16      	ldr	r2, [pc, #88]	; (8000494 <initialization+0x28c>)
 800043a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800043e:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOJ->AFR[1] |= GPIO_AFRL_AFRL7_1 | GPIO_AFRL_AFRL7_2 | GPIO_AFRL_AFRL7_3;
 8000440:	4b14      	ldr	r3, [pc, #80]	; (8000494 <initialization+0x28c>)
 8000442:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000444:	4a13      	ldr	r2, [pc, #76]	; (8000494 <initialization+0x28c>)
 8000446:	f043 4360 	orr.w	r3, r3, #3758096384	; 0xe0000000
 800044a:	6253      	str	r3, [r2, #36]	; 0x24

	//B4 PJ12
	GPIOJ->MODER   &= ~GPIO_MODER_MODER12;
 800044c:	4b11      	ldr	r3, [pc, #68]	; (8000494 <initialization+0x28c>)
 800044e:	681b      	ldr	r3, [r3, #0]
 8000450:	4a10      	ldr	r2, [pc, #64]	; (8000494 <initialization+0x28c>)
 8000452:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 8000456:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER12_1;
 8000458:	4b0e      	ldr	r3, [pc, #56]	; (8000494 <initialization+0x28c>)
 800045a:	681b      	ldr	r3, [r3, #0]
 800045c:	4a0d      	ldr	r2, [pc, #52]	; (8000494 <initialization+0x28c>)
 800045e:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8000462:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR12_1;
 8000464:	4b0b      	ldr	r3, [pc, #44]	; (8000494 <initialization+0x28c>)
 8000466:	689b      	ldr	r3, [r3, #8]
 8000468:	4a0a      	ldr	r2, [pc, #40]	; (8000494 <initialization+0x28c>)
 800046a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800046e:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[1] &= ~GPIO_AFRL_AFRL4_0;
 8000470:	4b08      	ldr	r3, [pc, #32]	; (8000494 <initialization+0x28c>)
 8000472:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000474:	4a07      	ldr	r2, [pc, #28]	; (8000494 <initialization+0x28c>)
 8000476:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800047a:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOJ->AFR[1] |= GPIO_AFRL_AFRL4_1 | GPIO_AFRL_AFRL4_2 | GPIO_AFRL_AFRL4_3;
 800047c:	4b05      	ldr	r3, [pc, #20]	; (8000494 <initialization+0x28c>)
 800047e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000480:	4a04      	ldr	r2, [pc, #16]	; (8000494 <initialization+0x28c>)
 8000482:	f443 2360 	orr.w	r3, r3, #917504	; 0xe0000
 8000486:	e007      	b.n	8000498 <initialization+0x290>
 8000488:	40023800 	.word	0x40023800
 800048c:	40023c00 	.word	0x40023c00
 8000490:	40021000 	.word	0x40021000
 8000494:	40022400 	.word	0x40022400
 8000498:	6253      	str	r3, [r2, #36]	; 0x24

	//B5 PK4
	GPIOK->MODER   &= ~GPIO_MODER_MODER4;
 800049a:	4b99      	ldr	r3, [pc, #612]	; (8000700 <initialization+0x4f8>)
 800049c:	681b      	ldr	r3, [r3, #0]
 800049e:	4a98      	ldr	r2, [pc, #608]	; (8000700 <initialization+0x4f8>)
 80004a0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80004a4:	6013      	str	r3, [r2, #0]
	GPIOK->MODER   |= GPIO_MODER_MODER4_1;
 80004a6:	4b96      	ldr	r3, [pc, #600]	; (8000700 <initialization+0x4f8>)
 80004a8:	681b      	ldr	r3, [r3, #0]
 80004aa:	4a95      	ldr	r2, [pc, #596]	; (8000700 <initialization+0x4f8>)
 80004ac:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80004b0:	6013      	str	r3, [r2, #0]
	GPIOK->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR4_1;
 80004b2:	4b93      	ldr	r3, [pc, #588]	; (8000700 <initialization+0x4f8>)
 80004b4:	689b      	ldr	r3, [r3, #8]
 80004b6:	4a92      	ldr	r2, [pc, #584]	; (8000700 <initialization+0x4f8>)
 80004b8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80004bc:	6093      	str	r3, [r2, #8]
	GPIOK->AFR[0] &= ~GPIO_AFRL_AFRL4_0;
 80004be:	4b90      	ldr	r3, [pc, #576]	; (8000700 <initialization+0x4f8>)
 80004c0:	6a1b      	ldr	r3, [r3, #32]
 80004c2:	4a8f      	ldr	r2, [pc, #572]	; (8000700 <initialization+0x4f8>)
 80004c4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80004c8:	6213      	str	r3, [r2, #32]
	GPIOK->AFR[0] |= GPIO_AFRL_AFRL4_1 | GPIO_AFRL_AFRL4_2 | GPIO_AFRL_AFRL4_3;
 80004ca:	4b8d      	ldr	r3, [pc, #564]	; (8000700 <initialization+0x4f8>)
 80004cc:	6a1b      	ldr	r3, [r3, #32]
 80004ce:	4a8c      	ldr	r2, [pc, #560]	; (8000700 <initialization+0x4f8>)
 80004d0:	f443 2360 	orr.w	r3, r3, #917504	; 0xe0000
 80004d4:	6213      	str	r3, [r2, #32]

	//B6 PK5
	GPIOK->MODER   &= ~GPIO_MODER_MODER5;
 80004d6:	4b8a      	ldr	r3, [pc, #552]	; (8000700 <initialization+0x4f8>)
 80004d8:	681b      	ldr	r3, [r3, #0]
 80004da:	4a89      	ldr	r2, [pc, #548]	; (8000700 <initialization+0x4f8>)
 80004dc:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 80004e0:	6013      	str	r3, [r2, #0]
	GPIOK->MODER   |= GPIO_MODER_MODER5_1;
 80004e2:	4b87      	ldr	r3, [pc, #540]	; (8000700 <initialization+0x4f8>)
 80004e4:	681b      	ldr	r3, [r3, #0]
 80004e6:	4a86      	ldr	r2, [pc, #536]	; (8000700 <initialization+0x4f8>)
 80004e8:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80004ec:	6013      	str	r3, [r2, #0]
	GPIOK->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR5_1;
 80004ee:	4b84      	ldr	r3, [pc, #528]	; (8000700 <initialization+0x4f8>)
 80004f0:	689b      	ldr	r3, [r3, #8]
 80004f2:	4a83      	ldr	r2, [pc, #524]	; (8000700 <initialization+0x4f8>)
 80004f4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80004f8:	6093      	str	r3, [r2, #8]
	GPIOK->AFR[0] &= ~GPIO_AFRL_AFRL5_0;
 80004fa:	4b81      	ldr	r3, [pc, #516]	; (8000700 <initialization+0x4f8>)
 80004fc:	6a1b      	ldr	r3, [r3, #32]
 80004fe:	4a80      	ldr	r2, [pc, #512]	; (8000700 <initialization+0x4f8>)
 8000500:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8000504:	6213      	str	r3, [r2, #32]
	GPIOK->AFR[0] |= GPIO_AFRL_AFRL5_1 | GPIO_AFRL_AFRL5_2 | GPIO_AFRL_AFRL5_3;
 8000506:	4b7e      	ldr	r3, [pc, #504]	; (8000700 <initialization+0x4f8>)
 8000508:	6a1b      	ldr	r3, [r3, #32]
 800050a:	4a7d      	ldr	r2, [pc, #500]	; (8000700 <initialization+0x4f8>)
 800050c:	f443 0360 	orr.w	r3, r3, #14680064	; 0xe00000
 8000510:	6213      	str	r3, [r2, #32]

	//B7 PK6
	GPIOK->MODER   &= ~GPIO_MODER_MODER6;
 8000512:	4b7b      	ldr	r3, [pc, #492]	; (8000700 <initialization+0x4f8>)
 8000514:	681b      	ldr	r3, [r3, #0]
 8000516:	4a7a      	ldr	r2, [pc, #488]	; (8000700 <initialization+0x4f8>)
 8000518:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800051c:	6013      	str	r3, [r2, #0]
	GPIOK->MODER   |= GPIO_MODER_MODER6_1;
 800051e:	4b78      	ldr	r3, [pc, #480]	; (8000700 <initialization+0x4f8>)
 8000520:	681b      	ldr	r3, [r3, #0]
 8000522:	4a77      	ldr	r2, [pc, #476]	; (8000700 <initialization+0x4f8>)
 8000524:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000528:	6013      	str	r3, [r2, #0]
	GPIOK->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR6_1;
 800052a:	4b75      	ldr	r3, [pc, #468]	; (8000700 <initialization+0x4f8>)
 800052c:	689b      	ldr	r3, [r3, #8]
 800052e:	4a74      	ldr	r2, [pc, #464]	; (8000700 <initialization+0x4f8>)
 8000530:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000534:	6093      	str	r3, [r2, #8]
	GPIOK->AFR[0] &= ~GPIO_AFRL_AFRL6_0;
 8000536:	4b72      	ldr	r3, [pc, #456]	; (8000700 <initialization+0x4f8>)
 8000538:	6a1b      	ldr	r3, [r3, #32]
 800053a:	4a71      	ldr	r2, [pc, #452]	; (8000700 <initialization+0x4f8>)
 800053c:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8000540:	6213      	str	r3, [r2, #32]
	GPIOK->AFR[0] |= GPIO_AFRL_AFRL6_1 | GPIO_AFRL_AFRL6_2 | GPIO_AFRL_AFRL6_3;
 8000542:	4b6f      	ldr	r3, [pc, #444]	; (8000700 <initialization+0x4f8>)
 8000544:	6a1b      	ldr	r3, [r3, #32]
 8000546:	4a6e      	ldr	r2, [pc, #440]	; (8000700 <initialization+0x4f8>)
 8000548:	f043 6360 	orr.w	r3, r3, #234881024	; 0xe000000
 800054c:	6213      	str	r3, [r2, #32]

	//R0 PI 15
	GPIOI->MODER   &= ~GPIO_MODER_MODER15;
 800054e:	4b6d      	ldr	r3, [pc, #436]	; (8000704 <initialization+0x4fc>)
 8000550:	681b      	ldr	r3, [r3, #0]
 8000552:	4a6c      	ldr	r2, [pc, #432]	; (8000704 <initialization+0x4fc>)
 8000554:	f023 4340 	bic.w	r3, r3, #3221225472	; 0xc0000000
 8000558:	6013      	str	r3, [r2, #0]
	GPIOI->MODER   |= GPIO_MODER_MODER15_1;
 800055a:	4b6a      	ldr	r3, [pc, #424]	; (8000704 <initialization+0x4fc>)
 800055c:	681b      	ldr	r3, [r3, #0]
 800055e:	4a69      	ldr	r2, [pc, #420]	; (8000704 <initialization+0x4fc>)
 8000560:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000564:	6013      	str	r3, [r2, #0]
	GPIOI->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR15_1;
 8000566:	4b67      	ldr	r3, [pc, #412]	; (8000704 <initialization+0x4fc>)
 8000568:	689b      	ldr	r3, [r3, #8]
 800056a:	4a66      	ldr	r2, [pc, #408]	; (8000704 <initialization+0x4fc>)
 800056c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000570:	6093      	str	r3, [r2, #8]
	GPIOI->AFR[1] &= ~GPIO_AFRL_AFRL7_0;
 8000572:	4b64      	ldr	r3, [pc, #400]	; (8000704 <initialization+0x4fc>)
 8000574:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000576:	4a63      	ldr	r2, [pc, #396]	; (8000704 <initialization+0x4fc>)
 8000578:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800057c:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOI->AFR[1] |= GPIO_AFRL_AFRL7_1 | GPIO_AFRL_AFRL7_2 | GPIO_AFRL_AFRL7_3;
 800057e:	4b61      	ldr	r3, [pc, #388]	; (8000704 <initialization+0x4fc>)
 8000580:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000582:	4a60      	ldr	r2, [pc, #384]	; (8000704 <initialization+0x4fc>)
 8000584:	f043 4360 	orr.w	r3, r3, #3758096384	; 0xe0000000
 8000588:	6253      	str	r3, [r2, #36]	; 0x24

	//R1 PJ0
	GPIOJ->MODER   &= ~GPIO_MODER_MODER0;
 800058a:	4b5f      	ldr	r3, [pc, #380]	; (8000708 <initialization+0x500>)
 800058c:	681b      	ldr	r3, [r3, #0]
 800058e:	4a5e      	ldr	r2, [pc, #376]	; (8000708 <initialization+0x500>)
 8000590:	f023 0303 	bic.w	r3, r3, #3
 8000594:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER0_1;
 8000596:	4b5c      	ldr	r3, [pc, #368]	; (8000708 <initialization+0x500>)
 8000598:	681b      	ldr	r3, [r3, #0]
 800059a:	4a5b      	ldr	r2, [pc, #364]	; (8000708 <initialization+0x500>)
 800059c:	f043 0302 	orr.w	r3, r3, #2
 80005a0:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR0_1;
 80005a2:	4b59      	ldr	r3, [pc, #356]	; (8000708 <initialization+0x500>)
 80005a4:	689b      	ldr	r3, [r3, #8]
 80005a6:	4a58      	ldr	r2, [pc, #352]	; (8000708 <initialization+0x500>)
 80005a8:	f043 0302 	orr.w	r3, r3, #2
 80005ac:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[0] &= ~GPIO_AFRL_AFRL0_0;
 80005ae:	4b56      	ldr	r3, [pc, #344]	; (8000708 <initialization+0x500>)
 80005b0:	6a1b      	ldr	r3, [r3, #32]
 80005b2:	4a55      	ldr	r2, [pc, #340]	; (8000708 <initialization+0x500>)
 80005b4:	f023 0301 	bic.w	r3, r3, #1
 80005b8:	6213      	str	r3, [r2, #32]
	GPIOJ->AFR[0] |= GPIO_AFRL_AFRL0_1 | GPIO_AFRL_AFRL0_2 | GPIO_AFRL_AFRL0_3;
 80005ba:	4b53      	ldr	r3, [pc, #332]	; (8000708 <initialization+0x500>)
 80005bc:	6a1b      	ldr	r3, [r3, #32]
 80005be:	4a52      	ldr	r2, [pc, #328]	; (8000708 <initialization+0x500>)
 80005c0:	f043 030e 	orr.w	r3, r3, #14
 80005c4:	6213      	str	r3, [r2, #32]

	//R2 PJ1
	GPIOJ->MODER   &= ~GPIO_MODER_MODER1;
 80005c6:	4b50      	ldr	r3, [pc, #320]	; (8000708 <initialization+0x500>)
 80005c8:	681b      	ldr	r3, [r3, #0]
 80005ca:	4a4f      	ldr	r2, [pc, #316]	; (8000708 <initialization+0x500>)
 80005cc:	f023 030c 	bic.w	r3, r3, #12
 80005d0:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER1_1;
 80005d2:	4b4d      	ldr	r3, [pc, #308]	; (8000708 <initialization+0x500>)
 80005d4:	681b      	ldr	r3, [r3, #0]
 80005d6:	4a4c      	ldr	r2, [pc, #304]	; (8000708 <initialization+0x500>)
 80005d8:	f043 0308 	orr.w	r3, r3, #8
 80005dc:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR1_1;
 80005de:	4b4a      	ldr	r3, [pc, #296]	; (8000708 <initialization+0x500>)
 80005e0:	689b      	ldr	r3, [r3, #8]
 80005e2:	4a49      	ldr	r2, [pc, #292]	; (8000708 <initialization+0x500>)
 80005e4:	f043 0308 	orr.w	r3, r3, #8
 80005e8:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[0] &= ~GPIO_AFRL_AFRL1_0;
 80005ea:	4b47      	ldr	r3, [pc, #284]	; (8000708 <initialization+0x500>)
 80005ec:	6a1b      	ldr	r3, [r3, #32]
 80005ee:	4a46      	ldr	r2, [pc, #280]	; (8000708 <initialization+0x500>)
 80005f0:	f023 0310 	bic.w	r3, r3, #16
 80005f4:	6213      	str	r3, [r2, #32]
	GPIOJ->AFR[0] |= GPIO_AFRL_AFRL1_1 | GPIO_AFRL_AFRL1_2 | GPIO_AFRL_AFRL1_3;
 80005f6:	4b44      	ldr	r3, [pc, #272]	; (8000708 <initialization+0x500>)
 80005f8:	6a1b      	ldr	r3, [r3, #32]
 80005fa:	4a43      	ldr	r2, [pc, #268]	; (8000708 <initialization+0x500>)
 80005fc:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 8000600:	6213      	str	r3, [r2, #32]

	//R3 PJ2
	GPIOJ->MODER   &= ~GPIO_MODER_MODER2;
 8000602:	4b41      	ldr	r3, [pc, #260]	; (8000708 <initialization+0x500>)
 8000604:	681b      	ldr	r3, [r3, #0]
 8000606:	4a40      	ldr	r2, [pc, #256]	; (8000708 <initialization+0x500>)
 8000608:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 800060c:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER2_1;
 800060e:	4b3e      	ldr	r3, [pc, #248]	; (8000708 <initialization+0x500>)
 8000610:	681b      	ldr	r3, [r3, #0]
 8000612:	4a3d      	ldr	r2, [pc, #244]	; (8000708 <initialization+0x500>)
 8000614:	f043 0320 	orr.w	r3, r3, #32
 8000618:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR2_1;
 800061a:	4b3b      	ldr	r3, [pc, #236]	; (8000708 <initialization+0x500>)
 800061c:	689b      	ldr	r3, [r3, #8]
 800061e:	4a3a      	ldr	r2, [pc, #232]	; (8000708 <initialization+0x500>)
 8000620:	f043 0320 	orr.w	r3, r3, #32
 8000624:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[0] &= ~GPIO_AFRL_AFRL2_0;
 8000626:	4b38      	ldr	r3, [pc, #224]	; (8000708 <initialization+0x500>)
 8000628:	6a1b      	ldr	r3, [r3, #32]
 800062a:	4a37      	ldr	r2, [pc, #220]	; (8000708 <initialization+0x500>)
 800062c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000630:	6213      	str	r3, [r2, #32]
	GPIOJ->AFR[0] |= GPIO_AFRL_AFRL2_1 | GPIO_AFRL_AFRL2_2 | GPIO_AFRL_AFRL2_3;
 8000632:	4b35      	ldr	r3, [pc, #212]	; (8000708 <initialization+0x500>)
 8000634:	6a1b      	ldr	r3, [r3, #32]
 8000636:	4a34      	ldr	r2, [pc, #208]	; (8000708 <initialization+0x500>)
 8000638:	f443 6360 	orr.w	r3, r3, #3584	; 0xe00
 800063c:	6213      	str	r3, [r2, #32]

	//R4 PJ3

	GPIOJ->MODER   &= ~GPIO_MODER_MODER3;
 800063e:	4b32      	ldr	r3, [pc, #200]	; (8000708 <initialization+0x500>)
 8000640:	681b      	ldr	r3, [r3, #0]
 8000642:	4a31      	ldr	r2, [pc, #196]	; (8000708 <initialization+0x500>)
 8000644:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8000648:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER3_1;
 800064a:	4b2f      	ldr	r3, [pc, #188]	; (8000708 <initialization+0x500>)
 800064c:	681b      	ldr	r3, [r3, #0]
 800064e:	4a2e      	ldr	r2, [pc, #184]	; (8000708 <initialization+0x500>)
 8000650:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000654:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR3_1;
 8000656:	4b2c      	ldr	r3, [pc, #176]	; (8000708 <initialization+0x500>)
 8000658:	689b      	ldr	r3, [r3, #8]
 800065a:	4a2b      	ldr	r2, [pc, #172]	; (8000708 <initialization+0x500>)
 800065c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000660:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[0] &= ~GPIO_AFRL_AFRL3_0;
 8000662:	4b29      	ldr	r3, [pc, #164]	; (8000708 <initialization+0x500>)
 8000664:	6a1b      	ldr	r3, [r3, #32]
 8000666:	4a28      	ldr	r2, [pc, #160]	; (8000708 <initialization+0x500>)
 8000668:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800066c:	6213      	str	r3, [r2, #32]
	GPIOJ->AFR[0] |= GPIO_AFRL_AFRL3_1 | GPIO_AFRL_AFRL3_2 | GPIO_AFRL_AFRL3_3;
 800066e:	4b26      	ldr	r3, [pc, #152]	; (8000708 <initialization+0x500>)
 8000670:	6a1b      	ldr	r3, [r3, #32]
 8000672:	4a25      	ldr	r2, [pc, #148]	; (8000708 <initialization+0x500>)
 8000674:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8000678:	6213      	str	r3, [r2, #32]

	//R5 PJ4
	GPIOJ->MODER   &= ~GPIO_MODER_MODER4;
 800067a:	4b23      	ldr	r3, [pc, #140]	; (8000708 <initialization+0x500>)
 800067c:	681b      	ldr	r3, [r3, #0]
 800067e:	4a22      	ldr	r2, [pc, #136]	; (8000708 <initialization+0x500>)
 8000680:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8000684:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER4_1;
 8000686:	4b20      	ldr	r3, [pc, #128]	; (8000708 <initialization+0x500>)
 8000688:	681b      	ldr	r3, [r3, #0]
 800068a:	4a1f      	ldr	r2, [pc, #124]	; (8000708 <initialization+0x500>)
 800068c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000690:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR4_1;
 8000692:	4b1d      	ldr	r3, [pc, #116]	; (8000708 <initialization+0x500>)
 8000694:	689b      	ldr	r3, [r3, #8]
 8000696:	4a1c      	ldr	r2, [pc, #112]	; (8000708 <initialization+0x500>)
 8000698:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800069c:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[0] &= ~GPIO_AFRL_AFRL4_0;
 800069e:	4b1a      	ldr	r3, [pc, #104]	; (8000708 <initialization+0x500>)
 80006a0:	6a1b      	ldr	r3, [r3, #32]
 80006a2:	4a19      	ldr	r2, [pc, #100]	; (8000708 <initialization+0x500>)
 80006a4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80006a8:	6213      	str	r3, [r2, #32]
	GPIOJ->AFR[0] |= GPIO_AFRL_AFRL4_1 | GPIO_AFRL_AFRL4_2 | GPIO_AFRL_AFRL4_3;
 80006aa:	4b17      	ldr	r3, [pc, #92]	; (8000708 <initialization+0x500>)
 80006ac:	6a1b      	ldr	r3, [r3, #32]
 80006ae:	4a16      	ldr	r2, [pc, #88]	; (8000708 <initialization+0x500>)
 80006b0:	f443 2360 	orr.w	r3, r3, #917504	; 0xe0000
 80006b4:	6213      	str	r3, [r2, #32]

	//R6 PJ5
	GPIOJ->MODER   &= ~GPIO_MODER_MODER5;
 80006b6:	4b14      	ldr	r3, [pc, #80]	; (8000708 <initialization+0x500>)
 80006b8:	681b      	ldr	r3, [r3, #0]
 80006ba:	4a13      	ldr	r2, [pc, #76]	; (8000708 <initialization+0x500>)
 80006bc:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 80006c0:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER5_1;
 80006c2:	4b11      	ldr	r3, [pc, #68]	; (8000708 <initialization+0x500>)
 80006c4:	681b      	ldr	r3, [r3, #0]
 80006c6:	4a10      	ldr	r2, [pc, #64]	; (8000708 <initialization+0x500>)
 80006c8:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80006cc:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR5_1;
 80006ce:	4b0e      	ldr	r3, [pc, #56]	; (8000708 <initialization+0x500>)
 80006d0:	689b      	ldr	r3, [r3, #8]
 80006d2:	4a0d      	ldr	r2, [pc, #52]	; (8000708 <initialization+0x500>)
 80006d4:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80006d8:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[0] &= ~GPIO_AFRL_AFRL5_0;
 80006da:	4b0b      	ldr	r3, [pc, #44]	; (8000708 <initialization+0x500>)
 80006dc:	6a1b      	ldr	r3, [r3, #32]
 80006de:	4a0a      	ldr	r2, [pc, #40]	; (8000708 <initialization+0x500>)
 80006e0:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80006e4:	6213      	str	r3, [r2, #32]
	GPIOJ->AFR[0] |= GPIO_AFRL_AFRL5_1 | GPIO_AFRL_AFRL5_2 | GPIO_AFRL_AFRL5_3;
 80006e6:	4b08      	ldr	r3, [pc, #32]	; (8000708 <initialization+0x500>)
 80006e8:	6a1b      	ldr	r3, [r3, #32]
 80006ea:	4a07      	ldr	r2, [pc, #28]	; (8000708 <initialization+0x500>)
 80006ec:	f443 0360 	orr.w	r3, r3, #14680064	; 0xe00000
 80006f0:	6213      	str	r3, [r2, #32]

	//R7 PJ6
	GPIOJ->MODER   &= ~GPIO_MODER_MODER6;
 80006f2:	4b05      	ldr	r3, [pc, #20]	; (8000708 <initialization+0x500>)
 80006f4:	681b      	ldr	r3, [r3, #0]
 80006f6:	4a04      	ldr	r2, [pc, #16]	; (8000708 <initialization+0x500>)
 80006f8:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80006fc:	e006      	b.n	800070c <initialization+0x504>
 80006fe:	bf00      	nop
 8000700:	40022800 	.word	0x40022800
 8000704:	40022000 	.word	0x40022000
 8000708:	40022400 	.word	0x40022400
 800070c:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER6_1;
 800070e:	4b99      	ldr	r3, [pc, #612]	; (8000974 <initialization+0x76c>)
 8000710:	681b      	ldr	r3, [r3, #0]
 8000712:	4a98      	ldr	r2, [pc, #608]	; (8000974 <initialization+0x76c>)
 8000714:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000718:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR6_1;
 800071a:	4b96      	ldr	r3, [pc, #600]	; (8000974 <initialization+0x76c>)
 800071c:	689b      	ldr	r3, [r3, #8]
 800071e:	4a95      	ldr	r2, [pc, #596]	; (8000974 <initialization+0x76c>)
 8000720:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000724:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[0] &= ~GPIO_AFRL_AFRL6_0;
 8000726:	4b93      	ldr	r3, [pc, #588]	; (8000974 <initialization+0x76c>)
 8000728:	6a1b      	ldr	r3, [r3, #32]
 800072a:	4a92      	ldr	r2, [pc, #584]	; (8000974 <initialization+0x76c>)
 800072c:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8000730:	6213      	str	r3, [r2, #32]
	GPIOJ->AFR[0] |= GPIO_AFRL_AFRL6_1 | GPIO_AFRL_AFRL6_2 | GPIO_AFRL_AFRL6_3;
 8000732:	4b90      	ldr	r3, [pc, #576]	; (8000974 <initialization+0x76c>)
 8000734:	6a1b      	ldr	r3, [r3, #32]
 8000736:	4a8f      	ldr	r2, [pc, #572]	; (8000974 <initialization+0x76c>)
 8000738:	f043 6360 	orr.w	r3, r3, #234881024	; 0xe000000
 800073c:	6213      	str	r3, [r2, #32]

	//G0 PJ7
	GPIOJ->MODER   &= ~GPIO_MODER_MODER7;
 800073e:	4b8d      	ldr	r3, [pc, #564]	; (8000974 <initialization+0x76c>)
 8000740:	681b      	ldr	r3, [r3, #0]
 8000742:	4a8c      	ldr	r2, [pc, #560]	; (8000974 <initialization+0x76c>)
 8000744:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8000748:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER7_1;
 800074a:	4b8a      	ldr	r3, [pc, #552]	; (8000974 <initialization+0x76c>)
 800074c:	681b      	ldr	r3, [r3, #0]
 800074e:	4a89      	ldr	r2, [pc, #548]	; (8000974 <initialization+0x76c>)
 8000750:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000754:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR7_1;
 8000756:	4b87      	ldr	r3, [pc, #540]	; (8000974 <initialization+0x76c>)
 8000758:	689b      	ldr	r3, [r3, #8]
 800075a:	4a86      	ldr	r2, [pc, #536]	; (8000974 <initialization+0x76c>)
 800075c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000760:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[0] &= ~GPIO_AFRL_AFRL7_0;
 8000762:	4b84      	ldr	r3, [pc, #528]	; (8000974 <initialization+0x76c>)
 8000764:	6a1b      	ldr	r3, [r3, #32]
 8000766:	4a83      	ldr	r2, [pc, #524]	; (8000974 <initialization+0x76c>)
 8000768:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800076c:	6213      	str	r3, [r2, #32]
	GPIOJ->AFR[0] |= GPIO_AFRL_AFRL7_1 | GPIO_AFRL_AFRL7_2 | GPIO_AFRL_AFRL7_3;
 800076e:	4b81      	ldr	r3, [pc, #516]	; (8000974 <initialization+0x76c>)
 8000770:	6a1b      	ldr	r3, [r3, #32]
 8000772:	4a80      	ldr	r2, [pc, #512]	; (8000974 <initialization+0x76c>)
 8000774:	f043 4360 	orr.w	r3, r3, #3758096384	; 0xe0000000
 8000778:	6213      	str	r3, [r2, #32]

	//G1 PJ8
	GPIOJ->MODER   &= ~GPIO_MODER_MODER8;
 800077a:	4b7e      	ldr	r3, [pc, #504]	; (8000974 <initialization+0x76c>)
 800077c:	681b      	ldr	r3, [r3, #0]
 800077e:	4a7d      	ldr	r2, [pc, #500]	; (8000974 <initialization+0x76c>)
 8000780:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000784:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER8_1;
 8000786:	4b7b      	ldr	r3, [pc, #492]	; (8000974 <initialization+0x76c>)
 8000788:	681b      	ldr	r3, [r3, #0]
 800078a:	4a7a      	ldr	r2, [pc, #488]	; (8000974 <initialization+0x76c>)
 800078c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000790:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR8_1;
 8000792:	4b78      	ldr	r3, [pc, #480]	; (8000974 <initialization+0x76c>)
 8000794:	689b      	ldr	r3, [r3, #8]
 8000796:	4a77      	ldr	r2, [pc, #476]	; (8000974 <initialization+0x76c>)
 8000798:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800079c:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[1] &= ~GPIO_AFRL_AFRL0_0;
 800079e:	4b75      	ldr	r3, [pc, #468]	; (8000974 <initialization+0x76c>)
 80007a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80007a2:	4a74      	ldr	r2, [pc, #464]	; (8000974 <initialization+0x76c>)
 80007a4:	f023 0301 	bic.w	r3, r3, #1
 80007a8:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOJ->AFR[1] |= GPIO_AFRL_AFRL0_1 | GPIO_AFRL_AFRL0_2 | GPIO_AFRL_AFRL0_3;
 80007aa:	4b72      	ldr	r3, [pc, #456]	; (8000974 <initialization+0x76c>)
 80007ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80007ae:	4a71      	ldr	r2, [pc, #452]	; (8000974 <initialization+0x76c>)
 80007b0:	f043 030e 	orr.w	r3, r3, #14
 80007b4:	6253      	str	r3, [r2, #36]	; 0x24

	//G2 PJ9
	GPIOJ->MODER   &= ~GPIO_MODER_MODER9;
 80007b6:	4b6f      	ldr	r3, [pc, #444]	; (8000974 <initialization+0x76c>)
 80007b8:	681b      	ldr	r3, [r3, #0]
 80007ba:	4a6e      	ldr	r2, [pc, #440]	; (8000974 <initialization+0x76c>)
 80007bc:	f423 2340 	bic.w	r3, r3, #786432	; 0xc0000
 80007c0:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER9_1;
 80007c2:	4b6c      	ldr	r3, [pc, #432]	; (8000974 <initialization+0x76c>)
 80007c4:	681b      	ldr	r3, [r3, #0]
 80007c6:	4a6b      	ldr	r2, [pc, #428]	; (8000974 <initialization+0x76c>)
 80007c8:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80007cc:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR9_1;
 80007ce:	4b69      	ldr	r3, [pc, #420]	; (8000974 <initialization+0x76c>)
 80007d0:	689b      	ldr	r3, [r3, #8]
 80007d2:	4a68      	ldr	r2, [pc, #416]	; (8000974 <initialization+0x76c>)
 80007d4:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80007d8:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[1] &= ~GPIO_AFRL_AFRL1_0;
 80007da:	4b66      	ldr	r3, [pc, #408]	; (8000974 <initialization+0x76c>)
 80007dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80007de:	4a65      	ldr	r2, [pc, #404]	; (8000974 <initialization+0x76c>)
 80007e0:	f023 0310 	bic.w	r3, r3, #16
 80007e4:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOJ->AFR[1] |= GPIO_AFRL_AFRL1_1 | GPIO_AFRL_AFRL1_2 | GPIO_AFRL_AFRL1_3;
 80007e6:	4b63      	ldr	r3, [pc, #396]	; (8000974 <initialization+0x76c>)
 80007e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80007ea:	4a62      	ldr	r2, [pc, #392]	; (8000974 <initialization+0x76c>)
 80007ec:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 80007f0:	6253      	str	r3, [r2, #36]	; 0x24

	//G3 PJ10
	GPIOJ->MODER   &= ~GPIO_MODER_MODER10;
 80007f2:	4b60      	ldr	r3, [pc, #384]	; (8000974 <initialization+0x76c>)
 80007f4:	681b      	ldr	r3, [r3, #0]
 80007f6:	4a5f      	ldr	r2, [pc, #380]	; (8000974 <initialization+0x76c>)
 80007f8:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 80007fc:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER10_1;
 80007fe:	4b5d      	ldr	r3, [pc, #372]	; (8000974 <initialization+0x76c>)
 8000800:	681b      	ldr	r3, [r3, #0]
 8000802:	4a5c      	ldr	r2, [pc, #368]	; (8000974 <initialization+0x76c>)
 8000804:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000808:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR10_1;
 800080a:	4b5a      	ldr	r3, [pc, #360]	; (8000974 <initialization+0x76c>)
 800080c:	689b      	ldr	r3, [r3, #8]
 800080e:	4a59      	ldr	r2, [pc, #356]	; (8000974 <initialization+0x76c>)
 8000810:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000814:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[1] &= ~GPIO_AFRL_AFRL2_0;
 8000816:	4b57      	ldr	r3, [pc, #348]	; (8000974 <initialization+0x76c>)
 8000818:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800081a:	4a56      	ldr	r2, [pc, #344]	; (8000974 <initialization+0x76c>)
 800081c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000820:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOJ->AFR[1] |= GPIO_AFRL_AFRL2_1 | GPIO_AFRL_AFRL2_2 | GPIO_AFRL_AFRL2_3;
 8000822:	4b54      	ldr	r3, [pc, #336]	; (8000974 <initialization+0x76c>)
 8000824:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000826:	4a53      	ldr	r2, [pc, #332]	; (8000974 <initialization+0x76c>)
 8000828:	f443 6360 	orr.w	r3, r3, #3584	; 0xe00
 800082c:	6253      	str	r3, [r2, #36]	; 0x24

	//G4 PJ11
	GPIOJ->MODER   &= ~GPIO_MODER_MODER11;
 800082e:	4b51      	ldr	r3, [pc, #324]	; (8000974 <initialization+0x76c>)
 8000830:	681b      	ldr	r3, [r3, #0]
 8000832:	4a50      	ldr	r2, [pc, #320]	; (8000974 <initialization+0x76c>)
 8000834:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8000838:	6013      	str	r3, [r2, #0]
	GPIOJ->MODER   |= GPIO_MODER_MODER11_1;
 800083a:	4b4e      	ldr	r3, [pc, #312]	; (8000974 <initialization+0x76c>)
 800083c:	681b      	ldr	r3, [r3, #0]
 800083e:	4a4d      	ldr	r2, [pc, #308]	; (8000974 <initialization+0x76c>)
 8000840:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8000844:	6013      	str	r3, [r2, #0]
	GPIOJ->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR11_1;
 8000846:	4b4b      	ldr	r3, [pc, #300]	; (8000974 <initialization+0x76c>)
 8000848:	689b      	ldr	r3, [r3, #8]
 800084a:	4a4a      	ldr	r2, [pc, #296]	; (8000974 <initialization+0x76c>)
 800084c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8000850:	6093      	str	r3, [r2, #8]
	GPIOJ->AFR[1] &= ~GPIO_AFRL_AFRL3_0;
 8000852:	4b48      	ldr	r3, [pc, #288]	; (8000974 <initialization+0x76c>)
 8000854:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000856:	4a47      	ldr	r2, [pc, #284]	; (8000974 <initialization+0x76c>)
 8000858:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800085c:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOJ->AFR[1] |= GPIO_AFRL_AFRL3_1 | GPIO_AFRL_AFRL3_2 | GPIO_AFRL_AFRL3_3;
 800085e:	4b45      	ldr	r3, [pc, #276]	; (8000974 <initialization+0x76c>)
 8000860:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000862:	4a44      	ldr	r2, [pc, #272]	; (8000974 <initialization+0x76c>)
 8000864:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8000868:	6253      	str	r3, [r2, #36]	; 0x24

	//G5 PK0
	GPIOK->MODER   &= ~GPIO_MODER_MODER0;
 800086a:	4b43      	ldr	r3, [pc, #268]	; (8000978 <initialization+0x770>)
 800086c:	681b      	ldr	r3, [r3, #0]
 800086e:	4a42      	ldr	r2, [pc, #264]	; (8000978 <initialization+0x770>)
 8000870:	f023 0303 	bic.w	r3, r3, #3
 8000874:	6013      	str	r3, [r2, #0]
	GPIOK->MODER   |= GPIO_MODER_MODER0_1;
 8000876:	4b40      	ldr	r3, [pc, #256]	; (8000978 <initialization+0x770>)
 8000878:	681b      	ldr	r3, [r3, #0]
 800087a:	4a3f      	ldr	r2, [pc, #252]	; (8000978 <initialization+0x770>)
 800087c:	f043 0302 	orr.w	r3, r3, #2
 8000880:	6013      	str	r3, [r2, #0]
	GPIOK->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR0_1;
 8000882:	4b3d      	ldr	r3, [pc, #244]	; (8000978 <initialization+0x770>)
 8000884:	689b      	ldr	r3, [r3, #8]
 8000886:	4a3c      	ldr	r2, [pc, #240]	; (8000978 <initialization+0x770>)
 8000888:	f043 0302 	orr.w	r3, r3, #2
 800088c:	6093      	str	r3, [r2, #8]
	GPIOK->AFR[0] &= ~GPIO_AFRL_AFRL0_0;
 800088e:	4b3a      	ldr	r3, [pc, #232]	; (8000978 <initialization+0x770>)
 8000890:	6a1b      	ldr	r3, [r3, #32]
 8000892:	4a39      	ldr	r2, [pc, #228]	; (8000978 <initialization+0x770>)
 8000894:	f023 0301 	bic.w	r3, r3, #1
 8000898:	6213      	str	r3, [r2, #32]
	GPIOK->AFR[0] |= GPIO_AFRL_AFRL0_1 | GPIO_AFRL_AFRL0_2 | GPIO_AFRL_AFRL0_3;
 800089a:	4b37      	ldr	r3, [pc, #220]	; (8000978 <initialization+0x770>)
 800089c:	6a1b      	ldr	r3, [r3, #32]
 800089e:	4a36      	ldr	r2, [pc, #216]	; (8000978 <initialization+0x770>)
 80008a0:	f043 030e 	orr.w	r3, r3, #14
 80008a4:	6213      	str	r3, [r2, #32]

	//G6 PK1
	GPIOK->MODER   &= ~GPIO_MODER_MODER1;
 80008a6:	4b34      	ldr	r3, [pc, #208]	; (8000978 <initialization+0x770>)
 80008a8:	681b      	ldr	r3, [r3, #0]
 80008aa:	4a33      	ldr	r2, [pc, #204]	; (8000978 <initialization+0x770>)
 80008ac:	f023 030c 	bic.w	r3, r3, #12
 80008b0:	6013      	str	r3, [r2, #0]
	GPIOK->MODER   |= GPIO_MODER_MODER1_1;
 80008b2:	4b31      	ldr	r3, [pc, #196]	; (8000978 <initialization+0x770>)
 80008b4:	681b      	ldr	r3, [r3, #0]
 80008b6:	4a30      	ldr	r2, [pc, #192]	; (8000978 <initialization+0x770>)
 80008b8:	f043 0308 	orr.w	r3, r3, #8
 80008bc:	6013      	str	r3, [r2, #0]
	GPIOK->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR1_1;
 80008be:	4b2e      	ldr	r3, [pc, #184]	; (8000978 <initialization+0x770>)
 80008c0:	689b      	ldr	r3, [r3, #8]
 80008c2:	4a2d      	ldr	r2, [pc, #180]	; (8000978 <initialization+0x770>)
 80008c4:	f043 0308 	orr.w	r3, r3, #8
 80008c8:	6093      	str	r3, [r2, #8]
	GPIOK->AFR[0] &= ~GPIO_AFRL_AFRL1_0;
 80008ca:	4b2b      	ldr	r3, [pc, #172]	; (8000978 <initialization+0x770>)
 80008cc:	6a1b      	ldr	r3, [r3, #32]
 80008ce:	4a2a      	ldr	r2, [pc, #168]	; (8000978 <initialization+0x770>)
 80008d0:	f023 0310 	bic.w	r3, r3, #16
 80008d4:	6213      	str	r3, [r2, #32]
	GPIOK->AFR[0] |= GPIO_AFRL_AFRL1_1 | GPIO_AFRL_AFRL1_2 | GPIO_AFRL_AFRL1_3;
 80008d6:	4b28      	ldr	r3, [pc, #160]	; (8000978 <initialization+0x770>)
 80008d8:	6a1b      	ldr	r3, [r3, #32]
 80008da:	4a27      	ldr	r2, [pc, #156]	; (8000978 <initialization+0x770>)
 80008dc:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 80008e0:	6213      	str	r3, [r2, #32]

	//G7 PK2
	GPIOK->MODER   &= ~GPIO_MODER_MODER2;
 80008e2:	4b25      	ldr	r3, [pc, #148]	; (8000978 <initialization+0x770>)
 80008e4:	681b      	ldr	r3, [r3, #0]
 80008e6:	4a24      	ldr	r2, [pc, #144]	; (8000978 <initialization+0x770>)
 80008e8:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 80008ec:	6013      	str	r3, [r2, #0]
	GPIOK->MODER   |= GPIO_MODER_MODER2_1;
 80008ee:	4b22      	ldr	r3, [pc, #136]	; (8000978 <initialization+0x770>)
 80008f0:	681b      	ldr	r3, [r3, #0]
 80008f2:	4a21      	ldr	r2, [pc, #132]	; (8000978 <initialization+0x770>)
 80008f4:	f043 0320 	orr.w	r3, r3, #32
 80008f8:	6013      	str	r3, [r2, #0]
	GPIOK->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR2_1;
 80008fa:	4b1f      	ldr	r3, [pc, #124]	; (8000978 <initialization+0x770>)
 80008fc:	689b      	ldr	r3, [r3, #8]
 80008fe:	4a1e      	ldr	r2, [pc, #120]	; (8000978 <initialization+0x770>)
 8000900:	f043 0320 	orr.w	r3, r3, #32
 8000904:	6093      	str	r3, [r2, #8]
	GPIOK->AFR[0] &= ~GPIO_AFRL_AFRL2_0;
 8000906:	4b1c      	ldr	r3, [pc, #112]	; (8000978 <initialization+0x770>)
 8000908:	6a1b      	ldr	r3, [r3, #32]
 800090a:	4a1b      	ldr	r2, [pc, #108]	; (8000978 <initialization+0x770>)
 800090c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000910:	6213      	str	r3, [r2, #32]
	GPIOK->AFR[0] |= GPIO_AFRL_AFRL2_1 | GPIO_AFRL_AFRL2_2 | GPIO_AFRL_AFRL2_3;
 8000912:	4b19      	ldr	r3, [pc, #100]	; (8000978 <initialization+0x770>)
 8000914:	6a1b      	ldr	r3, [r3, #32]
 8000916:	4a18      	ldr	r2, [pc, #96]	; (8000978 <initialization+0x770>)
 8000918:	f443 6360 	orr.w	r3, r3, #3584	; 0xe00
 800091c:	6213      	str	r3, [r2, #32]

	//VSYNC
	GPIOI->MODER   &= ~GPIO_MODER_MODER9;
 800091e:	4b17      	ldr	r3, [pc, #92]	; (800097c <initialization+0x774>)
 8000920:	681b      	ldr	r3, [r3, #0]
 8000922:	4a16      	ldr	r2, [pc, #88]	; (800097c <initialization+0x774>)
 8000924:	f423 2340 	bic.w	r3, r3, #786432	; 0xc0000
 8000928:	6013      	str	r3, [r2, #0]
	GPIOI->MODER   |= GPIO_MODER_MODER9_1;
 800092a:	4b14      	ldr	r3, [pc, #80]	; (800097c <initialization+0x774>)
 800092c:	681b      	ldr	r3, [r3, #0]
 800092e:	4a13      	ldr	r2, [pc, #76]	; (800097c <initialization+0x774>)
 8000930:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8000934:	6013      	str	r3, [r2, #0]
	GPIOI->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR9_1;
 8000936:	4b11      	ldr	r3, [pc, #68]	; (800097c <initialization+0x774>)
 8000938:	689b      	ldr	r3, [r3, #8]
 800093a:	4a10      	ldr	r2, [pc, #64]	; (800097c <initialization+0x774>)
 800093c:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8000940:	6093      	str	r3, [r2, #8]
	GPIOI->AFR[1] &= ~GPIO_AFRL_AFRL1_0;
 8000942:	4b0e      	ldr	r3, [pc, #56]	; (800097c <initialization+0x774>)
 8000944:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000946:	4a0d      	ldr	r2, [pc, #52]	; (800097c <initialization+0x774>)
 8000948:	f023 0310 	bic.w	r3, r3, #16
 800094c:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOI->AFR[1] |= GPIO_AFRL_AFRL1_1 | GPIO_AFRL_AFRL1_2 | GPIO_AFRL_AFRL1_3;
 800094e:	4b0b      	ldr	r3, [pc, #44]	; (800097c <initialization+0x774>)
 8000950:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000952:	4a0a      	ldr	r2, [pc, #40]	; (800097c <initialization+0x774>)
 8000954:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 8000958:	6253      	str	r3, [r2, #36]	; 0x24

	//HSYNC
	GPIOI->MODER   &= ~GPIO_MODER_MODER10;
 800095a:	4b08      	ldr	r3, [pc, #32]	; (800097c <initialization+0x774>)
 800095c:	681b      	ldr	r3, [r3, #0]
 800095e:	4a07      	ldr	r2, [pc, #28]	; (800097c <initialization+0x774>)
 8000960:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8000964:	6013      	str	r3, [r2, #0]
	GPIOI->MODER   |= GPIO_MODER_MODER10_1;
 8000966:	4b05      	ldr	r3, [pc, #20]	; (800097c <initialization+0x774>)
 8000968:	681b      	ldr	r3, [r3, #0]
 800096a:	4a04      	ldr	r2, [pc, #16]	; (800097c <initialization+0x774>)
 800096c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000970:	e006      	b.n	8000980 <initialization+0x778>
 8000972:	bf00      	nop
 8000974:	40022400 	.word	0x40022400
 8000978:	40022800 	.word	0x40022800
 800097c:	40022000 	.word	0x40022000
 8000980:	6013      	str	r3, [r2, #0]
	GPIOI->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR10_1;
 8000982:	4b6c      	ldr	r3, [pc, #432]	; (8000b34 <initialization+0x92c>)
 8000984:	689b      	ldr	r3, [r3, #8]
 8000986:	4a6b      	ldr	r2, [pc, #428]	; (8000b34 <initialization+0x92c>)
 8000988:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800098c:	6093      	str	r3, [r2, #8]
	GPIOI->AFR[1] &= ~GPIO_AFRL_AFRL2_0;
 800098e:	4b69      	ldr	r3, [pc, #420]	; (8000b34 <initialization+0x92c>)
 8000990:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000992:	4a68      	ldr	r2, [pc, #416]	; (8000b34 <initialization+0x92c>)
 8000994:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000998:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOI->AFR[1] |= GPIO_AFRL_AFRL2_1 | GPIO_AFRL_AFRL2_2 | GPIO_AFRL_AFRL2_3;
 800099a:	4b66      	ldr	r3, [pc, #408]	; (8000b34 <initialization+0x92c>)
 800099c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800099e:	4a65      	ldr	r2, [pc, #404]	; (8000b34 <initialization+0x92c>)
 80009a0:	f443 6360 	orr.w	r3, r3, #3584	; 0xe00
 80009a4:	6253      	str	r3, [r2, #36]	; 0x24

	//CLK
	GPIOI->MODER   &= ~GPIO_MODER_MODER14;
 80009a6:	4b63      	ldr	r3, [pc, #396]	; (8000b34 <initialization+0x92c>)
 80009a8:	681b      	ldr	r3, [r3, #0]
 80009aa:	4a62      	ldr	r2, [pc, #392]	; (8000b34 <initialization+0x92c>)
 80009ac:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 80009b0:	6013      	str	r3, [r2, #0]
	GPIOI->MODER   |= GPIO_MODER_MODER14_1;
 80009b2:	4b60      	ldr	r3, [pc, #384]	; (8000b34 <initialization+0x92c>)
 80009b4:	681b      	ldr	r3, [r3, #0]
 80009b6:	4a5f      	ldr	r2, [pc, #380]	; (8000b34 <initialization+0x92c>)
 80009b8:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80009bc:	6013      	str	r3, [r2, #0]
	GPIOI->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR14_1;
 80009be:	4b5d      	ldr	r3, [pc, #372]	; (8000b34 <initialization+0x92c>)
 80009c0:	689b      	ldr	r3, [r3, #8]
 80009c2:	4a5c      	ldr	r2, [pc, #368]	; (8000b34 <initialization+0x92c>)
 80009c4:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80009c8:	6093      	str	r3, [r2, #8]
	GPIOI->AFR[1] &= ~GPIO_AFRL_AFRL6_0;
 80009ca:	4b5a      	ldr	r3, [pc, #360]	; (8000b34 <initialization+0x92c>)
 80009cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80009ce:	4a59      	ldr	r2, [pc, #356]	; (8000b34 <initialization+0x92c>)
 80009d0:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80009d4:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOI->AFR[1] |= GPIO_AFRL_AFRL6_1 | GPIO_AFRL_AFRL6_2 | GPIO_AFRL_AFRL6_3;
 80009d6:	4b57      	ldr	r3, [pc, #348]	; (8000b34 <initialization+0x92c>)
 80009d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80009da:	4a56      	ldr	r2, [pc, #344]	; (8000b34 <initialization+0x92c>)
 80009dc:	f043 6360 	orr.w	r3, r3, #234881024	; 0xe000000
 80009e0:	6253      	str	r3, [r2, #36]	; 0x24

	//DE
	GPIOK->MODER   &= ~GPIO_MODER_MODER7;
 80009e2:	4b55      	ldr	r3, [pc, #340]	; (8000b38 <initialization+0x930>)
 80009e4:	681b      	ldr	r3, [r3, #0]
 80009e6:	4a54      	ldr	r2, [pc, #336]	; (8000b38 <initialization+0x930>)
 80009e8:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80009ec:	6013      	str	r3, [r2, #0]
	GPIOK->MODER   |= GPIO_MODER_MODER7_1;
 80009ee:	4b52      	ldr	r3, [pc, #328]	; (8000b38 <initialization+0x930>)
 80009f0:	681b      	ldr	r3, [r3, #0]
 80009f2:	4a51      	ldr	r2, [pc, #324]	; (8000b38 <initialization+0x930>)
 80009f4:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80009f8:	6013      	str	r3, [r2, #0]
	GPIOK->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR7_1;
 80009fa:	4b4f      	ldr	r3, [pc, #316]	; (8000b38 <initialization+0x930>)
 80009fc:	689b      	ldr	r3, [r3, #8]
 80009fe:	4a4e      	ldr	r2, [pc, #312]	; (8000b38 <initialization+0x930>)
 8000a00:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000a04:	6093      	str	r3, [r2, #8]
	GPIOK->AFR[0] &= ~GPIO_AFRL_AFRL7_0;
 8000a06:	4b4c      	ldr	r3, [pc, #304]	; (8000b38 <initialization+0x930>)
 8000a08:	6a1b      	ldr	r3, [r3, #32]
 8000a0a:	4a4b      	ldr	r2, [pc, #300]	; (8000b38 <initialization+0x930>)
 8000a0c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8000a10:	6213      	str	r3, [r2, #32]
	GPIOK->AFR[0] |= GPIO_AFRL_AFRL7_1 | GPIO_AFRL_AFRL7_2 | GPIO_AFRL_AFRL7_3;
 8000a12:	4b49      	ldr	r3, [pc, #292]	; (8000b38 <initialization+0x930>)
 8000a14:	6a1b      	ldr	r3, [r3, #32]
 8000a16:	4a48      	ldr	r2, [pc, #288]	; (8000b38 <initialization+0x930>)
 8000a18:	f043 4360 	orr.w	r3, r3, #3758096384	; 0xe0000000
 8000a1c:	6213      	str	r3, [r2, #32]

	//LED
	GPIOK->MODER &= ~GPIO_MODER_MODER3;
 8000a1e:	4b46      	ldr	r3, [pc, #280]	; (8000b38 <initialization+0x930>)
 8000a20:	681b      	ldr	r3, [r3, #0]
 8000a22:	4a45      	ldr	r2, [pc, #276]	; (8000b38 <initialization+0x930>)
 8000a24:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8000a28:	6013      	str	r3, [r2, #0]
	GPIOK->MODER |= GPIO_MODER_MODER3_0;
 8000a2a:	4b43      	ldr	r3, [pc, #268]	; (8000b38 <initialization+0x930>)
 8000a2c:	681b      	ldr	r3, [r3, #0]
 8000a2e:	4a42      	ldr	r2, [pc, #264]	; (8000b38 <initialization+0x930>)
 8000a30:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000a34:	6013      	str	r3, [r2, #0]
	GPIOK->BSRR |= GPIO_BSRR_BS_3;
 8000a36:	4b40      	ldr	r3, [pc, #256]	; (8000b38 <initialization+0x930>)
 8000a38:	699b      	ldr	r3, [r3, #24]
 8000a3a:	4a3f      	ldr	r2, [pc, #252]	; (8000b38 <initialization+0x930>)
 8000a3c:	f043 0308 	orr.w	r3, r3, #8
 8000a40:	6193      	str	r3, [r2, #24]

	//ON
	GPIOI->MODER &= ~GPIO_MODER_MODER12;
 8000a42:	4b3c      	ldr	r3, [pc, #240]	; (8000b34 <initialization+0x92c>)
 8000a44:	681b      	ldr	r3, [r3, #0]
 8000a46:	4a3b      	ldr	r2, [pc, #236]	; (8000b34 <initialization+0x92c>)
 8000a48:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 8000a4c:	6013      	str	r3, [r2, #0]
	GPIOI->MODER |= GPIO_MODER_MODER12_0;
 8000a4e:	4b39      	ldr	r3, [pc, #228]	; (8000b34 <initialization+0x92c>)
 8000a50:	681b      	ldr	r3, [r3, #0]
 8000a52:	4a38      	ldr	r2, [pc, #224]	; (8000b34 <initialization+0x92c>)
 8000a54:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000a58:	6013      	str	r3, [r2, #0]
	GPIOI->BSRR |= GPIO_BSRR_BS_12;
 8000a5a:	4b36      	ldr	r3, [pc, #216]	; (8000b34 <initialization+0x92c>)
 8000a5c:	699b      	ldr	r3, [r3, #24]
 8000a5e:	4a35      	ldr	r2, [pc, #212]	; (8000b34 <initialization+0x92c>)
 8000a60:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000a64:	6193      	str	r3, [r2, #24]

	GPIOC->MODER &= ~GPIO_MODER_MODER7;
 8000a66:	4b35      	ldr	r3, [pc, #212]	; (8000b3c <initialization+0x934>)
 8000a68:	681b      	ldr	r3, [r3, #0]
 8000a6a:	4a34      	ldr	r2, [pc, #208]	; (8000b3c <initialization+0x934>)
 8000a6c:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8000a70:	6013      	str	r3, [r2, #0]
	GPIOC->MODER |= GPIO_MODER_MODER7_0;
 8000a72:	4b32      	ldr	r3, [pc, #200]	; (8000b3c <initialization+0x934>)
 8000a74:	681b      	ldr	r3, [r3, #0]
 8000a76:	4a31      	ldr	r2, [pc, #196]	; (8000b3c <initialization+0x934>)
 8000a78:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000a7c:	6013      	str	r3, [r2, #0]
	GPIOC->BSRR |= GPIO_BSRR_BS_7;
 8000a7e:	4b2f      	ldr	r3, [pc, #188]	; (8000b3c <initialization+0x934>)
 8000a80:	699b      	ldr	r3, [r3, #24]
 8000a82:	4a2e      	ldr	r2, [pc, #184]	; (8000b3c <initialization+0x934>)
 8000a84:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000a88:	6193      	str	r3, [r2, #24]

	LTDC->SSCR |= ((DISPLAY_HSYNC - 1) << 16 | (DISPLAY_VSYNC - 1));
 8000a8a:	4b2d      	ldr	r3, [pc, #180]	; (8000b40 <initialization+0x938>)
 8000a8c:	689a      	ldr	r2, [r3, #8]
 8000a8e:	492c      	ldr	r1, [pc, #176]	; (8000b40 <initialization+0x938>)
 8000a90:	4b2c      	ldr	r3, [pc, #176]	; (8000b44 <initialization+0x93c>)
 8000a92:	4313      	orrs	r3, r2
 8000a94:	608b      	str	r3, [r1, #8]
	LTDC->BPCR |= ((DISPLAY_HSYNC+DISPLAY_HBP-1) << 16 | (DISPLAY_VSYNC+DISPLAY_VBP-1));
 8000a96:	4b2a      	ldr	r3, [pc, #168]	; (8000b40 <initialization+0x938>)
 8000a98:	68da      	ldr	r2, [r3, #12]
 8000a9a:	4929      	ldr	r1, [pc, #164]	; (8000b40 <initialization+0x938>)
 8000a9c:	4b2a      	ldr	r3, [pc, #168]	; (8000b48 <initialization+0x940>)
 8000a9e:	4313      	orrs	r3, r2
 8000aa0:	60cb      	str	r3, [r1, #12]
	LTDC->AWCR |= ((DISPLAY_WIDTH + DISPLAY_HSYNC + DISPLAY_HBP - 1) << 16 | (DISPLAY_HEIGHT + DISPLAY_VSYNC + DISPLAY_VBP - 1));
 8000aa2:	4b27      	ldr	r3, [pc, #156]	; (8000b40 <initialization+0x938>)
 8000aa4:	691a      	ldr	r2, [r3, #16]
 8000aa6:	4926      	ldr	r1, [pc, #152]	; (8000b40 <initialization+0x938>)
 8000aa8:	4b28      	ldr	r3, [pc, #160]	; (8000b4c <initialization+0x944>)
 8000aaa:	4313      	orrs	r3, r2
 8000aac:	610b      	str	r3, [r1, #16]
	LTDC->TWCR |= ((DISPLAY_WIDTH + DISPLAY_HSYNC + DISPLAY_HBP + DISPLAY_HFP -1)<< 16 |(DISPLAY_HEIGHT + DISPLAY_VSYNC + DISPLAY_VBP + DISPLAY_VFP - 1));
 8000aae:	4b24      	ldr	r3, [pc, #144]	; (8000b40 <initialization+0x938>)
 8000ab0:	695a      	ldr	r2, [r3, #20]
 8000ab2:	4923      	ldr	r1, [pc, #140]	; (8000b40 <initialization+0x938>)
 8000ab4:	4b26      	ldr	r3, [pc, #152]	; (8000b50 <initialization+0x948>)
 8000ab6:	4313      	orrs	r3, r2
 8000ab8:	614b      	str	r3, [r1, #20]
	LTDC_Layer2->WHPCR |= (((DISPLAY_WIDTH + DISPLAY_HBP + DISPLAY_HSYNC - 1) << 16) | (DISPLAY_HBP + DISPLAY_HSYNC));
 8000aba:	4b26      	ldr	r3, [pc, #152]	; (8000b54 <initialization+0x94c>)
 8000abc:	685a      	ldr	r2, [r3, #4]
 8000abe:	4925      	ldr	r1, [pc, #148]	; (8000b54 <initialization+0x94c>)
 8000ac0:	4b25      	ldr	r3, [pc, #148]	; (8000b58 <initialization+0x950>)
 8000ac2:	4313      	orrs	r3, r2
 8000ac4:	604b      	str	r3, [r1, #4]
	LTDC_Layer2->WVPCR |= (((DISPLAY_HEIGHT + DISPLAY_VSYNC + DISPLAY_VBP - 1) << 16) |(DISPLAY_VSYNC + DISPLAY_VBP));
 8000ac6:	4b23      	ldr	r3, [pc, #140]	; (8000b54 <initialization+0x94c>)
 8000ac8:	689a      	ldr	r2, [r3, #8]
 8000aca:	4922      	ldr	r1, [pc, #136]	; (8000b54 <initialization+0x94c>)
 8000acc:	4b23      	ldr	r3, [pc, #140]	; (8000b5c <initialization+0x954>)
 8000ace:	4313      	orrs	r3, r2
 8000ad0:	608b      	str	r3, [r1, #8]
	LTDC_Layer2->PFCR = 2;
 8000ad2:	4b20      	ldr	r3, [pc, #128]	; (8000b54 <initialization+0x94c>)
 8000ad4:	2202      	movs	r2, #2
 8000ad6:	611a      	str	r2, [r3, #16]
	LTDC_Layer2->BFCR |= ((4 << 8) | 5);
 8000ad8:	4b1e      	ldr	r3, [pc, #120]	; (8000b54 <initialization+0x94c>)
 8000ada:	69da      	ldr	r2, [r3, #28]
 8000adc:	491d      	ldr	r1, [pc, #116]	; (8000b54 <initialization+0x94c>)
 8000ade:	f240 4305 	movw	r3, #1029	; 0x405
 8000ae2:	4313      	orrs	r3, r2
 8000ae4:	61cb      	str	r3, [r1, #28]
	LTDC_Layer2->CACR = 0xff;
 8000ae6:	4b1b      	ldr	r3, [pc, #108]	; (8000b54 <initialization+0x94c>)
 8000ae8:	22ff      	movs	r2, #255	; 0xff
 8000aea:	615a      	str	r2, [r3, #20]
	LTDC_Layer2->CFBLR |= (((PIXEL_SIZE * DISPLAY_WIDTH) << 16) | (PIXEL_SIZE * DISPLAY_WIDTH + 3));
 8000aec:	4b19      	ldr	r3, [pc, #100]	; (8000b54 <initialization+0x94c>)
 8000aee:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000af0:	4918      	ldr	r1, [pc, #96]	; (8000b54 <initialization+0x94c>)
 8000af2:	4b1b      	ldr	r3, [pc, #108]	; (8000b60 <initialization+0x958>)
 8000af4:	4313      	orrs	r3, r2
 8000af6:	62cb      	str	r3, [r1, #44]	; 0x2c
	LTDC_Layer2->CFBLNR |= DISPLAY_HEIGHT;
 8000af8:	4b16      	ldr	r3, [pc, #88]	; (8000b54 <initialization+0x94c>)
 8000afa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000afc:	4a15      	ldr	r2, [pc, #84]	; (8000b54 <initialization+0x94c>)
 8000afe:	f443 7388 	orr.w	r3, r3, #272	; 0x110
 8000b02:	6313      	str	r3, [r2, #48]	; 0x30
	LTDC_Layer2->CR |= LTDC_LxCR_LEN;
 8000b04:	4b13      	ldr	r3, [pc, #76]	; (8000b54 <initialization+0x94c>)
 8000b06:	681b      	ldr	r3, [r3, #0]
 8000b08:	4a12      	ldr	r2, [pc, #72]	; (8000b54 <initialization+0x94c>)
 8000b0a:	f043 0301 	orr.w	r3, r3, #1
 8000b0e:	6013      	str	r3, [r2, #0]
	LTDC->SRCR |= LTDC_SRCR_VBR;
 8000b10:	4b0b      	ldr	r3, [pc, #44]	; (8000b40 <initialization+0x938>)
 8000b12:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000b14:	4a0a      	ldr	r2, [pc, #40]	; (8000b40 <initialization+0x938>)
 8000b16:	f043 0302 	orr.w	r3, r3, #2
 8000b1a:	6253      	str	r3, [r2, #36]	; 0x24
	LTDC->GCR |= LTDC_GCR_LTDCEN;
 8000b1c:	4b08      	ldr	r3, [pc, #32]	; (8000b40 <initialization+0x938>)
 8000b1e:	699b      	ldr	r3, [r3, #24]
 8000b20:	4a07      	ldr	r2, [pc, #28]	; (8000b40 <initialization+0x938>)
 8000b22:	f043 0301 	orr.w	r3, r3, #1
 8000b26:	6193      	str	r3, [r2, #24]
}
 8000b28:	bf00      	nop
 8000b2a:	46bd      	mov	sp, r7
 8000b2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b30:	4770      	bx	lr
 8000b32:	bf00      	nop
 8000b34:	40022000 	.word	0x40022000
 8000b38:	40022800 	.word	0x40022800
 8000b3c:	40020800 	.word	0x40020800
 8000b40:	40016800 	.word	0x40016800
 8000b44:	001d0009 	.word	0x001d0009
 8000b48:	002a000b 	.word	0x002a000b
 8000b4c:	020a011b 	.word	0x020a011b
 8000b50:	022a011d 	.word	0x022a011d
 8000b54:	40016904 	.word	0x40016904
 8000b58:	020a002b 	.word	0x020a002b
 8000b5c:	011b000c 	.word	0x011b000c
 8000b60:	07800783 	.word	0x07800783

08000b64 <change_digit_2>:

void change_digit_2(int poz, int number)
{
 8000b64:	b480      	push	{r7}
 8000b66:	b099      	sub	sp, #100	; 0x64
 8000b68:	af00      	add	r7, sp, #0
 8000b6a:	6078      	str	r0, [r7, #4]
 8000b6c:	6039      	str	r1, [r7, #0]
	int x=0;
 8000b6e:	2300      	movs	r3, #0
 8000b70:	65fb      	str	r3, [r7, #92]	; 0x5c
	int k=0;
 8000b72:	2300      	movs	r3, #0
 8000b74:	65bb      	str	r3, [r7, #88]	; 0x58

	if(poz==1)
 8000b76:	687b      	ldr	r3, [r7, #4]
 8000b78:	2b01      	cmp	r3, #1
 8000b7a:	d101      	bne.n	8000b80 <change_digit_2+0x1c>
		x = 0;
 8000b7c:	2300      	movs	r3, #0
 8000b7e:	65fb      	str	r3, [r7, #92]	; 0x5c
	if(poz==2)
 8000b80:	687b      	ldr	r3, [r7, #4]
 8000b82:	2b02      	cmp	r3, #2
 8000b84:	d101      	bne.n	8000b8a <change_digit_2+0x26>
		x = 110;
 8000b86:	236e      	movs	r3, #110	; 0x6e
 8000b88:	65fb      	str	r3, [r7, #92]	; 0x5c
	if(poz==3)
 8000b8a:	687b      	ldr	r3, [r7, #4]
 8000b8c:	2b03      	cmp	r3, #3
 8000b8e:	d101      	bne.n	8000b94 <change_digit_2+0x30>
		x = 246;
 8000b90:	23f6      	movs	r3, #246	; 0xf6
 8000b92:	65fb      	str	r3, [r7, #92]	; 0x5c
	if(poz==4)
 8000b94:	687b      	ldr	r3, [r7, #4]
 8000b96:	2b04      	cmp	r3, #4
 8000b98:	d102      	bne.n	8000ba0 <change_digit_2+0x3c>
		x = 356;
 8000b9a:	f44f 73b2 	mov.w	r3, #356	; 0x164
 8000b9e:	65fb      	str	r3, [r7, #92]	; 0x5c

	if(number==0)
 8000ba0:	683b      	ldr	r3, [r7, #0]
 8000ba2:	2b00      	cmp	r3, #0
 8000ba4:	d126      	bne.n	8000bf4 <change_digit_2+0x90>
		for(int i = 0; i <= 173; ++i)
 8000ba6:	2300      	movs	r3, #0
 8000ba8:	657b      	str	r3, [r7, #84]	; 0x54
 8000baa:	e020      	b.n	8000bee <change_digit_2+0x8a>
			for(int j = 0; j <= 98; ++j)
 8000bac:	2300      	movs	r3, #0
 8000bae:	653b      	str	r3, [r7, #80]	; 0x50
 8000bb0:	e017      	b.n	8000be2 <change_digit_2+0x7e>
				screen[x+42253+i*480+j] = zero_picture_2[k++];
 8000bb2:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8000bb4:	1c4b      	adds	r3, r1, #1
 8000bb6:	65bb      	str	r3, [r7, #88]	; 0x58
 8000bb8:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000bba:	f24a 520d 	movw	r2, #42253	; 0xa50d
 8000bbe:	441a      	add	r2, r3
 8000bc0:	6d78      	ldr	r0, [r7, #84]	; 0x54
 8000bc2:	4603      	mov	r3, r0
 8000bc4:	011b      	lsls	r3, r3, #4
 8000bc6:	1a1b      	subs	r3, r3, r0
 8000bc8:	015b      	lsls	r3, r3, #5
 8000bca:	441a      	add	r2, r3
 8000bcc:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000bce:	4413      	add	r3, r2
 8000bd0:	4aa0      	ldr	r2, [pc, #640]	; (8000e54 <change_digit_2+0x2f0>)
 8000bd2:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8000bd6:	4aa0      	ldr	r2, [pc, #640]	; (8000e58 <change_digit_2+0x2f4>)
 8000bd8:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int j = 0; j <= 98; ++j)
 8000bdc:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000bde:	3301      	adds	r3, #1
 8000be0:	653b      	str	r3, [r7, #80]	; 0x50
 8000be2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000be4:	2b62      	cmp	r3, #98	; 0x62
 8000be6:	dde4      	ble.n	8000bb2 <change_digit_2+0x4e>
		for(int i = 0; i <= 173; ++i)
 8000be8:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8000bea:	3301      	adds	r3, #1
 8000bec:	657b      	str	r3, [r7, #84]	; 0x54
 8000bee:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8000bf0:	2bad      	cmp	r3, #173	; 0xad
 8000bf2:	dddb      	ble.n	8000bac <change_digit_2+0x48>
	if(number==1)
 8000bf4:	683b      	ldr	r3, [r7, #0]
 8000bf6:	2b01      	cmp	r3, #1
 8000bf8:	d126      	bne.n	8000c48 <change_digit_2+0xe4>
		for(int i = 0; i <= 173; ++i)
 8000bfa:	2300      	movs	r3, #0
 8000bfc:	64fb      	str	r3, [r7, #76]	; 0x4c
 8000bfe:	e020      	b.n	8000c42 <change_digit_2+0xde>
			for(int j = 0; j <= 98; ++j)
 8000c00:	2300      	movs	r3, #0
 8000c02:	64bb      	str	r3, [r7, #72]	; 0x48
 8000c04:	e017      	b.n	8000c36 <change_digit_2+0xd2>
				screen[x+42253+i*480+j] = one_picture_2[k++];
 8000c06:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8000c08:	1c4b      	adds	r3, r1, #1
 8000c0a:	65bb      	str	r3, [r7, #88]	; 0x58
 8000c0c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000c0e:	f24a 520d 	movw	r2, #42253	; 0xa50d
 8000c12:	441a      	add	r2, r3
 8000c14:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8000c16:	4603      	mov	r3, r0
 8000c18:	011b      	lsls	r3, r3, #4
 8000c1a:	1a1b      	subs	r3, r3, r0
 8000c1c:	015b      	lsls	r3, r3, #5
 8000c1e:	441a      	add	r2, r3
 8000c20:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8000c22:	4413      	add	r3, r2
 8000c24:	4a8d      	ldr	r2, [pc, #564]	; (8000e5c <change_digit_2+0x2f8>)
 8000c26:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8000c2a:	4a8b      	ldr	r2, [pc, #556]	; (8000e58 <change_digit_2+0x2f4>)
 8000c2c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int j = 0; j <= 98; ++j)
 8000c30:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8000c32:	3301      	adds	r3, #1
 8000c34:	64bb      	str	r3, [r7, #72]	; 0x48
 8000c36:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8000c38:	2b62      	cmp	r3, #98	; 0x62
 8000c3a:	dde4      	ble.n	8000c06 <change_digit_2+0xa2>
		for(int i = 0; i <= 173; ++i)
 8000c3c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8000c3e:	3301      	adds	r3, #1
 8000c40:	64fb      	str	r3, [r7, #76]	; 0x4c
 8000c42:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8000c44:	2bad      	cmp	r3, #173	; 0xad
 8000c46:	dddb      	ble.n	8000c00 <change_digit_2+0x9c>
	if(number==2)
 8000c48:	683b      	ldr	r3, [r7, #0]
 8000c4a:	2b02      	cmp	r3, #2
 8000c4c:	d126      	bne.n	8000c9c <change_digit_2+0x138>
		for(int i = 0; i <= 173; ++i)
 8000c4e:	2300      	movs	r3, #0
 8000c50:	647b      	str	r3, [r7, #68]	; 0x44
 8000c52:	e020      	b.n	8000c96 <change_digit_2+0x132>
			for(int j = 0; j <= 98; ++j)
 8000c54:	2300      	movs	r3, #0
 8000c56:	643b      	str	r3, [r7, #64]	; 0x40
 8000c58:	e017      	b.n	8000c8a <change_digit_2+0x126>
				screen[x+42253+i*480+j] = two_picture_2[k++];
 8000c5a:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8000c5c:	1c4b      	adds	r3, r1, #1
 8000c5e:	65bb      	str	r3, [r7, #88]	; 0x58
 8000c60:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000c62:	f24a 520d 	movw	r2, #42253	; 0xa50d
 8000c66:	441a      	add	r2, r3
 8000c68:	6c78      	ldr	r0, [r7, #68]	; 0x44
 8000c6a:	4603      	mov	r3, r0
 8000c6c:	011b      	lsls	r3, r3, #4
 8000c6e:	1a1b      	subs	r3, r3, r0
 8000c70:	015b      	lsls	r3, r3, #5
 8000c72:	441a      	add	r2, r3
 8000c74:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8000c76:	4413      	add	r3, r2
 8000c78:	4a79      	ldr	r2, [pc, #484]	; (8000e60 <change_digit_2+0x2fc>)
 8000c7a:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8000c7e:	4a76      	ldr	r2, [pc, #472]	; (8000e58 <change_digit_2+0x2f4>)
 8000c80:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int j = 0; j <= 98; ++j)
 8000c84:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8000c86:	3301      	adds	r3, #1
 8000c88:	643b      	str	r3, [r7, #64]	; 0x40
 8000c8a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8000c8c:	2b62      	cmp	r3, #98	; 0x62
 8000c8e:	dde4      	ble.n	8000c5a <change_digit_2+0xf6>
		for(int i = 0; i <= 173; ++i)
 8000c90:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8000c92:	3301      	adds	r3, #1
 8000c94:	647b      	str	r3, [r7, #68]	; 0x44
 8000c96:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8000c98:	2bad      	cmp	r3, #173	; 0xad
 8000c9a:	dddb      	ble.n	8000c54 <change_digit_2+0xf0>
	if(number==3)
 8000c9c:	683b      	ldr	r3, [r7, #0]
 8000c9e:	2b03      	cmp	r3, #3
 8000ca0:	d126      	bne.n	8000cf0 <change_digit_2+0x18c>
		for(int i = 0; i <= 173; ++i)
 8000ca2:	2300      	movs	r3, #0
 8000ca4:	63fb      	str	r3, [r7, #60]	; 0x3c
 8000ca6:	e020      	b.n	8000cea <change_digit_2+0x186>
			for(int j = 0; j <= 98; ++j)
 8000ca8:	2300      	movs	r3, #0
 8000caa:	63bb      	str	r3, [r7, #56]	; 0x38
 8000cac:	e017      	b.n	8000cde <change_digit_2+0x17a>
				screen[x+42253+i*480+j] = three_picture_2[k++];
 8000cae:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8000cb0:	1c4b      	adds	r3, r1, #1
 8000cb2:	65bb      	str	r3, [r7, #88]	; 0x58
 8000cb4:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000cb6:	f24a 520d 	movw	r2, #42253	; 0xa50d
 8000cba:	441a      	add	r2, r3
 8000cbc:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 8000cbe:	4603      	mov	r3, r0
 8000cc0:	011b      	lsls	r3, r3, #4
 8000cc2:	1a1b      	subs	r3, r3, r0
 8000cc4:	015b      	lsls	r3, r3, #5
 8000cc6:	441a      	add	r2, r3
 8000cc8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000cca:	4413      	add	r3, r2
 8000ccc:	4a65      	ldr	r2, [pc, #404]	; (8000e64 <change_digit_2+0x300>)
 8000cce:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8000cd2:	4a61      	ldr	r2, [pc, #388]	; (8000e58 <change_digit_2+0x2f4>)
 8000cd4:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int j = 0; j <= 98; ++j)
 8000cd8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000cda:	3301      	adds	r3, #1
 8000cdc:	63bb      	str	r3, [r7, #56]	; 0x38
 8000cde:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000ce0:	2b62      	cmp	r3, #98	; 0x62
 8000ce2:	dde4      	ble.n	8000cae <change_digit_2+0x14a>
		for(int i = 0; i <= 173; ++i)
 8000ce4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8000ce6:	3301      	adds	r3, #1
 8000ce8:	63fb      	str	r3, [r7, #60]	; 0x3c
 8000cea:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8000cec:	2bad      	cmp	r3, #173	; 0xad
 8000cee:	dddb      	ble.n	8000ca8 <change_digit_2+0x144>
	if(number==4)
 8000cf0:	683b      	ldr	r3, [r7, #0]
 8000cf2:	2b04      	cmp	r3, #4
 8000cf4:	d126      	bne.n	8000d44 <change_digit_2+0x1e0>
		for(int i = 0; i <= 173; ++i)
 8000cf6:	2300      	movs	r3, #0
 8000cf8:	637b      	str	r3, [r7, #52]	; 0x34
 8000cfa:	e020      	b.n	8000d3e <change_digit_2+0x1da>
			for(int j = 0; j <= 98; ++j)
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	633b      	str	r3, [r7, #48]	; 0x30
 8000d00:	e017      	b.n	8000d32 <change_digit_2+0x1ce>
				screen[x+42253+i*480+j] = four_picture_2[k++];
 8000d02:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8000d04:	1c4b      	adds	r3, r1, #1
 8000d06:	65bb      	str	r3, [r7, #88]	; 0x58
 8000d08:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000d0a:	f24a 520d 	movw	r2, #42253	; 0xa50d
 8000d0e:	441a      	add	r2, r3
 8000d10:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8000d12:	4603      	mov	r3, r0
 8000d14:	011b      	lsls	r3, r3, #4
 8000d16:	1a1b      	subs	r3, r3, r0
 8000d18:	015b      	lsls	r3, r3, #5
 8000d1a:	441a      	add	r2, r3
 8000d1c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8000d1e:	4413      	add	r3, r2
 8000d20:	4a51      	ldr	r2, [pc, #324]	; (8000e68 <change_digit_2+0x304>)
 8000d22:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8000d26:	4a4c      	ldr	r2, [pc, #304]	; (8000e58 <change_digit_2+0x2f4>)
 8000d28:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int j = 0; j <= 98; ++j)
 8000d2c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8000d2e:	3301      	adds	r3, #1
 8000d30:	633b      	str	r3, [r7, #48]	; 0x30
 8000d32:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8000d34:	2b62      	cmp	r3, #98	; 0x62
 8000d36:	dde4      	ble.n	8000d02 <change_digit_2+0x19e>
		for(int i = 0; i <= 173; ++i)
 8000d38:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000d3a:	3301      	adds	r3, #1
 8000d3c:	637b      	str	r3, [r7, #52]	; 0x34
 8000d3e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000d40:	2bad      	cmp	r3, #173	; 0xad
 8000d42:	dddb      	ble.n	8000cfc <change_digit_2+0x198>
	if(number==5)
 8000d44:	683b      	ldr	r3, [r7, #0]
 8000d46:	2b05      	cmp	r3, #5
 8000d48:	d126      	bne.n	8000d98 <change_digit_2+0x234>
		for(int i = 0; i <= 173; ++i)
 8000d4a:	2300      	movs	r3, #0
 8000d4c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000d4e:	e020      	b.n	8000d92 <change_digit_2+0x22e>
			for(int j = 0; j <= 98; ++j)
 8000d50:	2300      	movs	r3, #0
 8000d52:	62bb      	str	r3, [r7, #40]	; 0x28
 8000d54:	e017      	b.n	8000d86 <change_digit_2+0x222>
				screen[x+42253+i*480+j] = five_picture_2[k++];
 8000d56:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8000d58:	1c4b      	adds	r3, r1, #1
 8000d5a:	65bb      	str	r3, [r7, #88]	; 0x58
 8000d5c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000d5e:	f24a 520d 	movw	r2, #42253	; 0xa50d
 8000d62:	441a      	add	r2, r3
 8000d64:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8000d66:	4603      	mov	r3, r0
 8000d68:	011b      	lsls	r3, r3, #4
 8000d6a:	1a1b      	subs	r3, r3, r0
 8000d6c:	015b      	lsls	r3, r3, #5
 8000d6e:	441a      	add	r2, r3
 8000d70:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000d72:	4413      	add	r3, r2
 8000d74:	4a3d      	ldr	r2, [pc, #244]	; (8000e6c <change_digit_2+0x308>)
 8000d76:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8000d7a:	4a37      	ldr	r2, [pc, #220]	; (8000e58 <change_digit_2+0x2f4>)
 8000d7c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int j = 0; j <= 98; ++j)
 8000d80:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000d82:	3301      	adds	r3, #1
 8000d84:	62bb      	str	r3, [r7, #40]	; 0x28
 8000d86:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000d88:	2b62      	cmp	r3, #98	; 0x62
 8000d8a:	dde4      	ble.n	8000d56 <change_digit_2+0x1f2>
		for(int i = 0; i <= 173; ++i)
 8000d8c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000d8e:	3301      	adds	r3, #1
 8000d90:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000d92:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000d94:	2bad      	cmp	r3, #173	; 0xad
 8000d96:	dddb      	ble.n	8000d50 <change_digit_2+0x1ec>
	if(number==6)
 8000d98:	683b      	ldr	r3, [r7, #0]
 8000d9a:	2b06      	cmp	r3, #6
 8000d9c:	d126      	bne.n	8000dec <change_digit_2+0x288>
		for(int i = 0; i <= 173; ++i)
 8000d9e:	2300      	movs	r3, #0
 8000da0:	627b      	str	r3, [r7, #36]	; 0x24
 8000da2:	e020      	b.n	8000de6 <change_digit_2+0x282>
			for(int j = 0; j <= 98; ++j)
 8000da4:	2300      	movs	r3, #0
 8000da6:	623b      	str	r3, [r7, #32]
 8000da8:	e017      	b.n	8000dda <change_digit_2+0x276>
				screen[x+42253+i*480+j] = six_picture_2[k++];
 8000daa:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8000dac:	1c4b      	adds	r3, r1, #1
 8000dae:	65bb      	str	r3, [r7, #88]	; 0x58
 8000db0:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000db2:	f24a 520d 	movw	r2, #42253	; 0xa50d
 8000db6:	441a      	add	r2, r3
 8000db8:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8000dba:	4603      	mov	r3, r0
 8000dbc:	011b      	lsls	r3, r3, #4
 8000dbe:	1a1b      	subs	r3, r3, r0
 8000dc0:	015b      	lsls	r3, r3, #5
 8000dc2:	441a      	add	r2, r3
 8000dc4:	6a3b      	ldr	r3, [r7, #32]
 8000dc6:	4413      	add	r3, r2
 8000dc8:	4a29      	ldr	r2, [pc, #164]	; (8000e70 <change_digit_2+0x30c>)
 8000dca:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8000dce:	4a22      	ldr	r2, [pc, #136]	; (8000e58 <change_digit_2+0x2f4>)
 8000dd0:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int j = 0; j <= 98; ++j)
 8000dd4:	6a3b      	ldr	r3, [r7, #32]
 8000dd6:	3301      	adds	r3, #1
 8000dd8:	623b      	str	r3, [r7, #32]
 8000dda:	6a3b      	ldr	r3, [r7, #32]
 8000ddc:	2b62      	cmp	r3, #98	; 0x62
 8000dde:	dde4      	ble.n	8000daa <change_digit_2+0x246>
		for(int i = 0; i <= 173; ++i)
 8000de0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000de2:	3301      	adds	r3, #1
 8000de4:	627b      	str	r3, [r7, #36]	; 0x24
 8000de6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000de8:	2bad      	cmp	r3, #173	; 0xad
 8000dea:	dddb      	ble.n	8000da4 <change_digit_2+0x240>
	if(number==7)
 8000dec:	683b      	ldr	r3, [r7, #0]
 8000dee:	2b07      	cmp	r3, #7
 8000df0:	d126      	bne.n	8000e40 <change_digit_2+0x2dc>
		for(int i = 0; i <= 173; ++i)
 8000df2:	2300      	movs	r3, #0
 8000df4:	61fb      	str	r3, [r7, #28]
 8000df6:	e020      	b.n	8000e3a <change_digit_2+0x2d6>
			for(int j = 0; j <= 98; ++j)
 8000df8:	2300      	movs	r3, #0
 8000dfa:	61bb      	str	r3, [r7, #24]
 8000dfc:	e017      	b.n	8000e2e <change_digit_2+0x2ca>
				screen[x+42253+i*480+j] = seven_picture_2[k++];
 8000dfe:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8000e00:	1c4b      	adds	r3, r1, #1
 8000e02:	65bb      	str	r3, [r7, #88]	; 0x58
 8000e04:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000e06:	f24a 520d 	movw	r2, #42253	; 0xa50d
 8000e0a:	441a      	add	r2, r3
 8000e0c:	69f8      	ldr	r0, [r7, #28]
 8000e0e:	4603      	mov	r3, r0
 8000e10:	011b      	lsls	r3, r3, #4
 8000e12:	1a1b      	subs	r3, r3, r0
 8000e14:	015b      	lsls	r3, r3, #5
 8000e16:	441a      	add	r2, r3
 8000e18:	69bb      	ldr	r3, [r7, #24]
 8000e1a:	4413      	add	r3, r2
 8000e1c:	4a15      	ldr	r2, [pc, #84]	; (8000e74 <change_digit_2+0x310>)
 8000e1e:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8000e22:	4a0d      	ldr	r2, [pc, #52]	; (8000e58 <change_digit_2+0x2f4>)
 8000e24:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int j = 0; j <= 98; ++j)
 8000e28:	69bb      	ldr	r3, [r7, #24]
 8000e2a:	3301      	adds	r3, #1
 8000e2c:	61bb      	str	r3, [r7, #24]
 8000e2e:	69bb      	ldr	r3, [r7, #24]
 8000e30:	2b62      	cmp	r3, #98	; 0x62
 8000e32:	dde4      	ble.n	8000dfe <change_digit_2+0x29a>
		for(int i = 0; i <= 173; ++i)
 8000e34:	69fb      	ldr	r3, [r7, #28]
 8000e36:	3301      	adds	r3, #1
 8000e38:	61fb      	str	r3, [r7, #28]
 8000e3a:	69fb      	ldr	r3, [r7, #28]
 8000e3c:	2bad      	cmp	r3, #173	; 0xad
 8000e3e:	dddb      	ble.n	8000df8 <change_digit_2+0x294>
	if(number==8)
 8000e40:	683b      	ldr	r3, [r7, #0]
 8000e42:	2b08      	cmp	r3, #8
 8000e44:	d139      	bne.n	8000eba <change_digit_2+0x356>
		for(int i = 0; i <= 173; ++i)
 8000e46:	2300      	movs	r3, #0
 8000e48:	617b      	str	r3, [r7, #20]
 8000e4a:	e033      	b.n	8000eb4 <change_digit_2+0x350>
			for(int j = 0; j <= 98; ++j)
 8000e4c:	2300      	movs	r3, #0
 8000e4e:	613b      	str	r3, [r7, #16]
 8000e50:	e02a      	b.n	8000ea8 <change_digit_2+0x344>
 8000e52:	bf00      	nop
 8000e54:	08044710 	.word	0x08044710
 8000e58:	2000001c 	.word	0x2000001c
 8000e5c:	0801a62c 	.word	0x0801a62c
 8000e60:	0803c07c 	.word	0x0803c07c
 8000e64:	080339e8 	.word	0x080339e8
 8000e68:	08009904 	.word	0x08009904
 8000e6c:	08001270 	.word	0x08001270
 8000e70:	0802b354 	.word	0x0802b354
 8000e74:	08022cc0 	.word	0x08022cc0
				screen[x+42253+i*480+j] = eigth_picture_2[k++];
 8000e78:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8000e7a:	1c4b      	adds	r3, r1, #1
 8000e7c:	65bb      	str	r3, [r7, #88]	; 0x58
 8000e7e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000e80:	f24a 520d 	movw	r2, #42253	; 0xa50d
 8000e84:	441a      	add	r2, r3
 8000e86:	6978      	ldr	r0, [r7, #20]
 8000e88:	4603      	mov	r3, r0
 8000e8a:	011b      	lsls	r3, r3, #4
 8000e8c:	1a1b      	subs	r3, r3, r0
 8000e8e:	015b      	lsls	r3, r3, #5
 8000e90:	441a      	add	r2, r3
 8000e92:	693b      	ldr	r3, [r7, #16]
 8000e94:	4413      	add	r3, r2
 8000e96:	4a25      	ldr	r2, [pc, #148]	; (8000f2c <change_digit_2+0x3c8>)
 8000e98:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8000e9c:	4a24      	ldr	r2, [pc, #144]	; (8000f30 <change_digit_2+0x3cc>)
 8000e9e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int j = 0; j <= 98; ++j)
 8000ea2:	693b      	ldr	r3, [r7, #16]
 8000ea4:	3301      	adds	r3, #1
 8000ea6:	613b      	str	r3, [r7, #16]
 8000ea8:	693b      	ldr	r3, [r7, #16]
 8000eaa:	2b62      	cmp	r3, #98	; 0x62
 8000eac:	dde4      	ble.n	8000e78 <change_digit_2+0x314>
		for(int i = 0; i <= 173; ++i)
 8000eae:	697b      	ldr	r3, [r7, #20]
 8000eb0:	3301      	adds	r3, #1
 8000eb2:	617b      	str	r3, [r7, #20]
 8000eb4:	697b      	ldr	r3, [r7, #20]
 8000eb6:	2bad      	cmp	r3, #173	; 0xad
 8000eb8:	ddc8      	ble.n	8000e4c <change_digit_2+0x2e8>
	if(number==9)
 8000eba:	683b      	ldr	r3, [r7, #0]
 8000ebc:	2b09      	cmp	r3, #9
 8000ebe:	d126      	bne.n	8000f0e <change_digit_2+0x3aa>
		for(int i = 0; i <= 173; ++i)
 8000ec0:	2300      	movs	r3, #0
 8000ec2:	60fb      	str	r3, [r7, #12]
 8000ec4:	e020      	b.n	8000f08 <change_digit_2+0x3a4>
			for(int j = 0; j <= 98; ++j)
 8000ec6:	2300      	movs	r3, #0
 8000ec8:	60bb      	str	r3, [r7, #8]
 8000eca:	e017      	b.n	8000efc <change_digit_2+0x398>
				screen[x+42253+i*480+j] = nine_picture_2[k++];
 8000ecc:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8000ece:	1c4b      	adds	r3, r1, #1
 8000ed0:	65bb      	str	r3, [r7, #88]	; 0x58
 8000ed2:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8000ed4:	f24a 520d 	movw	r2, #42253	; 0xa50d
 8000ed8:	441a      	add	r2, r3
 8000eda:	68f8      	ldr	r0, [r7, #12]
 8000edc:	4603      	mov	r3, r0
 8000ede:	011b      	lsls	r3, r3, #4
 8000ee0:	1a1b      	subs	r3, r3, r0
 8000ee2:	015b      	lsls	r3, r3, #5
 8000ee4:	441a      	add	r2, r3
 8000ee6:	68bb      	ldr	r3, [r7, #8]
 8000ee8:	4413      	add	r3, r2
 8000eea:	4a12      	ldr	r2, [pc, #72]	; (8000f34 <change_digit_2+0x3d0>)
 8000eec:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8000ef0:	4a0f      	ldr	r2, [pc, #60]	; (8000f30 <change_digit_2+0x3cc>)
 8000ef2:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
			for(int j = 0; j <= 98; ++j)
 8000ef6:	68bb      	ldr	r3, [r7, #8]
 8000ef8:	3301      	adds	r3, #1
 8000efa:	60bb      	str	r3, [r7, #8]
 8000efc:	68bb      	ldr	r3, [r7, #8]
 8000efe:	2b62      	cmp	r3, #98	; 0x62
 8000f00:	dde4      	ble.n	8000ecc <change_digit_2+0x368>
		for(int i = 0; i <= 173; ++i)
 8000f02:	68fb      	ldr	r3, [r7, #12]
 8000f04:	3301      	adds	r3, #1
 8000f06:	60fb      	str	r3, [r7, #12]
 8000f08:	68fb      	ldr	r3, [r7, #12]
 8000f0a:	2bad      	cmp	r3, #173	; 0xad
 8000f0c:	dddb      	ble.n	8000ec6 <change_digit_2+0x362>
	LTDC_Layer2->CFBAR = (uint32_t)screen;
 8000f0e:	4b0a      	ldr	r3, [pc, #40]	; (8000f38 <change_digit_2+0x3d4>)
 8000f10:	4a07      	ldr	r2, [pc, #28]	; (8000f30 <change_digit_2+0x3cc>)
 8000f12:	629a      	str	r2, [r3, #40]	; 0x28
	LTDC->SRCR |= LTDC_SRCR_VBR;
 8000f14:	4b09      	ldr	r3, [pc, #36]	; (8000f3c <change_digit_2+0x3d8>)
 8000f16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000f18:	4a08      	ldr	r2, [pc, #32]	; (8000f3c <change_digit_2+0x3d8>)
 8000f1a:	f043 0302 	orr.w	r3, r3, #2
 8000f1e:	6253      	str	r3, [r2, #36]	; 0x24
}
 8000f20:	bf00      	nop
 8000f22:	3764      	adds	r7, #100	; 0x64
 8000f24:	46bd      	mov	sp, r7
 8000f26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f2a:	4770      	bx	lr
 8000f2c:	0804cda4 	.word	0x0804cda4
 8000f30:	2000001c 	.word	0x2000001c
 8000f34:	08011f98 	.word	0x08011f98
 8000f38:	40016904 	.word	0x40016904
 8000f3c:	40016800 	.word	0x40016800

08000f40 <SysTick_Handler>:

void SysTick_Handler(void)
{
 8000f40:	b580      	push	{r7, lr}
 8000f42:	af00      	add	r7, sp, #0
	++cnt;
 8000f44:	4b2f      	ldr	r3, [pc, #188]	; (8001004 <SysTick_Handler+0xc4>)
 8000f46:	681b      	ldr	r3, [r3, #0]
 8000f48:	3301      	adds	r3, #1
 8000f4a:	4a2e      	ldr	r2, [pc, #184]	; (8001004 <SysTick_Handler+0xc4>)
 8000f4c:	6013      	str	r3, [r2, #0]
	if(cnt == 3600000)
 8000f4e:	4b2d      	ldr	r3, [pc, #180]	; (8001004 <SysTick_Handler+0xc4>)
 8000f50:	681b      	ldr	r3, [r3, #0]
 8000f52:	4a2d      	ldr	r2, [pc, #180]	; (8001008 <SysTick_Handler+0xc8>)
 8000f54:	4293      	cmp	r3, r2
 8000f56:	d153      	bne.n	8001000 <SysTick_Handler+0xc0>
	{
		cnt = 0;
 8000f58:	4b2a      	ldr	r3, [pc, #168]	; (8001004 <SysTick_Handler+0xc4>)
 8000f5a:	2200      	movs	r2, #0
 8000f5c:	601a      	str	r2, [r3, #0]
		++minute;
 8000f5e:	4b2b      	ldr	r3, [pc, #172]	; (800100c <SysTick_Handler+0xcc>)
 8000f60:	781b      	ldrb	r3, [r3, #0]
 8000f62:	3301      	adds	r3, #1
 8000f64:	b2da      	uxtb	r2, r3
 8000f66:	4b29      	ldr	r3, [pc, #164]	; (800100c <SysTick_Handler+0xcc>)
 8000f68:	701a      	strb	r2, [r3, #0]
		if(minute == 10)
 8000f6a:	4b28      	ldr	r3, [pc, #160]	; (800100c <SysTick_Handler+0xcc>)
 8000f6c:	781b      	ldrb	r3, [r3, #0]
 8000f6e:	2b0a      	cmp	r3, #10
 8000f70:	d140      	bne.n	8000ff4 <SysTick_Handler+0xb4>
		{
			minute = 0;
 8000f72:	4b26      	ldr	r3, [pc, #152]	; (800100c <SysTick_Handler+0xcc>)
 8000f74:	2200      	movs	r2, #0
 8000f76:	701a      	strb	r2, [r3, #0]
			++minute_2;
 8000f78:	4b25      	ldr	r3, [pc, #148]	; (8001010 <SysTick_Handler+0xd0>)
 8000f7a:	781b      	ldrb	r3, [r3, #0]
 8000f7c:	3301      	adds	r3, #1
 8000f7e:	b2da      	uxtb	r2, r3
 8000f80:	4b23      	ldr	r3, [pc, #140]	; (8001010 <SysTick_Handler+0xd0>)
 8000f82:	701a      	strb	r2, [r3, #0]
			change_digit_2(3,minute_2);
 8000f84:	4b22      	ldr	r3, [pc, #136]	; (8001010 <SysTick_Handler+0xd0>)
 8000f86:	781b      	ldrb	r3, [r3, #0]
 8000f88:	4619      	mov	r1, r3
 8000f8a:	2003      	movs	r0, #3
 8000f8c:	f7ff fdea 	bl	8000b64 <change_digit_2>
			if(minute_2 == 6)
 8000f90:	4b1f      	ldr	r3, [pc, #124]	; (8001010 <SysTick_Handler+0xd0>)
 8000f92:	781b      	ldrb	r3, [r3, #0]
 8000f94:	2b06      	cmp	r3, #6
 8000f96:	d129      	bne.n	8000fec <SysTick_Handler+0xac>
			{
				minute_2 = 0;
 8000f98:	4b1d      	ldr	r3, [pc, #116]	; (8001010 <SysTick_Handler+0xd0>)
 8000f9a:	2200      	movs	r2, #0
 8000f9c:	701a      	strb	r2, [r3, #0]
				++hour;
 8000f9e:	4b1d      	ldr	r3, [pc, #116]	; (8001014 <SysTick_Handler+0xd4>)
 8000fa0:	781b      	ldrb	r3, [r3, #0]
 8000fa2:	3301      	adds	r3, #1
 8000fa4:	b2da      	uxtb	r2, r3
 8000fa6:	4b1b      	ldr	r3, [pc, #108]	; (8001014 <SysTick_Handler+0xd4>)
 8000fa8:	701a      	strb	r2, [r3, #0]
				change_digit_2(2,hour);
 8000faa:	4b1a      	ldr	r3, [pc, #104]	; (8001014 <SysTick_Handler+0xd4>)
 8000fac:	781b      	ldrb	r3, [r3, #0]
 8000fae:	4619      	mov	r1, r3
 8000fb0:	2002      	movs	r0, #2
 8000fb2:	f7ff fdd7 	bl	8000b64 <change_digit_2>
				if(hour == 10)
 8000fb6:	4b17      	ldr	r3, [pc, #92]	; (8001014 <SysTick_Handler+0xd4>)
 8000fb8:	781b      	ldrb	r3, [r3, #0]
 8000fba:	2b0a      	cmp	r3, #10
 8000fbc:	d112      	bne.n	8000fe4 <SysTick_Handler+0xa4>
				{
					hour = 0;
 8000fbe:	4b15      	ldr	r3, [pc, #84]	; (8001014 <SysTick_Handler+0xd4>)
 8000fc0:	2200      	movs	r2, #0
 8000fc2:	701a      	strb	r2, [r3, #0]
					++hour_2;
 8000fc4:	4b14      	ldr	r3, [pc, #80]	; (8001018 <SysTick_Handler+0xd8>)
 8000fc6:	781b      	ldrb	r3, [r3, #0]
 8000fc8:	3301      	adds	r3, #1
 8000fca:	b2da      	uxtb	r2, r3
 8000fcc:	4b12      	ldr	r3, [pc, #72]	; (8001018 <SysTick_Handler+0xd8>)
 8000fce:	701a      	strb	r2, [r3, #0]
					change_digit_2(1,hour_2);
 8000fd0:	4b11      	ldr	r3, [pc, #68]	; (8001018 <SysTick_Handler+0xd8>)
 8000fd2:	781b      	ldrb	r3, [r3, #0]
 8000fd4:	4619      	mov	r1, r3
 8000fd6:	2001      	movs	r0, #1
 8000fd8:	f7ff fdc4 	bl	8000b64 <change_digit_2>
					change_digit_2(2,0);
 8000fdc:	2100      	movs	r1, #0
 8000fde:	2002      	movs	r0, #2
 8000fe0:	f7ff fdc0 	bl	8000b64 <change_digit_2>
				}
				change_digit_2(3,0);
 8000fe4:	2100      	movs	r1, #0
 8000fe6:	2003      	movs	r0, #3
 8000fe8:	f7ff fdbc 	bl	8000b64 <change_digit_2>
			}
			change_digit_2(4,0);
 8000fec:	2100      	movs	r1, #0
 8000fee:	2004      	movs	r0, #4
 8000ff0:	f7ff fdb8 	bl	8000b64 <change_digit_2>
		}
		change_digit_2(4,minute);
 8000ff4:	4b05      	ldr	r3, [pc, #20]	; (800100c <SysTick_Handler+0xcc>)
 8000ff6:	781b      	ldrb	r3, [r3, #0]
 8000ff8:	4619      	mov	r1, r3
 8000ffa:	2004      	movs	r0, #4
 8000ffc:	f7ff fdb2 	bl	8000b64 <change_digit_2>
	}
}
 8001000:	bf00      	nop
 8001002:	bd80      	pop	{r7, pc}
 8001004:	2003fc1c 	.word	0x2003fc1c
 8001008:	0036ee80 	.word	0x0036ee80
 800100c:	2003fc20 	.word	0x2003fc20
 8001010:	2003fc21 	.word	0x2003fc21
 8001014:	2003fc22 	.word	0x2003fc22
 8001018:	2003fc23 	.word	0x2003fc23

0800101c <main>:

int main(void)
{
 800101c:	b580      	push	{r7, lr}
 800101e:	b084      	sub	sp, #16
 8001020:	af00      	add	r7, sp, #0
	initialization();
 8001022:	f7ff f8f1 	bl	8000208 <initialization>
	
	for(int i = 0; i <= 130559; ++i)
 8001026:	2300      	movs	r3, #0
 8001028:	60fb      	str	r3, [r7, #12]
 800102a:	e00a      	b.n	8001042 <main+0x26>
		screen[i] = main_picture[i];
 800102c:	4a54      	ldr	r2, [pc, #336]	; (8001180 <main+0x164>)
 800102e:	68fb      	ldr	r3, [r7, #12]
 8001030:	f832 1013 	ldrh.w	r1, [r2, r3, lsl #1]
 8001034:	4a53      	ldr	r2, [pc, #332]	; (8001184 <main+0x168>)
 8001036:	68fb      	ldr	r3, [r7, #12]
 8001038:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int i = 0; i <= 130559; ++i)
 800103c:	68fb      	ldr	r3, [r7, #12]
 800103e:	3301      	adds	r3, #1
 8001040:	60fb      	str	r3, [r7, #12]
 8001042:	68fb      	ldr	r3, [r7, #12]
 8001044:	f5b3 3fff 	cmp.w	r3, #130560	; 0x1fe00
 8001048:	dbf0      	blt.n	800102c <main+0x10>
	GPIOK->BSRR |= GPIO_BSRR_BS_3; // LED
 800104a:	4b4f      	ldr	r3, [pc, #316]	; (8001188 <main+0x16c>)
 800104c:	699b      	ldr	r3, [r3, #24]
 800104e:	4a4e      	ldr	r2, [pc, #312]	; (8001188 <main+0x16c>)
 8001050:	f043 0308 	orr.w	r3, r3, #8
 8001054:	6193      	str	r3, [r2, #24]

	// Initialization picture
	LTDC_Layer2->CFBAR = (uint32_t)init_picture;
 8001056:	4b4d      	ldr	r3, [pc, #308]	; (800118c <main+0x170>)
 8001058:	4a4d      	ldr	r2, [pc, #308]	; (8001190 <main+0x174>)
 800105a:	629a      	str	r2, [r3, #40]	; 0x28
	LTDC->SRCR |= LTDC_SRCR_VBR;
 800105c:	4b4d      	ldr	r3, [pc, #308]	; (8001194 <main+0x178>)
 800105e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001060:	4a4c      	ldr	r2, [pc, #304]	; (8001194 <main+0x178>)
 8001062:	f043 0302 	orr.w	r3, r3, #2
 8001066:	6253      	str	r3, [r2, #36]	; 0x24
	for(int i = 0; i <= 5000000; ++i);
 8001068:	2300      	movs	r3, #0
 800106a:	60bb      	str	r3, [r7, #8]
 800106c:	e002      	b.n	8001074 <main+0x58>
 800106e:	68bb      	ldr	r3, [r7, #8]
 8001070:	3301      	adds	r3, #1
 8001072:	60bb      	str	r3, [r7, #8]
 8001074:	68bb      	ldr	r3, [r7, #8]
 8001076:	4a48      	ldr	r2, [pc, #288]	; (8001198 <main+0x17c>)
 8001078:	4293      	cmp	r3, r2
 800107a:	ddf8      	ble.n	800106e <main+0x52>

	// Main picture
	LTDC_Layer2->CFBAR = (uint32_t)main_picture;
 800107c:	4b43      	ldr	r3, [pc, #268]	; (800118c <main+0x170>)
 800107e:	4a40      	ldr	r2, [pc, #256]	; (8001180 <main+0x164>)
 8001080:	629a      	str	r2, [r3, #40]	; 0x28
	LTDC->SRCR |= LTDC_SRCR_VBR;
 8001082:	4b44      	ldr	r3, [pc, #272]	; (8001194 <main+0x178>)
 8001084:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001086:	4a43      	ldr	r2, [pc, #268]	; (8001194 <main+0x178>)
 8001088:	f043 0302 	orr.w	r3, r3, #2
 800108c:	6253      	str	r3, [r2, #36]	; 0x24
	
	GPIOC->MODER   |= GPIO_MODER_MODER7_0;
 800108e:	4b43      	ldr	r3, [pc, #268]	; (800119c <main+0x180>)
 8001090:	681b      	ldr	r3, [r3, #0]
 8001092:	4a42      	ldr	r2, [pc, #264]	; (800119c <main+0x180>)
 8001094:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001098:	6013      	str	r3, [r2, #0]

	while(1)
	{
		for(int i = 0; i <= 500000; ++i);
 800109a:	2300      	movs	r3, #0
 800109c:	607b      	str	r3, [r7, #4]
 800109e:	e002      	b.n	80010a6 <main+0x8a>
 80010a0:	687b      	ldr	r3, [r7, #4]
 80010a2:	3301      	adds	r3, #1
 80010a4:	607b      	str	r3, [r7, #4]
 80010a6:	687b      	ldr	r3, [r7, #4]
 80010a8:	4a3d      	ldr	r2, [pc, #244]	; (80011a0 <main+0x184>)
 80010aa:	4293      	cmp	r3, r2
 80010ac:	ddf8      	ble.n	80010a0 <main+0x84>
		GPIOC->BSRR |= GPIO_BSRR_BS_7;
 80010ae:	4b3b      	ldr	r3, [pc, #236]	; (800119c <main+0x180>)
 80010b0:	699b      	ldr	r3, [r3, #24]
 80010b2:	4a3a      	ldr	r2, [pc, #232]	; (800119c <main+0x180>)
 80010b4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80010b8:	6193      	str	r3, [r2, #24]
		cnt = 3600000;
 80010ba:	4b3a      	ldr	r3, [pc, #232]	; (80011a4 <main+0x188>)
 80010bc:	4a3a      	ldr	r2, [pc, #232]	; (80011a8 <main+0x18c>)
 80010be:	601a      	str	r2, [r3, #0]
		if(cnt == 3600000)
 80010c0:	4b38      	ldr	r3, [pc, #224]	; (80011a4 <main+0x188>)
 80010c2:	681b      	ldr	r3, [r3, #0]
 80010c4:	4a38      	ldr	r2, [pc, #224]	; (80011a8 <main+0x18c>)
 80010c6:	4293      	cmp	r3, r2
 80010c8:	d153      	bne.n	8001172 <main+0x156>
		{
			cnt = 0;
 80010ca:	4b36      	ldr	r3, [pc, #216]	; (80011a4 <main+0x188>)
 80010cc:	2200      	movs	r2, #0
 80010ce:	601a      	str	r2, [r3, #0]
			++minute;
 80010d0:	4b36      	ldr	r3, [pc, #216]	; (80011ac <main+0x190>)
 80010d2:	781b      	ldrb	r3, [r3, #0]
 80010d4:	3301      	adds	r3, #1
 80010d6:	b2da      	uxtb	r2, r3
 80010d8:	4b34      	ldr	r3, [pc, #208]	; (80011ac <main+0x190>)
 80010da:	701a      	strb	r2, [r3, #0]
			if(minute == 10)
 80010dc:	4b33      	ldr	r3, [pc, #204]	; (80011ac <main+0x190>)
 80010de:	781b      	ldrb	r3, [r3, #0]
 80010e0:	2b0a      	cmp	r3, #10
 80010e2:	d140      	bne.n	8001166 <main+0x14a>
			{
				minute = 0;
 80010e4:	4b31      	ldr	r3, [pc, #196]	; (80011ac <main+0x190>)
 80010e6:	2200      	movs	r2, #0
 80010e8:	701a      	strb	r2, [r3, #0]
				++minute_2;
 80010ea:	4b31      	ldr	r3, [pc, #196]	; (80011b0 <main+0x194>)
 80010ec:	781b      	ldrb	r3, [r3, #0]
 80010ee:	3301      	adds	r3, #1
 80010f0:	b2da      	uxtb	r2, r3
 80010f2:	4b2f      	ldr	r3, [pc, #188]	; (80011b0 <main+0x194>)
 80010f4:	701a      	strb	r2, [r3, #0]
				change_digit_2(3,minute_2);
 80010f6:	4b2e      	ldr	r3, [pc, #184]	; (80011b0 <main+0x194>)
 80010f8:	781b      	ldrb	r3, [r3, #0]
 80010fa:	4619      	mov	r1, r3
 80010fc:	2003      	movs	r0, #3
 80010fe:	f7ff fd31 	bl	8000b64 <change_digit_2>
				if(minute_2 == 6)
 8001102:	4b2b      	ldr	r3, [pc, #172]	; (80011b0 <main+0x194>)
 8001104:	781b      	ldrb	r3, [r3, #0]
 8001106:	2b06      	cmp	r3, #6
 8001108:	d129      	bne.n	800115e <main+0x142>
				{
					minute_2 = 0;
 800110a:	4b29      	ldr	r3, [pc, #164]	; (80011b0 <main+0x194>)
 800110c:	2200      	movs	r2, #0
 800110e:	701a      	strb	r2, [r3, #0]
					++hour;
 8001110:	4b28      	ldr	r3, [pc, #160]	; (80011b4 <main+0x198>)
 8001112:	781b      	ldrb	r3, [r3, #0]
 8001114:	3301      	adds	r3, #1
 8001116:	b2da      	uxtb	r2, r3
 8001118:	4b26      	ldr	r3, [pc, #152]	; (80011b4 <main+0x198>)
 800111a:	701a      	strb	r2, [r3, #0]
					change_digit_2(2,hour);
 800111c:	4b25      	ldr	r3, [pc, #148]	; (80011b4 <main+0x198>)
 800111e:	781b      	ldrb	r3, [r3, #0]
 8001120:	4619      	mov	r1, r3
 8001122:	2002      	movs	r0, #2
 8001124:	f7ff fd1e 	bl	8000b64 <change_digit_2>
					if(hour == 10)
 8001128:	4b22      	ldr	r3, [pc, #136]	; (80011b4 <main+0x198>)
 800112a:	781b      	ldrb	r3, [r3, #0]
 800112c:	2b0a      	cmp	r3, #10
 800112e:	d112      	bne.n	8001156 <main+0x13a>
					{
						hour = 0;
 8001130:	4b20      	ldr	r3, [pc, #128]	; (80011b4 <main+0x198>)
 8001132:	2200      	movs	r2, #0
 8001134:	701a      	strb	r2, [r3, #0]
						++hour_2;
 8001136:	4b20      	ldr	r3, [pc, #128]	; (80011b8 <main+0x19c>)
 8001138:	781b      	ldrb	r3, [r3, #0]
 800113a:	3301      	adds	r3, #1
 800113c:	b2da      	uxtb	r2, r3
 800113e:	4b1e      	ldr	r3, [pc, #120]	; (80011b8 <main+0x19c>)
 8001140:	701a      	strb	r2, [r3, #0]
						change_digit_2(1,hour_2);
 8001142:	4b1d      	ldr	r3, [pc, #116]	; (80011b8 <main+0x19c>)
 8001144:	781b      	ldrb	r3, [r3, #0]
 8001146:	4619      	mov	r1, r3
 8001148:	2001      	movs	r0, #1
 800114a:	f7ff fd0b 	bl	8000b64 <change_digit_2>
						change_digit_2(2,0);
 800114e:	2100      	movs	r1, #0
 8001150:	2002      	movs	r0, #2
 8001152:	f7ff fd07 	bl	8000b64 <change_digit_2>
					}
					change_digit_2(3,0);
 8001156:	2100      	movs	r1, #0
 8001158:	2003      	movs	r0, #3
 800115a:	f7ff fd03 	bl	8000b64 <change_digit_2>
				}
				change_digit_2(4,0);
 800115e:	2100      	movs	r1, #0
 8001160:	2004      	movs	r0, #4
 8001162:	f7ff fcff 	bl	8000b64 <change_digit_2>
			}
			change_digit_2(4,minute);
 8001166:	4b11      	ldr	r3, [pc, #68]	; (80011ac <main+0x190>)
 8001168:	781b      	ldrb	r3, [r3, #0]
 800116a:	4619      	mov	r1, r3
 800116c:	2004      	movs	r0, #4
 800116e:	f7ff fcf9 	bl	8000b64 <change_digit_2>
		}
		GPIOC->BSRR |= GPIO_BSRR_BR_7;
 8001172:	4b0a      	ldr	r3, [pc, #40]	; (800119c <main+0x180>)
 8001174:	699b      	ldr	r3, [r3, #24]
 8001176:	4a09      	ldr	r2, [pc, #36]	; (800119c <main+0x180>)
 8001178:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800117c:	6193      	str	r3, [r2, #24]
		for(int i = 0; i <= 500000; ++i);
 800117e:	e78c      	b.n	800109a <main+0x7e>
 8001180:	08095038 	.word	0x08095038
 8001184:	2000001c 	.word	0x2000001c
 8001188:	40022800 	.word	0x40022800
 800118c:	40016904 	.word	0x40016904
 8001190:	08055438 	.word	0x08055438
 8001194:	40016800 	.word	0x40016800
 8001198:	004c4b40 	.word	0x004c4b40
 800119c:	40020800 	.word	0x40020800
 80011a0:	0007a120 	.word	0x0007a120
 80011a4:	2003fc1c 	.word	0x2003fc1c
 80011a8:	0036ee80 	.word	0x0036ee80
 80011ac:	2003fc20 	.word	0x2003fc20
 80011b0:	2003fc21 	.word	0x2003fc21
 80011b4:	2003fc22 	.word	0x2003fc22
 80011b8:	2003fc23 	.word	0x2003fc23

080011bc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80011bc:	480d      	ldr	r0, [pc, #52]	; (80011f4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80011be:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80011c0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80011c4:	480c      	ldr	r0, [pc, #48]	; (80011f8 <LoopForever+0x6>)
  ldr r1, =_edata
 80011c6:	490d      	ldr	r1, [pc, #52]	; (80011fc <LoopForever+0xa>)
  ldr r2, =_sidata
 80011c8:	4a0d      	ldr	r2, [pc, #52]	; (8001200 <LoopForever+0xe>)
  movs r3, #0
 80011ca:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80011cc:	e002      	b.n	80011d4 <LoopCopyDataInit>

080011ce <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80011ce:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80011d0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80011d2:	3304      	adds	r3, #4

080011d4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80011d4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80011d6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80011d8:	d3f9      	bcc.n	80011ce <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80011da:	4a0a      	ldr	r2, [pc, #40]	; (8001204 <LoopForever+0x12>)
  ldr r4, =_ebss
 80011dc:	4c0a      	ldr	r4, [pc, #40]	; (8001208 <LoopForever+0x16>)
  movs r3, #0
 80011de:	2300      	movs	r3, #0
  b LoopFillZerobss
 80011e0:	e001      	b.n	80011e6 <LoopFillZerobss>

080011e2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80011e2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80011e4:	3204      	adds	r2, #4

080011e6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80011e6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80011e8:	d3fb      	bcc.n	80011e2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80011ea:	f000 f811 	bl	8001210 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80011ee:	f7ff ff15 	bl	800101c <main>

080011f2 <LoopForever>:

LoopForever:
    b LoopForever
 80011f2:	e7fe      	b.n	80011f2 <LoopForever>
  ldr   r0, =_estack
 80011f4:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 80011f8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80011fc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8001200:	080d4c40 	.word	0x080d4c40
  ldr r2, =_sbss
 8001204:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8001208:	2003fc24 	.word	0x2003fc24

0800120c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800120c:	e7fe      	b.n	800120c <ADC_IRQHandler>
	...

08001210 <__libc_init_array>:
 8001210:	b570      	push	{r4, r5, r6, lr}
 8001212:	4d0d      	ldr	r5, [pc, #52]	; (8001248 <__libc_init_array+0x38>)
 8001214:	4c0d      	ldr	r4, [pc, #52]	; (800124c <__libc_init_array+0x3c>)
 8001216:	1b64      	subs	r4, r4, r5
 8001218:	10a4      	asrs	r4, r4, #2
 800121a:	2600      	movs	r6, #0
 800121c:	42a6      	cmp	r6, r4
 800121e:	d109      	bne.n	8001234 <__libc_init_array+0x24>
 8001220:	4d0b      	ldr	r5, [pc, #44]	; (8001250 <__libc_init_array+0x40>)
 8001222:	4c0c      	ldr	r4, [pc, #48]	; (8001254 <__libc_init_array+0x44>)
 8001224:	f000 f818 	bl	8001258 <_init>
 8001228:	1b64      	subs	r4, r4, r5
 800122a:	10a4      	asrs	r4, r4, #2
 800122c:	2600      	movs	r6, #0
 800122e:	42a6      	cmp	r6, r4
 8001230:	d105      	bne.n	800123e <__libc_init_array+0x2e>
 8001232:	bd70      	pop	{r4, r5, r6, pc}
 8001234:	f855 3b04 	ldr.w	r3, [r5], #4
 8001238:	4798      	blx	r3
 800123a:	3601      	adds	r6, #1
 800123c:	e7ee      	b.n	800121c <__libc_init_array+0xc>
 800123e:	f855 3b04 	ldr.w	r3, [r5], #4
 8001242:	4798      	blx	r3
 8001244:	3601      	adds	r6, #1
 8001246:	e7f2      	b.n	800122e <__libc_init_array+0x1e>
 8001248:	080d4c38 	.word	0x080d4c38
 800124c:	080d4c38 	.word	0x080d4c38
 8001250:	080d4c38 	.word	0x080d4c38
 8001254:	080d4c3c 	.word	0x080d4c3c

08001258 <_init>:
 8001258:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800125a:	bf00      	nop
 800125c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800125e:	bc08      	pop	{r3}
 8001260:	469e      	mov	lr, r3
 8001262:	4770      	bx	lr

08001264 <_fini>:
 8001264:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001266:	bf00      	nop
 8001268:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800126a:	bc08      	pop	{r3}
 800126c:	469e      	mov	lr, r3
 800126e:	4770      	bx	lr
